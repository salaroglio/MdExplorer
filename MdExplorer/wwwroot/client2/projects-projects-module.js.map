{"version":3,"sources":["./src/app/projects/dialogs/clone-project/clone-project.component.ts","./src/app/projects/dialogs/clone-project/clone-project.component.html","./src/app/shared/NgDialogAnimationService.ts","./src/app/projects/open-recent/open-recent.component.ts","./src/app/projects/open-recent/open-recent.component.html","./src/app/projects/projects.module.ts","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html"],"names":[],"mappings":"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","file":"projects-projects-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ShowFileSystemComponent } from '../../../commons/components/show-file-system/show-file-system.component';\nimport { WaitingDialogService } from '../../../commons/waitingdialog/waiting-dialog.service';\nimport { WaitingDialogInfo } from '../../../commons/waitingdialog/waiting-dialog/models/WaitingDialogInfo';\nimport { GitMessagesComponent } from '../../../git/components/git-messages/git-messages.component';\nimport { CloneInfo } from '../../../git/models/cloneRequest';\nimport { GITService } from '../../../git/services/gitservice.service';\nimport { MdFileService } from '../../../md-explorer/services/md-file.service';\nimport { ProjectsService } from '../../../md-explorer/services/projects.service';\nimport { ShowFileMetadata } from '../../../commons/components/show-file-system/show-file-metadata';\n\n@Component({\n  selector: 'app-clone-project',\n  templateUrl: './clone-project.component.html',\n  styleUrls: ['./clone-project.component.scss']\n})\nexport class CloneProjectComponent implements OnInit {\n  public hide = true;\n  public urlpath: string;\n  \n\n  public dataForCloning: CloneInfo = {\n    urlPath: null,\n    directoryPath: null,\n    username: null,\n    password: null,\n    email: null,\n    storeCredentials: true\n  };\n\n\n  constructor(private dialog: MatDialog,\n    private mdFileService: MdFileService,\n    private gitService: GITService,\n    private dialogRef: MatDialogRef<CloneProjectComponent>,    \n    private waitingDialog: WaitingDialogService,\n    private projectService: ProjectsService,\n    private router:Router\n  ) { }\n\n  ngOnInit(): void {\n    this.mdFileService.getTextFromClipboard().subscribe(_ => {\n      this.dataForCloning.urlPath = _.url;\n    });\n    // when the project change, then switch to navigation environment\n    this.projectService.currentProjects$.subscribe(_ => {\n      if (_!=null && _!=undefined) {\n        this.router.navigate(['/main/navigation/document']); //main\n        this.dialogRef.close();\n      }\n    });\n  }\n\n  cloneDirectory(): void {\n    let info = new WaitingDialogInfo();\n    info.message = \"Oh MY GOD... Cloning Repository!\"\n    this.waitingDialog.showMessageBox(info);\n    this.gitService.clone(this.dataForCloning).subscribe(_ => {\n      if (_.areCredentialsCorrect) {\n        this.projectService.setNewFolderProject(this.dataForCloning.directoryPath);\n        \n      } else {\n        const dialogRef = this.dialog.open(GitMessagesComponent, {\n          width: '300px',          \n          data: {message:\"Credentials are not correct\"}\n        });\n      }\n      this.waitingDialog.closeMessageBox();\n      \n\n      this.dialogRef.close(this.dataForCloning);\n    });\n  }\n\n  openFileSystem() {\n    let data = new ShowFileMetadata();\n    data.start = null;\n    data.title = \"C:\\ Folder\";\n    data.typeOfSelection = \"Folders\";\n\n    const dialogRef = this.dialog.open(ShowFileSystemComponent, {\n      width: '800px',\n      height: '600px',\n      panelClass: 'resizable-dialog-container',\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(_ => {\n\n      this.dataForCloning.directoryPath = _.data;\n    });\n\n  }\n}\n","\n<h1 style=\"display:inline;\" mat-dialog-title>\n  <img style=\"display:inline; vertical-align:middle\" src=\"/assets/gitlogo.png\" />\n  <span>Clone Project</span>\n</h1>\n\n<mat-dialog-content>\n  <mat-card style=\"margin-top:10px; margin-bottom:10px\">\n    <div class=\"vertical-form-container\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>URL</mat-label>\n        <input matInput [(ngModel)]=\"dataForCloning.urlPath\" placeholder=\"gitlab url\" required>\n        <mat-hint>Set GIT Path</mat-hint>\n      </mat-form-field>\n      <div class=\"orizzontal-form-container\">\n        <mat-form-field appearance=\"outline\" style=\"width:100%\">\n          <mat-label>Directory</mat-label>\n          <input matInput [(ngModel)]=\"dataForCloning.directoryPath\" placeholder=\"local filesystem\" required>\n          <mat-hint>Set project directory</mat-hint>\n          <button mat-button matSuffix  color=\"primary\" (click)=\"openFileSystem()\"><mat-icon>more_horiz</mat-icon> </button>\n        </mat-form-field>\n\n      </div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>UserName</mat-label>\n        <input matInput [(ngModel)]=\"dataForCloning.username\" placeholder=\"username\" required>\n        <mat-hint>Username</mat-hint>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input matInput [(ngModel)]=\"dataForCloning.password\" placeholder=\"password\"\n               [type]=\"hide ? 'password' : 'text'\" required>\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        <mat-hint *ngIf=\"!dataForCloning.password\">Enter your password</mat-hint>\n      </mat-form-field>\n\n      <section class=\"store-credential\">\n        <mat-checkbox [(ngModel)]=\"dataForCloning.storeCredentials\">Store credentials</mat-checkbox>\n      </section>\n\n    </div>\n\n  </mat-card>\n\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button   mat-stroked-button (click)=\"cloneDirectory()\" color=\"primary\">Clone!</button>\n</mat-dialog-actions>\n","import { Inject, Injectable, NgZone, Optional, TemplateRef } from '@angular/core';\nimport { DialogPosition, MatDialog, MatDialogConfig as _MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\n\nconst diractionMap = { left: 'left', right: 'left', top: 'top', bottom: 'top' };\nconst multyMap = { left: 1, right: -1, top: 1, bottom: -1 };\n\nexport interface AnimationOption {\n  keyframes?: Keyframe[];\n  keyframeAnimationOptions: KeyframeAnimationOptions;\n}\n\nexport interface MatDialogConfig extends _MatDialogConfig {\n  title?: string;\n  animation?:\n  | {\n    to: 'aside' | 'top' | 'bottom' | 'left' | 'right';\n    incomingOptions?: { keyframes?: Keyframe[]; keyframeAnimationOptions: KeyframeAnimationOptions };\n    outgoingOptions?: { keyframes?: Keyframe[]; keyframeAnimationOptions: KeyframeAnimationOptions };\n  }\n  | {\n    to?: 'aside' | 'top' | 'bottom' | 'left' | 'right';\n    incomingOptions?: { keyframes: Keyframe[]; keyframeAnimationOptions: KeyframeAnimationOptions };\n    outgoingOptions?: { keyframes: Keyframe[]; keyframeAnimationOptions: KeyframeAnimationOptions };\n  };\n  position?: DialogPosition & { rowStart?: string; rowEnd?: string };\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgDialogAnimationService {\n  constructor(\n    private dialog: MatDialog,\n    private ngZone: NgZone,\n    @Optional()\n    @Inject('INCOMING_OPTION')\n    private incomingOptions?: AnimationOption,\n    @Optional()\n    @Inject('OUTGOING_OPTION')\n    private outgoingOptions?: AnimationOption,\n  ) {\n    \n    this.incomingOptions = {\n      keyframes: [\n        { transform: \"rotate(360deg)\" },\n        { transform: \"rotate(0)\" }\n      ],\n      keyframeAnimationOptions: { easing: \"ease-in-out\", duration: 500 }\n    };\n    this.outgoingOptions = {\n      keyframes :[\n        { transform: \"rotate(0)\" },\n        { transform: \"rotate(360deg)\" }\n      ],\n      keyframeAnimationOptions : { easing: \"ease-in-out\", duration: 500 }\n      }\n  }\n\n  open<T, D = any, R = any>(\n    componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n    config?: MatDialogConfig,\n  ): MatDialogRef<T, R> {\n    const dir: 'ltr' | 'rtl' =\n      config.direction || (document.querySelectorAll('[dir=\"rtl\"]').length ? 'rtl' : 'ltr');\n    config.direction = config.direction || dir;\n    if (config.animation) {\n      if (config.animation.to === 'aside') {\n        config.animation.to = dir === 'rtl' ? 'left' : 'right';\n      }\n    }\n    \n    if (config.position && config.position.rowEnd) {\n      if (dir === 'rtl') {\n        config.position.right = config.position.rowEnd;\n      } else {\n        config.position.left = config.position.rowEnd;\n      }\n    }\n\n    if (config.position && config.position.rowStart) {\n      if (dir === 'rtl') {\n        config.position.left = config.position.rowStart;\n      } else {\n        config.position.right = config.position.rowStart;\n      }\n    }\n\n    const ref = this.dialog.open(componentOrTemplateRef, config);\n    const container = document.getElementsByTagName('mat-dialog-container')[0] as HTMLElement;\n    if (config.title) {\n      const el = document.createElement('span');\n      el.textContent = config.title;\n      el.className = 'dialogTitle';\n\n      const elClose = document.createElement('span');\n      elClose.textContent = 'X';\n      elClose.className = 'dialogClose';\n      elClose.addEventListener('click', () => {\n        ref.close();\n      });\n\n      const titleContainer = document.createElement('div');\n      titleContainer.className = 'titleContainer';\n      titleContainer.append(el);\n      titleContainer.append(elClose);\n      container.prepend(titleContainer);\n    }\n\n    if (config.animation) {\n      const incomingOptions: AnimationOption = config.animation.incomingOptions ||\n        this.incomingOptions || { keyframeAnimationOptions: { duration: 600, easing: 'ease-in' } };\n\n      const outgoingOptions: AnimationOption = config.animation.outgoingOptions ||\n        this.outgoingOptions || { keyframeAnimationOptions: { duration: 600, easing: 'ease-out' } };\n\n      const wrapper = document.getElementsByClassName('cdk-global-overlay-wrapper')[0];\n\n      const animate = (keyframes, options) => {\n        return wrapper.animate(keyframes, options);\n      };\n      const _afterClosed = new Subject();\n      ref.afterClosed = () => {\n        return _afterClosed.asObservable();\n      };\n      const closeFunction = ref.close;\n\n      let incomeKeyFrames = incomingOptions.keyframes;\n      let outgoingKeyFrames = outgoingOptions.keyframes;\n      if (config.animation.to) {\n        const to = diractionMap[config.animation.to];\n        const keyFrame100 = {};\n        const keyFrame0 = {};\n        keyFrame0[to] = 0;\n        keyFrame100[to] =\n          to === 'top' || to === 'bottom'\n            ? container.clientHeight * multyMap[config.animation.to] + 'px'\n            : container.clientWidth * multyMap[config.animation.to] + 'px';\n        incomeKeyFrames = incomeKeyFrames || [keyFrame100, keyFrame0];\n        outgoingKeyFrames = outgoingKeyFrames || [keyFrame0, keyFrame100];\n      }\n      animate(incomeKeyFrames, incomingOptions.keyframeAnimationOptions);\n      const closeHandler = (dialogResult?: R) => {\n        _afterClosed.next(dialogResult);\n        const animation = animate(outgoingKeyFrames, outgoingOptions.keyframeAnimationOptions);\n        animation.onfinish = () => {\n          (wrapper as HTMLElement).style.display = 'none';\n          this.ngZone.run(() => ref.close(dialogResult));\n        };\n        ref.close = closeFunction;\n      };\n      ref.close = (dialogResult?: R) => closeHandler(dialogResult);\n    }\n\n    return ref;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { bounceInLeftOnEnterAnimation } from 'angular-animations';\nimport { Observable } from 'rxjs';\nimport { MdProject } from '../../md-explorer/models/md-project';\nimport { MdFileService } from '../../md-explorer/services/md-file.service';\nimport { ProjectsService } from '../../md-explorer/services/projects.service';\n\n@Component({\n  selector: 'app-open-recent',\n  templateUrl: './open-recent.component.html',\n  styleUrls: ['./open-recent.component.scss'],\n  animations: [\n    bounceInLeftOnEnterAnimation({ translate: '500px' }),\n  ]\n})\nexport class OpenRecentComponent implements OnInit {\n\n  public dataSource: Observable<MdProject[]>\n\n  constructor(private projectService: ProjectsService,\n    private mdFileService: MdFileService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.projectService.fetchProjects();\n    this.dataSource = this.projectService.mdProjects;\n    // when the project is loaded, then switch to navigation environment\n    this.projectService.currentProjects$.subscribe(_ => {\n      if (_ != null && _ != undefined) {\n        this.router.navigate(['/main/navigation/document']);\n      }      \n    });\n  }\n  quickOpenNotes(path: string) {\n    this.projectService.setNewFolderProjectQuickNotes(path).subscribe(_ => {      \n      this.router.navigate(['/main/navigation/document'])\n    });\n  }\n\n  openNewProject(path: string) {    \n    this.projectService.setNewFolderProject(path);\n  }\n\n  getProjectList(data: any, objectThis: OpenRecentComponent): void {\n    objectThis.projectService.fetchProjects();\n  };\n\n  deleteProject(project: any) {\n    this.projectService.deleteProject(project, this.getProjectList, this);\n  }\n\n}\n","<h1>Recent Projects</h1>\n\n<mat-card *ngFor=\"let element of dataSource | async; let i = index\" [@bounceInLeftOnEnter]=\"{ value: '', params: { delay: i * 100 } }\" >\n  <mat-card-title>{{element.name}}</mat-card-title>\n  <mat-card-subtitle>{{element.path}}</mat-card-subtitle>\n  <mat-card-actions>\n    <button mat-stroked-button color=\"accent\" (click)=\"quickOpenNotes(element.path)\">\n      <img src=\"/assets/run.png\" />\n      Quick notes\n    </button>\n    <button mat-stroked-button color=\"primary\" (click)=\"openNewProject(element.path)\">Open</button>\n    <button mat-raised-button color=\"warn\" (click)=\"deleteProject(element)\"><mat-icon>delete</mat-icon></button>\n  </mat-card-actions>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OpenRecentComponent } from './open-recent/open-recent.component';\nimport { ProjectsComponent } from './projects.component';\nimport { NewProjectComponent } from './new-project/new-project.component';\nimport { CloneProjectComponent } from './dialogs/clone-project/clone-project.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MaterialModule } from '../shared/material.module';\nimport { FormsModule } from '@angular/forms'\nimport { GitModule } from '../git/git.module';\n\nconst routes: Routes = [\n  {\n    path: '', component: ProjectsComponent,\n    children: [\n      { path: '', redirectTo: 'openrecent', pathMatch: 'full' },\n      { path: 'openrecent', component: OpenRecentComponent },\n      { path: 'newproject', component: NewProjectComponent },\n    ]\n  }];\n\n\n@NgModule({\n  declarations: [\n    OpenRecentComponent,\n    ProjectsComponent,\n    NewProjectComponent,\n    CloneProjectComponent,\n   \n  ],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    GitModule,\n  ]\n})\nexport class ProjectsModule {\n  constructor() {\n    console.log('constructor ProjectsModule');\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MdProject } from '../md-explorer/models/md-project';\nimport { MdFileService } from '../md-explorer/services/md-file.service';\nimport { MdServerMessagesService } from '../signalR/services/server-messages.service';\nimport { ProjectsService } from '../md-explorer/services/projects.service';\nimport { NewProjectComponent } from './new-project/new-project.component';\nimport { ShowFileSystemComponent } from '../commons/components/show-file-system/show-file-system.component';\nimport { CloneProjectComponent } from './dialogs/clone-project/clone-project.component';\nimport { NgDialogAnimationService } from '../shared/NgDialogAnimationService';\nimport { SettingsComponent } from '../md-explorer/components/dialogs/settings/settings.component';\nimport { ShowFileMetadata } from '../commons/components/show-file-system/show-file-metadata';\nimport { versionInfo } from '../../environments/version'; // Importa la versione\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit, OnDestroy {\n\n  public appVersion = versionInfo.version; // Rendi la versione disponibile nel template\n  public buildTime = versionInfo.buildTime; // Rendi il timestamp di build disponibile nel template\n\n  constructor(private projectService: ProjectsService,\n    public dialog: MatDialog,\n    private router: Router,\n    private signalRService: MdServerMessagesService,\n    private dialogAn: NgDialogAnimationService,\n  ) { }\n\n    ngOnDestroy(): void {\n      console.log('ProjectsComponent destroyed!');\n    }\n\n  public dataSource: Observable<MdProject[]>\n  public dataSource1 = [{ name: 'Nome progetto', path: 'c:\\folder\\folder\\folder' }]\n\n  ngOnInit(): void {\n    this.projectService.currentProjects$.subscribe(_ => {\n      if (_ != null && _!= undefined) {\n        this.router.navigate(['/main/navigation/document']); //main\n      }\n    });\n  }\n\n\n  openRecent(): void {\n    this.router.navigate(['/projects/openrecent']);\n  }\n\n  prepareToClone(): void {\n    const dialogRef = this.dialog.open(CloneProjectComponent, {\n      width: '600px',\n      maxHeight: '600px',\n      data: null\n    });\n  }\n\n  openNewFolder(): void {\n    let data = new ShowFileMetadata();\n    data.start = null;\n    data.title = \"Select project folder\";\n    data.typeOfSelection = \"Folders\";\n    data.buttonText = \"Create project here\"; // Testo personalizzato\n\n    const dialogRef = this.dialog.open(ShowFileSystemComponent, {\n      width: '800px',\n      height: '600px',\n      panelClass: 'resizable-dialog-container',\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(folderPath => {\n      this.projectService.setNewFolderProject(folderPath.data)\n      // when the project change, then switch to navigation environment\n\n    });\n\n  }\n\n  openSettings(): void {\n    const dialogRef = this.dialogAn.open(SettingsComponent, {\n      width: '600px',\n      animation: {},\n    });\n  }\n}\n","<div class=\"container-flex\">\n  <div class=\"container-columns\">\n  </div>\n  <div class=\"container-columns\">\n    <div class=\"container-first-column\">\n      <router-outlet></router-outlet>\n    </div>\n    <div>\n      <h1>Get started</h1>\n      <mat-card>\n        <mat-card-title>Clone a repository</mat-card-title>\n        <mat-card-subtitle>Get code from an online repository like GitLab</mat-card-subtitle>\n        <mat-card-actions>\n          <button mat-stroked-button data-test=\"clone-button\" (click)=\"prepareToClone()\" color=\"primary\">Clone</button>\n        </mat-card-actions>\n      </mat-card>\n      <mat-card>\n        <mat-card-title>Create new project</mat-card-title>\n        <mat-card-subtitle>Choose filesystem folder to get started</mat-card-subtitle>\n        <mat-card-actions>\n          <button mat-stroked-button color=\"primary\" data-test=\"new-folder-button\" (click)=\"openNewFolder()\">Create</button>\n        </mat-card-actions>\n      </mat-card>\n      <mat-card>\n        <mat-card-title>General settings</mat-card-title>\n        <mat-card-subtitle>Change main settings</mat-card-subtitle>\n        <mat-card-actions>\n          <button mat-stroked-button color=\"primary\" data-test=\"settings-button\" (click)=\"openSettings()\">Settings</button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n  </div>\n\n</div>\n"],"sourceRoot":"webpack:///"}