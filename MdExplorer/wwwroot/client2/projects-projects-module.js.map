{"version":3,"sources":["./src/app/projects/new-project/new-project.component.ts","./src/app/projects/new-project/new-project.component.html","./src/app/projects/clone-project/clone-project.component.ts","./src/app/projects/clone-project/clone-project.component.html","./src/app/projects/open-recent/open-recent.component.html","./src/app/projects/open-recent/open-recent.component.ts","./src/app/projects/projects.module.ts","./src/app/md-explorer/models/md-file.ts","./src/app/projects/tree-dynamic-example/tree-dynamic-example.component.ts","./src/app/projects/tree-dynamic-example/tree-dynamic-example.component.html","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html"],"names":[],"mappings":"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","file":"projects-projects-module.js","sourcesContent":["import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { CollectionViewer, SelectionChange, DataSource } from '@angular/cdk/collections';\r\nimport { Component, Injectable, OnInit } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OpenNewFolderComponent } from '../../md-explorer/components/projects/open-new-folder/open-new-folder.component';\r\nimport { IFileInfoNode } from '../../md-explorer/models/IFileInfoNode';\r\nimport { MdFile } from '../../md-explorer/models/md-file';\r\nimport { MdFileService } from '../../md-explorer/services/md-file.service';\r\nimport { COMPOSITION_BUFFER_MODE } from '@angular/forms';\r\n\r\n// IFileInfoNode è interfaccia\r\n// MdFile è la classe -> DynamicFlatNode\r\n\r\n\r\n/**\r\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\r\n * the descendants data from the database.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class DynamicDatabase {\r\n\r\n   constructor(private mdFileService: MdFileService,) {\r\n     this.mdFileService.loadDynFolders('root', 1);\r\n     \r\n     var md1 = new MdFile('12Folder', 'c:primoFolder', 0, true);\r\n     var md2 = new MdFile('2Folder', 'c:primoFoldersottoFolder', 1, true);\r\n     var md3 = new MdFile('3Folder', 'c:primoFoldersottoFoldersottoFolder', 2, true);\r\n     var md4 = new MdFile('4Folder', 'c:primoFoldersottoFoldersottoFolder', 2, true);\r\n     var md5 = new MdFile('5Folder', 'c:cuccu', 3, false);\r\n     this.dataMap.set(md1, [md2]);\r\n     this.dataMap.set(md2, [md3, md4]);\r\n     //this.dataMap.set(md3, [md4]);\r\n     this.dataMap.set(md4, [md5]);\r\n\r\n    \r\n    var test = this.dataMap.get(md1);\r\n     this.rootLevelNodes = [md1];\r\n  }\r\n\r\n  dataMap = new Map<MdFile, MdFile[]>();\r\n  rootLevelNodes: MdFile[]; \r\n\r\n  /** Initial data from database */\r\n  initialData():MdFile[] {    \r\n    return this.rootLevelNodes;\r\n  }\r\n\r\n  getChildren(node: MdFile): MdFile[] | undefined {\r\n    \r\n    var test = this.dataMap.get(node);   \r\n    return test;\r\n  }\r\n\r\n  isExpandable(node: MdFile): boolean {\r\n    return this.dataMap.has(node);\r\n  }\r\n}\r\n\r\nexport class DynamicDataSource implements DataSource<MdFile> {\r\n\r\n  dataChange = new BehaviorSubject<MdFile[]>([]);\r\n\r\n  get data(): MdFile[] { return this.dataChange.value; }\r\n  set data(value: MdFile[]) {\r\n    this._treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private _treeControl: FlatTreeControl<MdFile>,\r\n    private _database: DynamicDatabase, private _mdFileService: MdFileService ) {\r\n    this.data = _database.initialData();\r\n    this._mdFileService.loadDocumentFolder('root', 1).subscribe(_ => {\r\n      debugger;\r\n      this.data = _;\r\n    });\r\n    //this.dataChange = _mdFileService._mdDynFolderDocument;\r\n    //_mdFileService.loadDynFolders('root', 1);\r\n  }\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<MdFile[]> {\r\n    this._treeControl.expansionModel.changed.subscribe(change => {\r\n      if ((change as SelectionChange<MdFile>).added ||\r\n        (change as SelectionChange<MdFile>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<MdFile>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\r\n\r\n  disconnect(collectionViewer: CollectionViewer): void { }\r\n\r\n  /** Handle expand/collapse behaviors */\r\n  handleTreeControl(change: SelectionChange<MdFile>) {\r\n    if (change.added) {\r\n      change.added.forEach(node => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the node, remove from display list\r\n   */\r\n  toggleNode(node: MdFile, expand: boolean) {\r\n    debugger;\r\n    this._mdFileService.loadDocumentFolder(node.path, node.level + 1).subscribe(_ => {\r\n      debugger;\r\n      const children = _;\r\n      const index = this.data.indexOf(node);\r\n\r\n      if (!children || index < 0) { // If no children, or cannot find the node, no op\r\n        return;\r\n      }\r\n\r\n      node.isLoading = true;\r\n\r\n      setTimeout(() => {\r\n        if (expand) {\r\n          const nodes = children; // punto per fare chiamata remota\r\n          this.data.splice(index + 1, 0, ...nodes);\r\n        } else {\r\n          let count = 0;\r\n          for (let i = index + 1; i < this.data.length\r\n            && this.data[i].level > node.level; i++, count++) { }\r\n          this.data.splice(index + 1, count);\r\n        }\r\n\r\n        // notify the change\r\n        this.dataChange.next(this.data);\r\n        node.isLoading = false;\r\n      });\r\n    });    \r\n  }\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-project',\r\n  templateUrl: './new-project.component.html',\r\n  styleUrls: ['./new-project.component.scss']\r\n})\r\nexport class NewProjectComponent implements OnInit {\r\n\r\n \r\n  activeNode: any;\r\n  folder: {\r\n    name: string,\r\n    path: string\r\n  }\r\n\r\n  getLevel = (node: MdFile) => node.level;\r\n\r\n  isExpandable = (node: MdFile) => node.expandable;\r\n\r\n  treeControl: FlatTreeControl<MdFile>;\r\n\r\n  dataSource: DynamicDataSource;\r\n\r\n  hasChild = (_: number, _nodeData: MdFile) => _nodeData.expandable;\r\n   \r\n\r\n  constructor(database: DynamicDatabase, private mdFileService:MdFileService) {\r\n    this.treeControl = new FlatTreeControl<MdFile>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new DynamicDataSource(this.treeControl, database, mdFileService);\r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.folder = { name: \"test\", path: \"test path\" };\r\n  }\r\n\r\n  public getFolder(node: IFileInfoNode) {    \r\n    this.folder.name = node.name;\r\n    this.folder.path = node.path;\r\n  }\r\n\r\n  public closeDialog() {\r\n    // switch to new path\r\n  }\r\n\r\n}\r\n","<div class=\"flex-container\">\r\n  <div class=\"flex-items-overflow\">\r\n\r\n    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <!-- This is the tree node template for leaf nodes -->\r\n      <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n        <!-- use a disabled button to provide padding for tree leaf -->\r\n        <button mat-icon-button>\r\n          <mat-icon class=\"mat-icon-rtl-mirror\">\r\n            {{'folder'}}\r\n          </mat-icon>\r\n        </button>\r\n        <a style=\"cursor:pointer\" (click)=\"getFolder(node);activeNode = node;\">{{node.name}}</a>\r\n        <!--{{node.name}}-->\r\n      </mat-tree-node>\r\n      <!-- This is the tree node template for expandable nodes -->\r\n      <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" (click)=\"activeNode = node\" matTreeNodePadding>\r\n        <button mat-icon-button matTreeNodeToggle\r\n                [attr.aria-label]=\"'Toggle ' + node.name\">\r\n          <mat-icon class=\"mat-icon-rtl-mirror\">\r\n            {{treeControl.isExpanded(node) ? 'folder_open' : 'folder'}}\r\n          </mat-icon>\r\n        </button>\r\n        <a style=\"cursor:pointer\" (click)=\"getFolder(node)\">{{node.name}}</a>\r\n        <!--{{node.name}}-->\r\n      </mat-tree-node>\r\n    </mat-tree>\r\n  </div>\r\n\r\n\r\n\r\n  <div class=\"flex-items\">\r\n    <mat-card>\r\n      <mat-card-title>{{folder.name}}</mat-card-title>\r\n      <mat-card-subtitle>{{folder.path}}</mat-card-subtitle>\r\n      <mat-card-actions>\r\n        <button mat-button (click)=\"closeDialog()\">Open</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clone-project',\n  templateUrl: './clone-project.component.html',\n  styleUrls: ['./clone-project.component.scss']\n})\nexport class CloneProjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>clone-project works!</p>\n","<h1>Open recent</h1>\n<mat-card *ngFor=\"let element of dataSource | async\">\n  <mat-card-title>{{element.name}}</mat-card-title>\n  <mat-card-subtitle>{{element.path}}</mat-card-subtitle>\n  <mat-card-actions>\n    <button mat-stroked-button color=\"accent\" (click)=\"quickOpenNotes(element.path)\">\n      <img src=\"/assets/run.png\" />\n      Quick notes\n    </button>\n    <button mat-stroked-button color=\"primary\" (click)=\"openNewProject(element.path)\">Open</button>\n    <button mat-raised-button color=\"warn\" (click)=\"deleteProject(element)\"><mat-icon>delete</mat-icon></button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MdProject } from '../../md-explorer/models/md-project';\r\nimport { MdFileService } from '../../md-explorer/services/md-file.service';\r\nimport { ProjectsService } from '../../md-explorer/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-open-recent',\r\n  templateUrl: './open-recent.component.html',\r\n  styleUrls: ['./open-recent.component.scss']\r\n})\r\nexport class OpenRecentComponent implements OnInit {\r\n\r\n  public dataSource: Observable<MdProject[]>\r\n\r\n  constructor(private projectService: ProjectsService,\r\n    private mdFileService: MdFileService, private router: Router, private route:ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.fetchProjects();\r\n    this.dataSource = this.projectService.mdProjects;\r\n  }\r\n  quickOpenNotes(path: string) {\r\n    this.projectService.setNewFolderProjectQuickNotes(path, this.loadNewProject, this);\r\n  }\r\n\r\n  openNewProject(path: string) {    \r\n    this.projectService.setNewFolderProject(path, this.loadNewProject, this);\r\n  }\r\n\r\n  getProjectList(data: any, objectThis: OpenRecentComponent): void {\r\n    objectThis.projectService.fetchProjects();\r\n  };\r\n\r\n  deleteProject(project: any) {\r\n    this.projectService.deleteProject(project, this.getProjectList, this);\r\n  }\r\n\r\n  loadNewProject(data: any, objectThis: OpenRecentComponent) {    \r\n    var dateTime = new Date();\r\n    objectThis.mdFileService.loadAll(null, null);\r\n    objectThis.router.navigate(['/main']);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OpenRecentComponent } from './open-recent/open-recent.component';\r\nimport { ProjectsComponent } from './projects.component';\r\nimport { NewProjectComponent } from './new-project/new-project.component';\r\nimport { CloneProjectComponent } from './clone-project/clone-project.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { TreeDynamicExampleComponent } from './tree-dynamic-example/tree-dynamic-example.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ProjectsComponent,\r\n    children: [\r\n      {path:'',redirectTo:'openrecent',pathMatch:'full'},\r\n      { path: 'openrecent', component: OpenRecentComponent },\r\n      { path: 'newproject', component: NewProjectComponent },\r\n      { path: 'tree', component: TreeDynamicExampleComponent },\r\n    ]\r\n  }];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OpenRecentComponent,\r\n    ProjectsComponent,\r\n    NewProjectComponent,\r\n    CloneProjectComponent,\r\n    TreeDynamicExampleComponent,    \r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    MaterialModule,\r\n    \r\n  ]\r\n})\r\nexport class ProjectsModule { }\r\n","import { IFileInfoNode } from \"./IFileInfoNode\";\r\n\r\n\r\nexport class MdFile implements IFileInfoNode {\r\n  constructor(public name:string,public path:string, public level: number, public expandable:boolean) {\r\n\r\n  }  \r\n  type: string;\r\n  children: MdFile[];\r\n  isLoading: boolean;\r\n}\r\n","import { CollectionViewer, SelectionChange, DataSource } from '@angular/cdk/collections';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, Injectable } from '@angular/core';\r\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n/** Flat node with expandable and level information */\r\nexport class DynamicFlatNode {\r\n  constructor(public item: string, public level = 1, public expandable = false,\r\n    public isLoading = false) { }\r\n\r\n}\r\n\r\n/**\r\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\r\n * the descendants data from the database.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class DynamicDatabase {\r\n\r\n  dataMap = new Map<string, string[]>([\r\n    ['Fruits', ['Apple', 'Orange', 'Banana']],\r\n    ['Vegetables', ['Tomato', 'Potato', 'Onion']],\r\n    ['Apple', ['Fuji', 'Macintosh']],\r\n    ['Onion', ['Yellow', 'White', 'Purple']]\r\n  ]);\r\n\r\n  \r\n\r\n  rootLevelNodes: string[] = ['Fruits', 'Vegetables'];\r\n  rootLevelNodesFile: string[] = ['c:\\test'];\r\n\r\n  /** Initial data from database */\r\n  initialData(): DynamicFlatNode[] {\r\n    return this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\r\n  }\r\n  \r\n\r\n  getChildren(node: string): string[] | undefined {\r\n    return this.dataMap.get(node);\r\n  }\r\n\r\n  isExpandable(node: string): boolean {\r\n    return this.dataMap.has(node);\r\n  }\r\n}\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\nexport class DynamicDataSource implements DataSource<DynamicFlatNode> {\r\n\r\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\r\n\r\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\r\n  set data(value: DynamicFlatNode[]) {\r\n    this._treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private _treeControl: FlatTreeControl<DynamicFlatNode>,\r\n    private _database: DynamicDatabase) { }\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\r\n    this._treeControl.expansionModel.changed.subscribe(change => {\r\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\r\n        (change as SelectionChange<DynamicFlatNode>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\r\n\r\n  disconnect(collectionViewer: CollectionViewer): void { }\r\n\r\n  /** Handle expand/collapse behaviors */\r\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\r\n    if (change.added) {\r\n      change.added.forEach(node => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the node, remove from display list\r\n   */\r\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\r\n    const children = this._database.getChildren(node.item);\r\n    const index = this.data.indexOf(node);\r\n    if (!children || index < 0) { // If no children, or cannot find the node, no op\r\n      return;\r\n    }\r\n\r\n    node.isLoading = true;\r\n\r\n    setTimeout(() => {\r\n      if (expand) {\r\n        const nodes = children.map(name =>\r\n          new DynamicFlatNode(name, node.level + 1, this._database.isExpandable(name)));\r\n        this.data.splice(index + 1, 0, ...nodes);\r\n      } else {\r\n        let count = 0;\r\n        for (let i = index + 1; i < this.data.length\r\n          && this.data[i].level > node.level; i++, count++) { }\r\n        this.data.splice(index + 1, count);\r\n      }\r\n\r\n      // notify the change\r\n      this.dataChange.next(this.data);\r\n      node.isLoading = false;\r\n    }, 1000);\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-tree-dynamic-example',\r\n  templateUrl: './tree-dynamic-example.component.html',\r\n  styleUrls: ['./tree-dynamic-example.component.scss']\r\n})\r\nexport class TreeDynamicExampleComponent  {\r\n\r\n  constructor(database: DynamicDatabase) {\r\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\r\n\r\n    this.dataSource.data = database.initialData();\r\n  }\r\n\r\n  treeControl: FlatTreeControl<DynamicFlatNode>;\r\n\r\n  dataSource: DynamicDataSource;\r\n\r\n  getLevel = (node: DynamicFlatNode) => node.level;\r\n\r\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\r\n\r\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n    <button mat-icon-button disabled></button>\r\n    {{node.item}}\r\n  </mat-tree-node>\r\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n    <button mat-icon-button\r\n            [attr.aria-label]=\"'Toggle ' + node.item\" matTreeNodeToggle>\r\n      <mat-icon class=\"mat-icon-rtl-mirror\">\r\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n      </mat-icon>\r\n    </button>\r\n    {{node.item}}\r\n    <mat-progress-bar *ngIf=\"node.isLoading\"\r\n                      mode=\"indeterminate\"\r\n                      class=\"example-tree-progress-bar\"></mat-progress-bar>\r\n  </mat-tree-node>\r\n</mat-tree>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MdProject } from '../md-explorer/models/md-project';\r\nimport { MdFileService } from '../md-explorer/services/md-file.service';\r\nimport { ProjectsService } from '../md-explorer/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit {\r\n\r\n  constructor(private projectService: ProjectsService,\r\n    public dialog: MatDialog,\r\n    private router:Router\r\n  ) { }\r\n\r\n  public dataSource: Observable<MdProject[]>\r\n  public dataSource1 = [{ name: 'Nome progetto', path: 'c:\\folder\\folder\\folder' }]\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.fetchProjects();\r\n    this.dataSource = this.projectService.mdProjects;\r\n  }\r\n\r\n\r\n  openRecent(): void {\r\n    this.router.navigate(['/projects/openrecent']);\r\n  }\r\n\r\n  openNewFolder(): void {\r\n    this.router.navigate(['/projects/newproject']);\r\n    //const dialogRef = this.dialog.open(OpenNewFolderComponent, {\r\n    //  width: '600px',\r\n    //  data: { name: 'test' }\r\n    //});\r\n\r\n    //dialogRef.afterClosed().subscribe(selectedPath => {\r\n    //  this.projectService.setNewFolderProject(selectedPath, this.loadNewProject, this);\r\n\r\n    //});\r\n  }\r\n\r\n  openNewFolderExample(): void {\r\n    this.router.navigate(['/projects/tree']);\r\n    \r\n  }\r\n\r\n\r\n}\r\n","\n\n\n<div class=\"container-flex\">\n  <div class=\"container-title\">\n    <div class=\"item\">\n      <h1><strong>Markdown Explorer</strong></h1>\n    </div>\n  </div>\n  <div class=\"container-columns\">\n  </div>\n  <div class=\"container-columns\">\n    <div class=\"container-first-column\">\n      <router-outlet></router-outlet>\n    </div>\n    <div>\n      <h1>Get started</h1>\n      <mat-card>\n        <mat-card-title>Open recent project</mat-card-title>\n        <mat-card-subtitle>Get recent project</mat-card-subtitle>\n        <mat-card-actions>\n          <button mat-stroked-button color=\"primary\" (click)=\"openRecent()\">Open recent list</button>\n        </mat-card-actions>\n      </mat-card>\n      <mat-card>\n        <mat-card-title>Clone a repository</mat-card-title>\n        <mat-card-subtitle>Get code from an online repository like GitLab</mat-card-subtitle>\n        <mat-card-actions>\n          <button mat-stroked-button color=\"primary\">Clone</button>\n        </mat-card-actions>\n      </mat-card>\n      <mat-card>\n        <mat-card-title>Create new project</mat-card-title>\n        <mat-card-subtitle>Choose filesystem folder to get started</mat-card-subtitle>\n        <mat-card-actions>\n          <button mat-stroked-button color=\"primary\" (click)=\"openNewFolder()\">Create</button>\n        </mat-card-actions>\n      </mat-card>\n      <mat-card>\n        <mat-card-title>Example to delete</mat-card-title>\n        <mat-card-subtitle>Choose filesystem folder to get started</mat-card-subtitle>\n        <mat-card-actions>\n          <button mat-stroked-button color=\"primary\" (click)=\"openNewFolderExample()\">Create</button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n  </div>\n\n</div>\n\n"],"sourceRoot":"webpack:///"}