{"version":3,"sources":["./src/app/projects/dialogs/clone-project/clone-project.component.ts","./src/app/projects/dialogs/clone-project/clone-project.component.html","./src/app/projects/open-recent/open-recent.component.ts","./src/app/projects/open-recent/open-recent.component.html","./src/app/projects/projects.module.ts","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html"],"names":[],"mappings":"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","file":"projects-projects-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-clone-project',\r\n  templateUrl: './clone-project.component.html',\r\n  styleUrls: ['./clone-project.component.scss']\r\n})\r\nexport class CloneProjectComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>clone-project works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { bounceInLeftOnEnterAnimation } from 'angular-animations';\r\nimport { Observable } from 'rxjs';\r\nimport { MdProject } from '../../md-explorer/models/md-project';\r\nimport { MdFileService } from '../../md-explorer/services/md-file.service';\r\nimport { ProjectsService } from '../../md-explorer/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-open-recent',\r\n  templateUrl: './open-recent.component.html',\r\n  styleUrls: ['./open-recent.component.scss'],\r\n  animations: [\r\n    bounceInLeftOnEnterAnimation({ translate: '500px' }),\r\n  ]\r\n})\r\nexport class OpenRecentComponent implements OnInit {\r\n\r\n  public dataSource: Observable<MdProject[]>\r\n\r\n  constructor(private projectService: ProjectsService,\r\n    private mdFileService: MdFileService,\r\n    private router: Router,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.fetchProjects();\r\n    this.dataSource = this.projectService.mdProjects;\r\n  }\r\n  quickOpenNotes(path: string) {\r\n    this.projectService.setNewFolderProjectQuickNotes(path).subscribe(_ => {      \r\n      this.router.navigate(['/main/navigation/document'])\r\n    });\r\n  }\r\n\r\n  openNewProject(path: string) {    \r\n    this.projectService.setNewFolderProject(path).subscribe(_ => {      \r\n      this.router.navigate(['/main/navigation/document']);\r\n    });\r\n  }\r\n\r\n  getProjectList(data: any, objectThis: OpenRecentComponent): void {\r\n    objectThis.projectService.fetchProjects();\r\n  };\r\n\r\n  deleteProject(project: any) {\r\n    this.projectService.deleteProject(project, this.getProjectList, this);\r\n  }\r\n\r\n}\r\n","<h1>Recent Projects</h1>\r\n\r\n<mat-card *ngFor=\"let element of dataSource | async; let i = index\" [@bounceInLeftOnEnter]=\"{ value: '', params: { delay: i * 100 } }\" >\r\n  <mat-card-title>{{element.name}}</mat-card-title>\r\n  <mat-card-subtitle>{{element.path}}</mat-card-subtitle>\r\n  <mat-card-actions>\r\n    <button mat-stroked-button color=\"accent\" (click)=\"quickOpenNotes(element.path)\">\r\n      <img src=\"/assets/run.png\" />\r\n      Quick notes\r\n    </button>\r\n    <button mat-stroked-button color=\"primary\" (click)=\"openNewProject(element.path)\">Open</button>\r\n    <button mat-raised-button color=\"warn\" (click)=\"deleteProject(element)\"><mat-icon>delete</mat-icon></button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OpenRecentComponent } from './open-recent/open-recent.component';\r\nimport { ProjectsComponent } from './projects.component';\r\nimport { NewProjectComponent } from './new-project/new-project.component';\r\nimport { CloneProjectComponent } from './dialogs/clone-project/clone-project.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MaterialModule } from '../shared/material.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ProjectsComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'openrecent', pathMatch: 'full' },\r\n      { path: 'openrecent', component: OpenRecentComponent },\r\n      { path: 'newproject', component: NewProjectComponent },\r\n    ]\r\n  }];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OpenRecentComponent,\r\n    ProjectsComponent,\r\n    NewProjectComponent,\r\n    CloneProjectComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    MaterialModule,\r\n\r\n  ]\r\n})\r\nexport class ProjectsModule {\r\n  constructor() {\r\n    console.log('constructor ProjectsModule');\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MdProject } from '../md-explorer/models/md-project';\r\nimport { MdFileService } from '../md-explorer/services/md-file.service';\r\nimport { ServerMessagesService } from '../signalr/services/server-messages.service';\r\nimport { ProjectsService } from '../md-explorer/services/projects.service';\r\nimport { NewProjectComponent } from './new-project/new-project.component';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(private projectService: ProjectsService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private signalRService: ServerMessagesService\r\n  ) { }\r\n\r\n    ngOnDestroy(): void {\r\n      console.log('ProjectsComponent destroyed!');\r\n    }\r\n\r\n  public dataSource: Observable<MdProject[]>\r\n  public dataSource1 = [{ name: 'Nome progetto', path: 'c:\\folder\\folder\\folder' }]\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  openRecent(): void {\r\n    this.router.navigate(['/projects/openrecent']);\r\n  }\r\n\r\n  openNewFolder(): void {\r\n    const dialogRef = this.dialog.open(NewProjectComponent, {\r\n      width: '600px',\r\n      data: null\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-flex\">\r\n  <div class=\"container-title\">\r\n    <div class=\"item\">\r\n      <h1><strong>Markdown Explorer</strong></h1>\r\n    </div>\r\n  </div>\r\n  <div class=\"container-columns\">\r\n  </div>\r\n  <div class=\"container-columns\">\r\n    <div class=\"container-first-column\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <div>\r\n      <h1>Get started</h1>\r\n      <mat-card>\r\n        <mat-card-title>Clone a repository</mat-card-title>\r\n        <mat-card-subtitle>Get code from an online repository like GitLab</mat-card-subtitle>\r\n        <mat-card-actions>\r\n          <button mat-stroked-button color=\"primary\">Clone</button>\r\n          <button mat-stroked-button color=\"primary\">\r\n            <mat-icon>build</mat-icon>\r\n          </button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <mat-card>\r\n        <mat-card-title>Create new project</mat-card-title>\r\n        <mat-card-subtitle>Choose filesystem folder to get started</mat-card-subtitle>\r\n        <mat-card-actions>\r\n          <button mat-stroked-button color=\"primary\" (click)=\"openNewFolder()\">Create</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n"],"sourceRoot":"webpack:///"}