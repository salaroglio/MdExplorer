{"version":3,"sources":["./src/app/projects/new-project/new-project.component.ts","./src/app/projects/new-project/new-project.component.html","./src/app/projects/dialogs/clone-project/clone-project.component.ts","./src/app/projects/dialogs/clone-project/clone-project.component.html","./src/app/projects/open-recent/open-recent.component.html","./src/app/projects/open-recent/open-recent.component.ts","./src/app/projects/projects.module.ts","./src/app/md-explorer/services/projects.service.ts","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AAGM;AACrB;AAEqB;;;;;;;;;;;;ICDpD,mFAA6D;IAE3D,4EAAwB;IACtB,+EAAsC;IACpC,uDACF;IAAA,4DAAW;IACb,4DAAS;IACT,wEAAuE;IAA7C,+XAA4C;IAAC,uDAAa;IAAA,4DAAI;IAE1F,4DAAgB;;;IALV,0DACF;IADE,oFACF;IAEqE,0DAAa;IAAb,6EAAa;;;;IAItF,oFAAwG;IAA/C,gXAA2B;IAClF,6EACkD;IAChD,+EAAsC;IACpC,uDACF;IAAA,4DAAW;IACb,4DAAS;IACT,wEAAoD;IAA1B,kWAAyB;IAAC,uDAAa;IAAA,4DAAI;IAEvE,4DAAgB;;;;IAPN,0DAAyC;IAAzC,iGAAyC;IAE7C,0DACF;IADE,6IACF;IAEkD,0DAAa;IAAb,6EAAa;;ADXzE,8BAA8B;AAC9B,wCAAwC;AAGxC;;;GAGG;AAEI,MAAM,eAAe;IAE1B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAkBhD,YAAO,GAAG,IAAI,GAAG,EAAoB,CAAC;QAjBpC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAE7C,IAAI,GAAG,GAAG,IAAI,kEAAM,CAAC,UAAU,EAAE,eAAe,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,GAAG,GAAG,IAAI,kEAAM,CAAC,SAAS,EAAE,0BAA0B,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACrE,IAAI,GAAG,GAAG,IAAI,kEAAM,CAAC,SAAS,EAAE,qCAAqC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAChF,IAAI,GAAG,GAAG,IAAI,kEAAM,CAAC,SAAS,EAAE,qCAAqC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAChF,IAAI,GAAG,GAAG,IAAI,kEAAM,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAClC,+BAA+B;QAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAG7B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAKD,iCAAiC;IACjC,WAAW;QACT,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,IAAY;QAEtB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;;8EApCU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBADF,MAAM;AAwCzB,MAAM,iBAAiB;IAU5B,YAAoB,YAAqC,EAC/C,SAA0B,EAAU,cAA6B;QADvD,iBAAY,GAAZ,YAAY,CAAyB;QAC/C,cAAS,GAAT,SAAS,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAe;QAT3E,eAAU,GAAG,IAAI,oDAAe,CAAW,EAAE,CAAC,CAAC;QAU7C,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YAC9D,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,wDAAwD;QACxD,2CAA2C;IAC7C,CAAC;IAdD,IAAI,IAAI,KAAe,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACtD,IAAI,IAAI,CAAC,KAAe;QACtB,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAYD,OAAO,CAAC,gBAAkC;QACxC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1D,IAAK,MAAkC,CAAC,KAAK;gBAC1C,MAAkC,CAAC,OAAO,EAAE;gBAC7C,IAAI,CAAC,iBAAiB,CAAC,MAAiC,CAAC,CAAC;aAC3D;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,kDAAK,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,UAAU,CAAC,gBAAkC,IAAU,CAAC;IAExD,uCAAuC;IACvC,iBAAiB,CAAC,MAA+B;QAC/C,IAAI,MAAM,CAAC,KAAK,EAAE;YAChB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;SAC3D;QACD,IAAI,MAAM,CAAC,OAAO,EAAE;YAClB,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;SAChF;IACH,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,IAAY,EAAE,MAAe;QACtC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YAE9E,MAAM,QAAQ,GAAG,CAAC,CAAC;YACnB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEtC,IAAI,CAAC,QAAQ,IAAI,KAAK,GAAG,CAAC,EAAE,EAAE,iDAAiD;gBAC7E,OAAO;aACR;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,MAAM,EAAE;oBACV,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,iCAAiC;oBACzD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;iBAC1C;qBAAM;oBACL,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM;2BACvC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG;oBACvD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;iBACpC;gBAED,oBAAoB;gBACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAQM,MAAM,mBAAmB;IAoB9B,YAAoB,QAAyB,EACnC,aAA4B,EAC5B,MAAc,EACd,cAA+B,EAC/B,SAA4C;QAJlC,aAAQ,GAAR,QAAQ,CAAiB;QACnC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAiB;QAC/B,cAAS,GAAT,SAAS,CAAmC;QAftD,aAAQ,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;QAExC,iBAAY,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QAMjD,aAAQ,GAAG,CAAC,CAAS,EAAE,SAAiB,EAAE,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC;QAQhE,IAAI,CAAC,WAAW,GAAG,IAAI,iEAAe,CAAS,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACjF,IAAI,CAAC,UAAU,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;IACrF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IACvD,CAAC;IAEM,SAAS,CAAC,IAAmB;QAClC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC/B,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACtE,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM;YACtE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;;sFA5CU,mBAAmB,kEAoBA,eAAe;mGApBlC,mBAAmB;QC/IhC,yEAA4B;QAC1B,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAC1B,yEAAiC;QAC/B,8EAAgE;QAE9D,mIASgB;QAEhB,mIASgB;QAClB,4DAAW;QACb,4DAAM;QAEN,yEAAkC;QAChC,yEAAwB;QACtB,iFAAgB;QAAA,wDAAe;QAAA,4DAAiB;QAChD,qFAAmB;QAAA,wDAAe;QAAA,4DAAoB;QACxD,4DAAM;QACN,uEAAK;QACH,6EAAmE;QAAxB,4IAAS,iBAAa,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAClF,4DAAM;QACR,4DAAM;QAGR,4DAAM;;QArCQ,0DAAyB;QAAzB,sFAAyB;QAaQ,0DAAc;QAAd,4FAAc;QAevC,0DAAe;QAAf,gFAAe;QACZ,0DAAe;QAAf,gFAAe;;;;;;;;;;;;;;;;;;ACzBjC,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;qGAArB,qBAAqB;QCPlC,oEAAG;QAAA,+EAAoB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICC3B,2EAAqD;IACnD,iFAAgB;IAAA,uDAAgB;IAAA,4DAAiB;IACjD,oFAAmB;IAAA,uDAAgB;IAAA,4DAAoB;IACvD,mFAAkB;IAChB,4EAAiF;IAAvC,kXAAsC;IAC9E,oEAA6B;IAC7B,wEACF;IAAA,4DAAS;IACT,4EAAkF;IAAvC,kXAAsC;IAAC,gEAAI;IAAA,4DAAS;IAC/F,6EAAwE;IAAjC,6WAAgC;IAAC,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAAA,4DAAS;IAC9G,4DAAmB;IACrB,4DAAW;;;IAVO,0DAAgB;IAAhB,gFAAgB;IACb,0DAAgB;IAAhB,gFAAgB;;ACS9B,MAAM,mBAAmB;IAI9B,YAAoB,cAA+B,EACzC,aAA4B,EAAU,MAAc,EAAU,KAAoB;QADxE,mBAAc,GAAd,cAAc,CAAiB;QACzC,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAe;IAAI,CAAC;IAEjG,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;IACnD,CAAC;IACD,cAAc,CAAC,IAAY;QACzB,IAAI,CAAC,cAAc,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACpE,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,IAAY;QACzB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YAC1D,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,IAAS,EAAE,UAA+B;QACvD,UAAU,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IAC5C,CAAC;IAAA,CAAC;IAEF,aAAa,CAAC,OAAY;QACxB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;;sFA/BU,mBAAmB;mGAAnB,mBAAmB;QDZhC,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,0HAWW;;;QAXmB,0DAAqB;QAArB,oJAAqB;;;;;;;;;;;;;;AEAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC2B;AACjB;AACiB;AACc;AACjC;AACI;;;AAE3D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB;QACtC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;YACzD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sFAAmB,EAAE;YACtD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sFAAmB,EAAE;SACvD;KACF;CAAC,CAAC;AAiBE,MAAM,cAAc;IACzB;QACE,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC5C,CAAC;;4EAHU,cAAc;6FAAd,cAAc;iGAPhB;YACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,4DAAY;YACZ,sEAAc;SAEf;mIAEU,cAAc,mBAZvB,sFAAmB;QACnB,qEAAiB;QACjB,sFAAmB;QACnB,oGAAqB,2EAIrB,4DAAY;QACZ,sEAAc;;;;;;;;;;;;;AC3BlB;AAAA;AAAA;AAAA;AAAA;AAAmD;;;AAK5C,MAAM,eAAe;IAO1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,SAAS,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,IAAI,oDAAe,CAAc,EAAE,CAAC,CAAC;IAC1D,CAAC;IAPD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAYD,aAAa;QACX,MAAM,GAAG,GAAG,+BAA+B,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,CAAC;aAC5B,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC;QACtE,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6BAA6B,CAAC,IAAY;QACxC,MAAM,GAAG,GAAG,8CAA8C,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,mBAAmB,CAAC,IAAY;QAC9B,MAAM,GAAG,GAAG,oCAAoC,CAAC;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,qGAAqG;IACrG,qDAAqD;IACrD,gEAAgE;IAChE,iCAAiC;IACjC,OAAO;IACP,GAAG;IAEH,aAAa,CAAC,OAAY,EAAE,QAA6C,EAAE,UAAe;QACxF,MAAM,GAAG,GAAG,iCAAiC,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;;8EAlDU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACEpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;;;;;;;;;AAOnE,MAAM,iBAAiB;IAE5B,YAAoB,cAA+B,EAC1C,MAAiB,EAChB,MAAc,EACd,cAAqC;QAH3B,mBAAc,GAAd,cAAc,CAAiB;QAC1C,WAAM,GAAN,MAAM,CAAW;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAuB;QAIxC,gBAAW,GAAG,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,yBAAyB,EAAE,CAAC;IAH7E,CAAC;IAKL,QAAQ;IACR,CAAC;IAGD,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,aAAa;QACX,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;IACL,CAAC;;kFAxBU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,yEAA4B;QAC1B,yEAA6B;QAC3B,yEAAkB;QAChB,qEAAI;QAAA,yEAAQ;QAAA,4EAAiB;QAAA,4DAAS;QAAA,4DAAK;QAC7C,4DAAM;QACR,4DAAM;QACN,oEACM;QACN,yEAA+B;QAC7B,yEAAoC;QAClC,2EAA+B;QACjC,4DAAM;QACN,uEAAK;QACH,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QAQpB,4EAAU;QACR,kFAAgB;QAAA,8EAAkB;QAAA,4DAAiB;QACnD,qFAAmB;QAAA,0GAA8C;QAAA,4DAAoB;QACrF,oFAAkB;QAChB,6EAA2C;QAAA,iEAAK;QAAA,4DAAS;QACzD,6EAA2C;QACzC,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC5B,4DAAS;QACX,4DAAmB;QACrB,4DAAW;QACX,4EAAU;QACR,kFAAgB;QAAA,8EAAkB;QAAA,4DAAiB;QACnD,qFAAmB;QAAA,mGAAuC;QAAA,4DAAoB;QAC9E,oFAAkB;QAChB,6EAAqE;QAA1B,0IAAS,mBAAe,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACtF,4DAAmB;QACrB,4DAAW;QAQb,4DAAM;QACR,4DAAM;QAER,4DAAM","file":"projects-projects-module.js","sourcesContent":["import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { CollectionViewer, SelectionChange, DataSource } from '@angular/cdk/collections';\r\nimport { Component, Injectable, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { IFileInfoNode } from '../../md-explorer/models/IFileInfoNode';\r\nimport { MdFile } from '../../md-explorer/models/md-file';\r\nimport { MdFileService } from '../../md-explorer/services/md-file.service';\r\nimport { ProjectsService } from '../../md-explorer/services/projects.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n// IFileInfoNode è interfaccia\r\n// MdFile è la classe -> DynamicFlatNode\r\n\r\n\r\n/**\r\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\r\n * the descendants data from the database.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class DynamicDatabase {\r\n\r\n  constructor(private mdFileService: MdFileService,) {\r\n    this.mdFileService.loadDynFolders('root', 1);\r\n\r\n    var md1 = new MdFile('12Folder', 'c:primoFolder', 0, true);\r\n    var md2 = new MdFile('2Folder', 'c:primoFoldersottoFolder', 1, true);\r\n    var md3 = new MdFile('3Folder', 'c:primoFoldersottoFoldersottoFolder', 2, true);\r\n    var md4 = new MdFile('4Folder', 'c:primoFoldersottoFoldersottoFolder', 2, true);\r\n    var md5 = new MdFile('5Folder', 'c:cuccu', 3, false);\r\n    this.dataMap.set(md1, [md2]);\r\n    this.dataMap.set(md2, [md3, md4]);\r\n    //this.dataMap.set(md3, [md4]);\r\n    this.dataMap.set(md4, [md5]);\r\n\r\n\r\n    var test = this.dataMap.get(md1);\r\n    this.rootLevelNodes = [md1];\r\n  }\r\n\r\n  dataMap = new Map<MdFile, MdFile[]>();\r\n  rootLevelNodes: MdFile[];\r\n\r\n  /** Initial data from database */\r\n  initialData(): MdFile[] {\r\n    return this.rootLevelNodes;\r\n  }\r\n\r\n  getChildren(node: MdFile): MdFile[] | undefined {\r\n\r\n    var test = this.dataMap.get(node);\r\n    return test;\r\n  }\r\n\r\n  isExpandable(node: MdFile): boolean {\r\n    return this.dataMap.has(node);\r\n  }\r\n}\r\n\r\nexport class DynamicDataSource implements DataSource<MdFile> {\r\n\r\n  dataChange = new BehaviorSubject<MdFile[]>([]);\r\n\r\n  get data(): MdFile[] { return this.dataChange.value; }\r\n  set data(value: MdFile[]) {\r\n    this._treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private _treeControl: FlatTreeControl<MdFile>,\r\n    private _database: DynamicDatabase, private _mdFileService: MdFileService) {\r\n    this.data = _database.initialData();\r\n    this._mdFileService.loadDocumentFolder('root', 1).subscribe(_ => {\r\n      this.data = _;\r\n    });\r\n    //this.dataChange = _mdFileService._mdDynFolderDocument;\r\n    //_mdFileService.loadDynFolders('root', 1);\r\n  }\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<MdFile[]> {\r\n    this._treeControl.expansionModel.changed.subscribe(change => {\r\n      if ((change as SelectionChange<MdFile>).added ||\r\n        (change as SelectionChange<MdFile>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<MdFile>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\r\n\r\n  disconnect(collectionViewer: CollectionViewer): void { }\r\n\r\n  /** Handle expand/collapse behaviors */\r\n  handleTreeControl(change: SelectionChange<MdFile>) {\r\n    if (change.added) {\r\n      change.added.forEach(node => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the node, remove from display list\r\n   */\r\n  toggleNode(node: MdFile, expand: boolean) {\r\n    this._mdFileService.loadDocumentFolder(node.path, node.level + 1).subscribe(_ => {\r\n\r\n      const children = _;\r\n      const index = this.data.indexOf(node);\r\n\r\n      if (!children || index < 0) { // If no children, or cannot find the node, no op\r\n        return;\r\n      }\r\n\r\n      node.isLoading = true;\r\n\r\n      setTimeout(() => {\r\n        if (expand) {\r\n          const nodes = children; // punto per fare chiamata remota\r\n          this.data.splice(index + 1, 0, ...nodes);\r\n        } else {\r\n          let count = 0;\r\n          for (let i = index + 1; i < this.data.length\r\n            && this.data[i].level > node.level; i++, count++) { }\r\n          this.data.splice(index + 1, count);\r\n        }\r\n\r\n        // notify the change\r\n        this.dataChange.next(this.data);\r\n        node.isLoading = false;\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-project',\r\n  templateUrl: './new-project.component.html',\r\n  styleUrls: ['./new-project.component.scss']\r\n})\r\nexport class NewProjectComponent implements OnInit {\r\n\r\n\r\n  activeNode: any;\r\n  folder: {\r\n    name: string,\r\n    path: string\r\n  }\r\n\r\n  getLevel = (node: MdFile) => node.level;\r\n\r\n  isExpandable = (node: MdFile) => node.expandable;\r\n\r\n  treeControl: FlatTreeControl<MdFile>;\r\n\r\n  dataSource: DynamicDataSource;\r\n\r\n  hasChild = (_: number, _nodeData: MdFile) => _nodeData.expandable;\r\n\r\n\r\n  constructor(private database: DynamicDatabase,\r\n    private mdFileService: MdFileService,\r\n    private router: Router,\r\n    private projectService: ProjectsService,\r\n    private dialogRef: MatDialogRef<NewProjectComponent>,) {\r\n    this.treeControl = new FlatTreeControl<MdFile>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new DynamicDataSource(this.treeControl, database, mdFileService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.folder = { name: \"<select project>\", path: \"\" };\r\n  }\r\n\r\n  public getFolder(node: IFileInfoNode) {\r\n    this.folder.name = node.name;\r\n    this.folder.path = node.path;\r\n  }\r\n\r\n  public closeDialog() {\r\n    this.projectService.setNewFolderProject(this.folder.path).subscribe(_ => {\r\n      var dateTime = new Date();\r\n      this.router.navigate(['/main/navigation', dateTime.getTime()]); //main\r\n      this.dialogRef.close();\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"flex-container\">\r\n  <h1>Document's Folder</h1>\r\n  <div class=\"flex-items-overflow\">\r\n    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <!-- This is the tree node template for leaf nodes -->\r\n      <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n        <!-- use a disabled button to provide padding for tree leaf -->\r\n        <button mat-icon-button>\r\n          <mat-icon class=\"mat-icon-rtl-mirror\">\r\n            {{'folder'}}\r\n          </mat-icon>\r\n        </button>\r\n        <a style=\"cursor:pointer\" (click)=\"getFolder(node);activeNode = node;\">{{node.name}}</a>\r\n        <!--{{node.name}}-->\r\n      </mat-tree-node>\r\n      <!-- This is the tree node template for expandable nodes -->\r\n      <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" (click)=\"activeNode = node\" matTreeNodePadding>\r\n        <button mat-icon-button matTreeNodeToggle\r\n                [attr.aria-label]=\"'Toggle ' + node.name\">\r\n          <mat-icon class=\"mat-icon-rtl-mirror\">\r\n            {{treeControl.isExpanded(node) ? 'folder_open' : 'folder'}}\r\n          </mat-icon>\r\n        </button>\r\n        <a style=\"cursor:pointer\" (click)=\"getFolder(node)\">{{node.name}}</a>\r\n        <!--{{node.name}}-->\r\n      </mat-tree-node>\r\n    </mat-tree>\r\n  </div>\r\n\r\n  <div class=\"flex-selected-folder\">\r\n    <div class=\"flex-items\">\r\n      <mat-card-title>{{folder.name}}</mat-card-title>\r\n      <mat-card-subtitle>{{folder.path}}</mat-card-subtitle>\r\n    </div>\r\n    <div>\r\n      <button mat-stroked-button color=\"primary\" (click)=\"closeDialog()\">Open</button>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-clone-project',\r\n  templateUrl: './clone-project.component.html',\r\n  styleUrls: ['./clone-project.component.scss']\r\n})\r\nexport class CloneProjectComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>clone-project works!</p>\r\n","<h1>Recent Projects</h1>\r\n<mat-card *ngFor=\"let element of dataSource | async\">\r\n  <mat-card-title>{{element.name}}</mat-card-title>\r\n  <mat-card-subtitle>{{element.path}}</mat-card-subtitle>\r\n  <mat-card-actions>\r\n    <button mat-stroked-button color=\"accent\" (click)=\"quickOpenNotes(element.path)\">\r\n      <img src=\"/assets/run.png\" />\r\n      Quick notes\r\n    </button>\r\n    <button mat-stroked-button color=\"primary\" (click)=\"openNewProject(element.path)\">Open</button>\r\n    <button mat-raised-button color=\"warn\" (click)=\"deleteProject(element)\"><mat-icon>delete</mat-icon></button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MdProject } from '../../md-explorer/models/md-project';\r\nimport { MdFileService } from '../../md-explorer/services/md-file.service';\r\nimport { ProjectsService } from '../../md-explorer/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-open-recent',\r\n  templateUrl: './open-recent.component.html',\r\n  styleUrls: ['./open-recent.component.scss']\r\n})\r\nexport class OpenRecentComponent implements OnInit {\r\n\r\n  public dataSource: Observable<MdProject[]>\r\n\r\n  constructor(private projectService: ProjectsService,\r\n    private mdFileService: MdFileService, private router: Router, private route:ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.fetchProjects();\r\n    this.dataSource = this.projectService.mdProjects;\r\n  }\r\n  quickOpenNotes(path: string) {\r\n    this.projectService.setNewFolderProjectQuickNotes(path).subscribe(_ => {\r\n      var dateTime = new Date();\r\n      this.router.navigate(['/main/navigation', dateTime.getTime()])\r\n    });\r\n  }\r\n\r\n  openNewProject(path: string) {    \r\n    this.projectService.setNewFolderProject(path).subscribe(_ => {\r\n      var dateTime = new Date();\r\n      this.router.navigate(['/main/navigation', dateTime.getTime()]);\r\n    });\r\n  }\r\n\r\n  getProjectList(data: any, objectThis: OpenRecentComponent): void {\r\n    objectThis.projectService.fetchProjects();\r\n  };\r\n\r\n  deleteProject(project: any) {\r\n    this.projectService.deleteProject(project, this.getProjectList, this);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OpenRecentComponent } from './open-recent/open-recent.component';\r\nimport { ProjectsComponent } from './projects.component';\r\nimport { NewProjectComponent } from './new-project/new-project.component';\r\nimport { CloneProjectComponent } from './dialogs/clone-project/clone-project.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MaterialModule } from '../shared/material.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ProjectsComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'openrecent', pathMatch: 'full' },\r\n      { path: 'openrecent', component: OpenRecentComponent },\r\n      { path: 'newproject', component: NewProjectComponent },\r\n    ]\r\n  }];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OpenRecentComponent,\r\n    ProjectsComponent,\r\n    NewProjectComponent,\r\n    CloneProjectComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    MaterialModule,\r\n\r\n  ]\r\n})\r\nexport class ProjectsModule {\r\n  constructor() {\r\n    console.log('constructor ProjectsModule');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MdProject } from '../models/md-project';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _mdProjects: BehaviorSubject<MdProject[]>;\r\n  get mdProjects() {\r\n    return this._mdProjects.asObservable();\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.dataStore = { mdProjects: [] };\r\n    this._mdProjects = new BehaviorSubject<MdProject[]>([]);\r\n  }\r\n\r\n  private dataStore: {\r\n\r\n    mdProjects: MdProject[]\r\n  }\r\n\r\n  fetchProjects() {\r\n    const url = '../api/MdProjects/GetProjects';\r\n    this.http.get<MdProject[]>(url)\r\n      .subscribe(data => {\r\n        this.dataStore.mdProjects = data;\r\n        this._mdProjects.next(Object.assign({}, this.dataStore).mdProjects);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  setNewFolderProjectQuickNotes(path: string):Observable<any> {\r\n    const url = '../api/MdProjects/SetFolderProjectQuickNotes';\r\n    return this.http.post<any>(url, { path: path });    \r\n  }\r\n\r\n  setNewFolderProject(path: string):Observable<any> {\r\n    const url = '../api/MdProjects/SetFolderProject';\r\n    return this.http.post<any>(url, { path: path });    \r\n  }\r\n\r\n  //setNewFolderProject(path: string, callback: (data: any, objectThis: any) => any, objectThis: any) {\r\n  //  const url = '../api/MdProjects/SetFolderProject';\r\n  //  this.http.post<any>(url, { path: path }).subscribe(data => {\r\n  //    callback(data, objectThis);\r\n  //  });\r\n  //}\r\n\r\n  deleteProject(project: any, callback: (data: any, objectThis: any) => any, objectThis: any) {\r\n    const url = '../api/MdProjects/DeleteProject';\r\n    this.http.post<any>(url, project).subscribe(data => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MdProject } from '../md-explorer/models/md-project';\r\nimport { MdFileService } from '../md-explorer/services/md-file.service';\r\nimport { ServerMessagesService } from '../signalr/services/server-messages.service';\r\nimport { ProjectsService } from '../md-explorer/services/projects.service';\r\nimport { NewProjectComponent } from './new-project/new-project.component';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit {\r\n\r\n  constructor(private projectService: ProjectsService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private signalRService: ServerMessagesService\r\n  ) { }\r\n\r\n  public dataSource: Observable<MdProject[]>\r\n  public dataSource1 = [{ name: 'Nome progetto', path: 'c:\\folder\\folder\\folder' }]\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  openRecent(): void {\r\n    this.router.navigate(['/projects/openrecent']);\r\n  }\r\n\r\n  openNewFolder(): void {\r\n    const dialogRef = this.dialog.open(NewProjectComponent, {\r\n      width: '600px',\r\n      data: null\r\n    });\r\n  }\r\n}\r\n","\r\n\r\n\r\n<div class=\"container-flex\">\r\n  <div class=\"container-title\">\r\n    <div class=\"item\">\r\n      <h1><strong>Markdown Explorer</strong></h1>\r\n    </div>\r\n  </div>\r\n  <div class=\"container-columns\">\r\n  </div>\r\n  <div class=\"container-columns\">\r\n    <div class=\"container-first-column\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <div>\r\n      <h1>Get started</h1>\r\n      <!--<mat-card>\r\n        <mat-card-title>Open recent project</mat-card-title>\r\n        <mat-card-subtitle>Get recent project</mat-card-subtitle>\r\n        <mat-card-actions>\r\n          <button mat-stroked-button color=\"primary\" (click)=\"openRecent()\">Open recent list</button>\r\n        </mat-card-actions>\r\n      </mat-card>-->\r\n      <mat-card>\r\n        <mat-card-title>Clone a repository</mat-card-title>\r\n        <mat-card-subtitle>Get code from an online repository like GitLab</mat-card-subtitle>\r\n        <mat-card-actions>\r\n          <button mat-stroked-button color=\"primary\">Clone</button>\r\n          <button mat-stroked-button color=\"primary\">\r\n            <mat-icon>build</mat-icon>\r\n          </button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <mat-card>\r\n        <mat-card-title>Create new project</mat-card-title>\r\n        <mat-card-subtitle>Choose filesystem folder to get started</mat-card-subtitle>\r\n        <mat-card-actions>\r\n          <button mat-stroked-button color=\"primary\" (click)=\"openNewFolder()\">Create</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!--<mat-card>\r\n        <mat-card-title>Example to delete</mat-card-title>\r\n        <mat-card-subtitle>Choose filesystem folder to get started</mat-card-subtitle>\r\n        <mat-card-actions>\r\n          <button mat-stroked-button color=\"primary\" (click)=\"openNewFolderExample()\">Create</button>\r\n        </mat-card-actions>\r\n      </mat-card>-->\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n"],"sourceRoot":"webpack:///"}