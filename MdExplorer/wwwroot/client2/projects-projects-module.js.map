{"version":3,"sources":["./src/app/projects/dialogs/clone-project/clone-project.component.ts","./src/app/projects/dialogs/clone-project/clone-project.component.html","./src/app/projects/dialogs/project-create-config/project-create-config-dialog.component.ts","./src/app/projects/dialogs/project-create-config/project-create-config-dialog.component.html","./src/app/shared/NgDialogAnimationService.ts","./src/app/projects/open-recent/open-recent.component.ts","./src/app/projects/open-recent/open-recent.component.html","./src/app/projects/projects.module.ts","./src/app/projects/project-settings/project-settings.component.ts","./src/app/projects/project-settings/project-settings.component.html","./src/app/projects/services/project-settings.service.ts","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html","./src/app/projects/dialogs/modern-clone-project/modern-clone-project.component.ts","./src/app/projects/dialogs/modern-clone-project/modern-clone-project.component.html"],"names":[],"mappings":"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","file":"projects-projects-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ShowFileSystemComponent } from '../../../commons/components/show-file-system/show-file-system.component';\r\nimport { WaitingDialogService } from '../../../commons/waitingdialog/waiting-dialog.service';\r\nimport { WaitingDialogInfo } from '../../../commons/waitingdialog/waiting-dialog/models/WaitingDialogInfo';\r\nimport { GitMessagesComponent } from '../../../git/components/git-messages/git-messages.component';\r\nimport { CloneInfo } from '../../../git/models/cloneRequest';\r\nimport { GITService } from '../../../git/services/gitservice.service';\r\nimport { MdFileService } from '../../../md-explorer/services/md-file.service';\r\nimport { ProjectsService } from '../../../md-explorer/services/projects.service';\r\nimport { ShowFileMetadata } from '../../../commons/components/show-file-system/show-file-metadata';\r\n\r\n@Component({\r\n  selector: 'app-clone-project',\r\n  templateUrl: './clone-project.component.html',\r\n  styleUrls: ['./clone-project.component.scss']\r\n})\r\nexport class CloneProjectComponent implements OnInit {\r\n  public hide = true;\r\n  public urlpath: string;\r\n  \r\n\r\n  public dataForCloning: CloneInfo = {\r\n    urlPath: null,\r\n    directoryPath: null,\r\n    username: null,\r\n    password: null,\r\n    email: null,\r\n    storeCredentials: true\r\n  };\r\n\r\n\r\n  constructor(private dialog: MatDialog,\r\n    private mdFileService: MdFileService,\r\n    private gitService: GITService,\r\n    private dialogRef: MatDialogRef<CloneProjectComponent>,    \r\n    private waitingDialog: WaitingDialogService,\r\n    private projectService: ProjectsService,\r\n    private router:Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.mdFileService.getTextFromClipboard().subscribe(_ => {\r\n      this.dataForCloning.urlPath = _.url;\r\n    });\r\n    // when the project change, then switch to navigation environment\r\n    this.projectService.currentProjects$.subscribe(_ => {\r\n      if (_!=null && _!=undefined) {\r\n        this.router.navigate(['/main/navigation/document']); //main\r\n        this.dialogRef.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  cloneDirectory(): void {\r\n    let info = new WaitingDialogInfo();\r\n    info.message = \"Oh MY GOD... Cloning Repository!\"\r\n    this.waitingDialog.showMessageBox(info);\r\n    this.gitService.clone(this.dataForCloning).subscribe(_ => {\r\n      if (_.areCredentialsCorrect) {\r\n        this.projectService.setNewFolderProject(this.dataForCloning.directoryPath);\r\n        \r\n      } else {\r\n        const dialogRef = this.dialog.open(GitMessagesComponent, {\r\n          width: '300px',          \r\n          data: {message:\"Credentials are not correct\"}\r\n        });\r\n      }\r\n      this.waitingDialog.closeMessageBox();\r\n      \r\n\r\n      this.dialogRef.close(this.dataForCloning);\r\n    });\r\n  }\r\n\r\n  openFileSystem() {\r\n    let data = new ShowFileMetadata();\r\n    data.start = null;\r\n    data.title = \"C:\\ Folder\";\r\n    data.typeOfSelection = \"Folders\";\r\n\r\n    const dialogRef = this.dialog.open(ShowFileSystemComponent, {\r\n      width: '800px',\r\n      height: '600px',\r\n      panelClass: 'resizable-dialog-container',\r\n      data: data\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(_ => {\r\n\r\n      this.dataForCloning.directoryPath = _.data;\r\n    });\r\n\r\n  }\r\n}\r\n","\r\n<h1 style=\"display:inline;\" mat-dialog-title>\r\n  <img style=\"display:inline; vertical-align:middle\" src=\"/assets/gitlogo.png\" />\r\n  <span>Clone Project</span>\r\n</h1>\r\n\r\n<mat-dialog-content>\r\n  <mat-card style=\"margin-top:10px; margin-bottom:10px\">\r\n    <div class=\"vertical-form-container\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>URL</mat-label>\r\n        <input matInput [(ngModel)]=\"dataForCloning.urlPath\" placeholder=\"gitlab url\" required>\r\n        <mat-hint>Set GIT Path</mat-hint>\r\n      </mat-form-field>\r\n      <div class=\"orizzontal-form-container\">\r\n        <mat-form-field appearance=\"outline\" style=\"width:100%\">\r\n          <mat-label>Directory</mat-label>\r\n          <input matInput [(ngModel)]=\"dataForCloning.directoryPath\" placeholder=\"local filesystem\" required>\r\n          <mat-hint>Set project directory</mat-hint>\r\n          <button mat-button matSuffix  color=\"primary\" (click)=\"openFileSystem()\"><mat-icon>more_horiz</mat-icon> </button>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>UserName</mat-label>\r\n        <input matInput [(ngModel)]=\"dataForCloning.username\" placeholder=\"username\" required>\r\n        <mat-hint>Username</mat-hint>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput [(ngModel)]=\"dataForCloning.password\" placeholder=\"password\"\r\n               [type]=\"hide ? 'password' : 'text'\" required>\r\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-hint *ngIf=\"!dataForCloning.password\">Enter your password</mat-hint>\r\n      </mat-form-field>\r\n\r\n      <section class=\"store-credential\">\r\n        <mat-checkbox [(ngModel)]=\"dataForCloning.storeCredentials\">Store credentials</mat-checkbox>\r\n      </section>\r\n\r\n    </div>\r\n\r\n  </mat-card>\r\n\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button   mat-stroked-button (click)=\"cloneDirectory()\" color=\"primary\">Clone!</button>\r\n</mat-dialog-actions>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ProjectCreateConfigOptions } from './project-create-config.model';\r\n\r\n@Component({\r\n  selector: 'app-project-create-config-dialog',\r\n  templateUrl: './project-create-config-dialog.component.html',\r\n  styleUrls: ['./project-create-config-dialog.component.scss']\r\n})\r\nexport class ProjectCreateConfigDialogComponent implements OnInit {\r\n\r\n  config: ProjectCreateConfigOptions;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ProjectCreateConfigDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { projectPath: string }\r\n  ) {\r\n    // Initialize with default values\r\n    this.config = {\r\n      projectPath: data.projectPath,\r\n      initializeGit: false, // Git not initialized by default\r\n      addCopilotInstructions: true // Copilot instructions enabled by default\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCreateProject(): void {\r\n    this.dialogRef.close(this.config);\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close(null);\r\n  }\r\n}","<h2 mat-dialog-title>Configure New Project</h2>\r\n\r\n<mat-dialog-content>\r\n  <div class=\"config-container\">\r\n    <div class=\"project-path\">\r\n      <mat-icon>folder</mat-icon>\r\n      <strong>Project Path:</strong>\r\n      <span class=\"path-text\">{{ config.projectPath }}</span>\r\n    </div>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <div class=\"config-options\">\r\n      <div class=\"option-item\">\r\n        <mat-checkbox [(ngModel)]=\"config.addCopilotInstructions\" color=\"primary\">\r\n          <strong>Add GitHub Copilot instructions</strong>\r\n          <div class=\"option-description\">\r\n            Creates .github/copilot-instructions.md file with project-specific AI guidelines\r\n          </div>\r\n        </mat-checkbox>\r\n      </div>\r\n\r\n      <div class=\"option-item\">\r\n        <mat-checkbox [(ngModel)]=\"config.initializeGit\" color=\"primary\">\r\n          <strong>Initialize Git repository</strong>\r\n          <div class=\"option-description\">\r\n            Creates a new Git repository with .gitignore configured for MdExplorer\r\n          </div>\r\n        </mat-checkbox>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button (click)=\"onCancel()\">Cancel</button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"onCreateProject()\">\r\n    <mat-icon>add</mat-icon>\r\n    Create Project\r\n  </button>\r\n</mat-dialog-actions>","import { Inject, Injectable, NgZone, Optional, TemplateRef } from '@angular/core';\r\nimport { DialogPosition, MatDialog, MatDialogConfig as _MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\r\nimport { ComponentType } from '@angular/cdk/portal';\r\nimport { Subject } from 'rxjs';\r\n\r\nconst diractionMap = { left: 'left', right: 'left', top: 'top', bottom: 'top' };\r\nconst multyMap = { left: 1, right: -1, top: 1, bottom: -1 };\r\n\r\nexport interface AnimationOption {\r\n  keyframes?: Keyframe[];\r\n  keyframeAnimationOptions: KeyframeAnimationOptions;\r\n}\r\n\r\nexport interface MatDialogConfig extends _MatDialogConfig {\r\n  title?: string;\r\n  animation?:\r\n  | {\r\n    to: 'aside' | 'top' | 'bottom' | 'left' | 'right';\r\n    incomingOptions?: { keyframes?: Keyframe[]; keyframeAnimationOptions: KeyframeAnimationOptions };\r\n    outgoingOptions?: { keyframes?: Keyframe[]; keyframeAnimationOptions: KeyframeAnimationOptions };\r\n  }\r\n  | {\r\n    to?: 'aside' | 'top' | 'bottom' | 'left' | 'right';\r\n    incomingOptions?: { keyframes: Keyframe[]; keyframeAnimationOptions: KeyframeAnimationOptions };\r\n    outgoingOptions?: { keyframes: Keyframe[]; keyframeAnimationOptions: KeyframeAnimationOptions };\r\n  };\r\n  position?: DialogPosition & { rowStart?: string; rowEnd?: string };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NgDialogAnimationService {\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @Inject('INCOMING_OPTION')\r\n    private incomingOptions?: AnimationOption,\r\n    @Optional()\r\n    @Inject('OUTGOING_OPTION')\r\n    private outgoingOptions?: AnimationOption,\r\n  ) {\r\n    \r\n    this.incomingOptions = {\r\n      keyframes: [\r\n        { transform: \"rotate(360deg)\" },\r\n        { transform: \"rotate(0)\" }\r\n      ],\r\n      keyframeAnimationOptions: { easing: \"ease-in-out\", duration: 500 }\r\n    };\r\n    this.outgoingOptions = {\r\n      keyframes :[\r\n        { transform: \"rotate(0)\" },\r\n        { transform: \"rotate(360deg)\" }\r\n      ],\r\n      keyframeAnimationOptions : { easing: \"ease-in-out\", duration: 500 }\r\n      }\r\n  }\r\n\r\n  open<T, D = any, R = any>(\r\n    componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n    config?: MatDialogConfig,\r\n  ): MatDialogRef<T, R> {\r\n    const dir: 'ltr' | 'rtl' =\r\n      config.direction || (document.querySelectorAll('[dir=\"rtl\"]').length ? 'rtl' : 'ltr');\r\n    config.direction = config.direction || dir;\r\n    if (config.animation) {\r\n      if (config.animation.to === 'aside') {\r\n        config.animation.to = dir === 'rtl' ? 'left' : 'right';\r\n      }\r\n    }\r\n    \r\n    if (config.position && config.position.rowEnd) {\r\n      if (dir === 'rtl') {\r\n        config.position.right = config.position.rowEnd;\r\n      } else {\r\n        config.position.left = config.position.rowEnd;\r\n      }\r\n    }\r\n\r\n    if (config.position && config.position.rowStart) {\r\n      if (dir === 'rtl') {\r\n        config.position.left = config.position.rowStart;\r\n      } else {\r\n        config.position.right = config.position.rowStart;\r\n      }\r\n    }\r\n\r\n    const ref = this.dialog.open(componentOrTemplateRef, config);\r\n    const container = document.getElementsByTagName('mat-dialog-container')[0] as HTMLElement;\r\n    if (config.title) {\r\n      const el = document.createElement('span');\r\n      el.textContent = config.title;\r\n      el.className = 'dialogTitle';\r\n\r\n      const elClose = document.createElement('span');\r\n      elClose.textContent = 'X';\r\n      elClose.className = 'dialogClose';\r\n      elClose.addEventListener('click', () => {\r\n        ref.close();\r\n      });\r\n\r\n      const titleContainer = document.createElement('div');\r\n      titleContainer.className = 'titleContainer';\r\n      titleContainer.append(el);\r\n      titleContainer.append(elClose);\r\n      container.prepend(titleContainer);\r\n    }\r\n\r\n    if (config.animation) {\r\n      const incomingOptions: AnimationOption = config.animation.incomingOptions ||\r\n        this.incomingOptions || { keyframeAnimationOptions: { duration: 600, easing: 'ease-in' } };\r\n\r\n      const outgoingOptions: AnimationOption = config.animation.outgoingOptions ||\r\n        this.outgoingOptions || { keyframeAnimationOptions: { duration: 600, easing: 'ease-out' } };\r\n\r\n      const wrapper = document.getElementsByClassName('cdk-global-overlay-wrapper')[0];\r\n\r\n      const animate = (keyframes, options) => {\r\n        return wrapper.animate(keyframes, options);\r\n      };\r\n      const _afterClosed = new Subject();\r\n      ref.afterClosed = () => {\r\n        return _afterClosed.asObservable();\r\n      };\r\n      const closeFunction = ref.close;\r\n\r\n      let incomeKeyFrames = incomingOptions.keyframes;\r\n      let outgoingKeyFrames = outgoingOptions.keyframes;\r\n      if (config.animation.to) {\r\n        const to = diractionMap[config.animation.to];\r\n        const keyFrame100 = {};\r\n        const keyFrame0 = {};\r\n        keyFrame0[to] = 0;\r\n        keyFrame100[to] =\r\n          to === 'top' || to === 'bottom'\r\n            ? container.clientHeight * multyMap[config.animation.to] + 'px'\r\n            : container.clientWidth * multyMap[config.animation.to] + 'px';\r\n        incomeKeyFrames = incomeKeyFrames || [keyFrame100, keyFrame0];\r\n        outgoingKeyFrames = outgoingKeyFrames || [keyFrame0, keyFrame100];\r\n      }\r\n      animate(incomeKeyFrames, incomingOptions.keyframeAnimationOptions);\r\n      const closeHandler = (dialogResult?: R) => {\r\n        _afterClosed.next(dialogResult);\r\n        const animation = animate(outgoingKeyFrames, outgoingOptions.keyframeAnimationOptions);\r\n        animation.onfinish = () => {\r\n          (wrapper as HTMLElement).style.display = 'none';\r\n          this.ngZone.run(() => ref.close(dialogResult));\r\n        };\r\n        ref.close = closeFunction;\r\n      };\r\n      ref.close = (dialogResult?: R) => closeHandler(dialogResult);\r\n    }\r\n\r\n    return ref;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { bounceInLeftOnEnterAnimation } from 'angular-animations';\r\nimport { Observable } from 'rxjs';\r\nimport { MdProject } from '../../md-explorer/models/md-project';\r\nimport { MdFileService } from '../../md-explorer/services/md-file.service';\r\nimport { ProjectsService } from '../../md-explorer/services/projects.service';\r\nimport { ProjectSettingsComponent } from '../project-settings/project-settings.component';\r\n\r\n@Component({\r\n  selector: 'app-open-recent',\r\n  templateUrl: './open-recent.component.html',\r\n  styleUrls: ['./open-recent.component.scss'],\r\n  animations: [\r\n    bounceInLeftOnEnterAnimation({ translate: '500px' }),\r\n  ]\r\n})\r\nexport class OpenRecentComponent implements OnInit {\r\n\r\n  public dataSource: Observable<MdProject[]>\r\n\r\n  constructor(private projectService: ProjectsService,\r\n    private mdFileService: MdFileService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.fetchProjects();\r\n    this.dataSource = this.projectService.mdProjects;\r\n    // when the project is loaded, then switch to navigation environment\r\n    this.projectService.currentProjects$.subscribe(_ => {\r\n      if (_ != null && _ != undefined) {\r\n        this.router.navigate(['/main/navigation/document']);\r\n      }      \r\n    });\r\n  }\r\n  openNewProject(path: string) {    \r\n    this.projectService.setNewFolderProject(path);\r\n  }\r\n\r\n  getProjectList(data: any, objectThis: OpenRecentComponent): void {\r\n    objectThis.projectService.fetchProjects();\r\n  };\r\n\r\n  deleteProject(project: any) {\r\n    this.projectService.deleteProject(project, this.getProjectList, this);\r\n  }\r\n\r\n  openProjectSettings(project: any) {\r\n    const dialogRef = this.dialog.open(ProjectSettingsComponent, {\r\n      width: '600px',\r\n      data: { \r\n        projectId: project.id,\r\n        projectName: project.name \r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('Settings dialog closed');\r\n    });\r\n  }\r\n\r\n}\r\n","<h1>Recent Projects</h1>\r\n\r\n<div class=\"projects-list-container\">\r\n  <mat-card *ngFor=\"let element of dataSource | async; let i = index\" [@bounceInLeftOnEnter]=\"{ value: '', params: { delay: i * 100 } }\" >\r\n    <mat-card-title>{{element.name}}</mat-card-title>\r\n    <mat-card-subtitle>{{element.path}}</mat-card-subtitle>\r\n    <mat-card-actions>\r\n      <button mat-stroked-button color=\"primary\" (click)=\"openNewProject(element.path)\">Open</button>\r\n      <button mat-raised-button color=\"warn\" (click)=\"deleteProject(element)\"><mat-icon>delete</mat-icon></button>\r\n      <button mat-icon-button matTooltip=\"Project Settings\" (click)=\"openProjectSettings(element)\">\r\n        <mat-icon>settings</mat-icon>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OpenRecentComponent } from './open-recent/open-recent.component';\r\nimport { ProjectsComponent } from './projects.component';\r\nimport { NewProjectComponent } from './new-project/new-project.component';\r\nimport { CloneProjectComponent } from './dialogs/clone-project/clone-project.component';\r\nimport { ModernCloneProjectComponent } from './dialogs/modern-clone-project/modern-clone-project.component';\r\nimport { ProjectCreateConfigDialogComponent } from './dialogs/project-create-config/project-create-config-dialog.component';\r\nimport { ProjectSettingsComponent } from './project-settings/project-settings.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { FormsModule } from '@angular/forms'\r\nimport { GitModule } from '../git/git.module';\r\nimport { ProjectSettingsService } from './services/project-settings.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ProjectsComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'openrecent', pathMatch: 'full' },\r\n      { path: 'openrecent', component: OpenRecentComponent },\r\n      { path: 'newproject', component: NewProjectComponent },\r\n    ]\r\n  }];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OpenRecentComponent,\r\n    ProjectsComponent,\r\n    NewProjectComponent,\r\n    CloneProjectComponent,\r\n    ModernCloneProjectComponent,\r\n    ProjectCreateConfigDialogComponent,\r\n    ProjectSettingsComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    GitModule,\r\n  ],\r\n  providers: [\r\n    ProjectSettingsService\r\n  ]\r\n})\r\nexport class ProjectsModule {\r\n  constructor() {\r\n    console.log('constructor ProjectsModule');\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ProjectSettingsService } from '../services/project-settings.service';\r\n\r\n@Component({\r\n  selector: 'app-project-settings',\r\n  templateUrl: './project-settings.component.html',\r\n  styleUrls: ['./project-settings.component.scss']\r\n})\r\nexport class ProjectSettingsComponent implements OnInit {\r\n  rule1Enabled: boolean = false;\r\n  projectId: string;\r\n  projectName: string;\r\n  loading: boolean = false;\r\n  saving: boolean = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ProjectSettingsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private projectSettingsService: ProjectSettingsService\r\n  ) {\r\n    this.projectId = data.projectId;\r\n    this.projectName = data.projectName;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadSettings();\r\n  }\r\n\r\n  loadSettings(): void {\r\n    this.loading = true;\r\n    this.projectSettingsService.getRule1Setting().subscribe({\r\n      next: (response) => {\r\n        this.rule1Enabled = response.enabled;\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading settings:', error);\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onRule1Change(): void {\r\n    this.saving = true;\r\n    this.projectSettingsService.setRule1Setting(this.rule1Enabled).subscribe({\r\n      next: () => {\r\n        console.log('Rule 1 setting saved successfully');\r\n        this.saving = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error saving Rule 1 setting:', error);\r\n        this.saving = false;\r\n        // Revert the change on error\r\n        this.rule1Enabled = !this.rule1Enabled;\r\n      }\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}","<h2 mat-dialog-title>Project Settings - {{projectName}}</h2>\r\n\r\n<mat-dialog-content>\r\n  <div class=\"settings-container\">\r\n    \r\n    <mat-card class=\"settings-section\">\r\n      <mat-card-header>\r\n        <mat-card-title>Validation Rules</mat-card-title>\r\n      </mat-card-header>\r\n      \r\n      <mat-card-content>\r\n        <div class=\"setting-item\" *ngIf=\"!loading\">\r\n          <mat-checkbox \r\n            [(ngModel)]=\"rule1Enabled\" \r\n            (change)=\"onRule1Change()\"\r\n            [disabled]=\"saving\">\r\n            <span class=\"setting-label\">Rule #1: Check H1 matches filename</span>\r\n          </mat-checkbox>\r\n          <p class=\"setting-description\">\r\n            When enabled, verifies that the H1 heading in each Markdown file matches the filename.\r\n            This helps maintain consistency between file names and document titles.\r\n          </p>\r\n        </div>\r\n\r\n        <div *ngIf=\"loading\" class=\"loading-container\">\r\n          <mat-spinner diameter=\"30\"></mat-spinner>\r\n          <span>Loading settings...</span>\r\n        </div>\r\n\r\n        <div *ngIf=\"saving\" class=\"saving-indicator\">\r\n          <mat-spinner diameter=\"20\"></mat-spinner>\r\n          <span>Saving...</span>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"settings-section info-card\">\r\n      <mat-card-content>\r\n        <mat-icon>info</mat-icon>\r\n        <p>\r\n          These settings are specific to this project and will be saved in the database.\r\n          Changes take effect immediately.\r\n        </p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button (click)=\"close()\">Close</button>\r\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectSettingsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProjectSettings(): Observable<any[]> {\r\n    const url = '../api/ProjectSettings/GetProjectSettings';\r\n    return this.http.get<any[]>(url);\r\n  }\r\n\r\n  saveProjectSetting(setting: any): Observable<any> {\r\n    const url = '../api/ProjectSettings/SaveProjectSetting';\r\n    return this.http.post<any>(url, setting);\r\n  }\r\n\r\n  getRule1Setting(): Observable<any> {\r\n    const url = '../api/ProjectSettings/GetRule1Setting';\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n  setRule1Setting(enabled: boolean): Observable<any> {\r\n    const url = '../api/ProjectSettings/SetRule1Setting';\r\n    return this.http.post<any>(url, { enabled });\r\n  }\r\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MdProject } from '../md-explorer/models/md-project';\r\nimport { MdFileService } from '../md-explorer/services/md-file.service';\r\nimport { MdServerMessagesService } from '../signalR/services/server-messages.service';\r\nimport { ProjectsService } from '../md-explorer/services/projects.service';\r\nimport { NewProjectComponent } from './new-project/new-project.component';\r\nimport { ShowFileSystemComponent } from '../commons/components/show-file-system/show-file-system.component';\r\nimport { ModernCloneProjectComponent } from './dialogs/modern-clone-project/modern-clone-project.component';\r\nimport { ProjectCreateConfigDialogComponent } from './dialogs/project-create-config/project-create-config-dialog.component';\r\nimport { NgDialogAnimationService } from '../shared/NgDialogAnimationService';\r\nimport { SettingsComponent } from '../md-explorer/components/dialogs/settings/settings.component';\r\nimport { ShowFileMetadata } from '../commons/components/show-file-system/show-file-metadata';\r\nimport { versionInfo } from '../../environments/version'; // Importa la versione\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit, OnDestroy {\r\n\r\n  public appVersion = versionInfo.version; // Rendi la versione disponibile nel template\r\n  public buildTime = versionInfo.buildTime; // Rendi il timestamp di build disponibile nel template\r\n\r\n  constructor(private projectService: ProjectsService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private signalRService: MdServerMessagesService,\r\n    private dialogAn: NgDialogAnimationService,\r\n  ) { }\r\n\r\n    ngOnDestroy(): void {\r\n      console.log('ProjectsComponent destroyed!');\r\n    }\r\n\r\n  public dataSource: Observable<MdProject[]>\r\n  public dataSource1 = [{ name: 'Nome progetto', path: 'c:\\folder\\folder\\folder' }]\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.currentProjects$.subscribe(_ => {\r\n      if (_ != null && _!= undefined) {\r\n        this.router.navigate(['/main/navigation/document']); //main\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  openRecent(): void {\r\n    this.router.navigate(['/projects/openrecent']);\r\n  }\r\n\r\n  prepareToClone(): void {\r\n    const dialogRef = this.dialog.open(ModernCloneProjectComponent, {\r\n      width: '600px',\r\n      maxHeight: '600px',\r\n      data: null\r\n    });\r\n  }\r\n\r\n  openNewFolder(): void {\r\n    let data = new ShowFileMetadata();\r\n    data.start = null;\r\n    data.title = \"Select project folder\";\r\n    data.typeOfSelection = \"Folders\";\r\n    data.buttonText = \"Select folder\"; // Testo personalizzato\r\n\r\n    const dialogRef = this.dialog.open(ShowFileSystemComponent, {\r\n      width: '800px',\r\n      height: '600px',\r\n      panelClass: 'resizable-dialog-container',\r\n      data: data\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result && result.data) {\r\n        // Open configuration dialog after folder selection\r\n        const configDialogRef = this.dialog.open(ProjectCreateConfigDialogComponent, {\r\n          width: '500px',\r\n          disableClose: true,\r\n          data: { projectPath: result.data }\r\n        });\r\n\r\n        configDialogRef.afterClosed().subscribe(config => {\r\n          if (config) {\r\n            // Create project with configuration options\r\n            this.projectService.createProjectWithConfig(config);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  openSettings(): void {\r\n    const dialogRef = this.dialogAn.open(SettingsComponent, {\r\n      width: '600px',\r\n      animation: {},\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-flex\">\r\n  <div class=\"container-columns\">\r\n  </div>\r\n  <div class=\"container-columns\">\r\n    <div class=\"container-first-column\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <div>\r\n      <h1>Get started</h1>\r\n      <mat-card>\r\n        <mat-card-title>Clone a repository</mat-card-title>\r\n        <mat-card-subtitle>Get code from an online repository like GitLab</mat-card-subtitle>\r\n        <mat-card-actions>\r\n          <button mat-stroked-button data-test=\"clone-button\" (click)=\"prepareToClone()\" color=\"primary\">Clone</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <mat-card>\r\n        <mat-card-title>Create new project</mat-card-title>\r\n        <mat-card-subtitle>Choose filesystem folder to get started</mat-card-subtitle>\r\n        <mat-card-actions>\r\n          <button mat-stroked-button color=\"primary\" data-test=\"new-folder-button\" (click)=\"openNewFolder()\">Create</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <mat-card>\r\n        <mat-card-title>General settings</mat-card-title>\r\n        <mat-card-subtitle>Change main settings</mat-card-subtitle>\r\n        <mat-card-actions>\r\n          <button mat-stroked-button color=\"primary\" data-test=\"settings-button\" (click)=\"openSettings()\">Settings</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ShowFileSystemComponent } from '../../../commons/components/show-file-system/show-file-system.component';\r\nimport { WaitingDialogService } from '../../../commons/waitingdialog/waiting-dialog.service';\r\nimport { WaitingDialogInfo } from '../../../commons/waitingdialog/waiting-dialog/models/WaitingDialogInfo';\r\nimport { GitMessagesComponent } from '../../../git/components/git-messages/git-messages.component';\r\nimport { GITService } from '../../../git/services/gitservice.service';\r\nimport { MdFileService } from '../../../md-explorer/services/md-file.service';\r\nimport { ProjectsService } from '../../../md-explorer/services/projects.service';\r\nimport { ShowFileMetadata } from '../../../commons/components/show-file-system/show-file-metadata';\r\n\r\ninterface ModernCloneRequest {\r\n  url: string;\r\n  localPath: string;\r\n  branchName?: string;\r\n  useToken?: boolean;\r\n  useSSH?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-modern-clone-project',\r\n  templateUrl: './modern-clone-project.component.html',\r\n  styleUrls: ['./modern-clone-project.component.scss']\r\n})\r\nexport class ModernCloneProjectComponent implements OnInit {\r\n  public cloneRequest: ModernCloneRequest = {\r\n    url: '',\r\n    localPath: '',\r\n    branchName: '',\r\n    useToken: true,  // Default to token authentication\r\n    useSSH: false\r\n  };\r\n\r\n  public hasGitHubToken = false;\r\n  public tokenStatus = '';\r\n  public isGitHubRepo = false;\r\n  public authMethod: 'automatic' | 'manual' = 'automatic';\r\n\r\n  // For manual authentication (non-GitHub repos)\r\n  public manualCredentials = {\r\n    username: '',\r\n    password: ''\r\n  };\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private mdFileService: MdFileService,\r\n    private gitService: GITService,\r\n    private dialogRef: MatDialogRef<ModernCloneProjectComponent>,\r\n    private waitingDialog: WaitingDialogService,\r\n    private projectService: ProjectsService,\r\n    private router: Router,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Get URL from clipboard\r\n    this.mdFileService.getTextFromClipboard().subscribe(clipboard => {\r\n      if (clipboard?.url) {\r\n        this.cloneRequest.url = clipboard.url;\r\n        this.checkIfGitHubRepo();\r\n      }\r\n    });\r\n\r\n    // Check GitHub token status\r\n    this.checkGitHubToken();\r\n\r\n    // When the project changes, navigate to the main environment\r\n    this.projectService.currentProjects$.subscribe(project => {\r\n      if (project != null && project != undefined) {\r\n        this.router.navigate(['/main/navigation/document']);\r\n        this.dialogRef.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  checkGitHubToken(): void {\r\n    this.gitService.getGitHubToken().subscribe(response => {\r\n      this.hasGitHubToken = response.hasToken;\r\n      if (response.hasToken) {\r\n        this.tokenStatus = `Token configured: ${response.maskedToken}`;\r\n      } else {\r\n        this.tokenStatus = 'No GitHub token configured';\r\n      }\r\n    });\r\n  }\r\n\r\n  onUrlChange(): void {\r\n    this.checkIfGitHubRepo();\r\n  }\r\n\r\n  checkIfGitHubRepo(): void {\r\n    const url = this.cloneRequest.url.toLowerCase();\r\n    this.isGitHubRepo = url.includes('github.com');\r\n\r\n    // Auto-select authentication method based on URL\r\n    if (this.isGitHubRepo && this.hasGitHubToken) {\r\n      this.authMethod = 'automatic';\r\n    } else if (!this.isGitHubRepo) {\r\n      this.authMethod = 'manual';\r\n    }\r\n  }\r\n\r\n  openFileSystem(): void {\r\n    let data = new ShowFileMetadata();\r\n    data.start = null;\r\n    data.title = \"Select Clone Destination\";\r\n    data.typeOfSelection = \"Folders\";\r\n    data.buttonText = \"Select folder\";\r\n\r\n    const dialogRef = this.dialog.open(ShowFileSystemComponent, {\r\n      width: '800px',\r\n      height: '600px',\r\n      panelClass: 'resizable-dialog-container',\r\n      data: data\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result?.data) {\r\n        // Add repository name to the path\r\n        const repoName = this.extractRepoName(this.cloneRequest.url);\r\n        if (repoName) {\r\n          this.cloneRequest.localPath = `${result.data}\\\\${repoName}`;\r\n        } else {\r\n          this.cloneRequest.localPath = result.data;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  extractRepoName(url: string): string {\r\n    if (!url) return '';\r\n\r\n    // Handle various Git URL formats\r\n    let repoName = url;\r\n\r\n    // Remove .git extension if present\r\n    repoName = repoName.replace(/\\.git$/, '');\r\n\r\n    // Extract from HTTPS URL: https://github.com/user/repo\r\n    if (repoName.includes('github.com/')) {\r\n      const parts = repoName.split('github.com/')[1]?.split('/');\r\n      if (parts && parts.length >= 2) {\r\n        return parts[1];\r\n      }\r\n    }\r\n\r\n    // Extract from SSH URL: git@github.com:user/repo\r\n    if (repoName.includes('git@github.com:')) {\r\n      const parts = repoName.split(':')[1]?.split('/');\r\n      if (parts && parts.length >= 2) {\r\n        return parts[1];\r\n      }\r\n    }\r\n\r\n    // Fallback: get last part of URL\r\n    const parts = repoName.split('/');\r\n    return parts[parts.length - 1] || 'repository';\r\n  }\r\n\r\n  async performClone(): Promise<void> {\r\n    if (!this.cloneRequest.url || !this.cloneRequest.localPath) {\r\n      this.showMessage('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    const info = new WaitingDialogInfo();\r\n    info.message = \"Cloning repository...\";\r\n    this.waitingDialog.showMessageBox(info);\r\n\r\n    try {\r\n      // Use modern clone endpoint\r\n      const request = {\r\n        url: this.cloneRequest.url,\r\n        localPath: this.cloneRequest.localPath,\r\n        branchName: this.cloneRequest.branchName || null\r\n      };\r\n\r\n      // Log the request for debugging\r\n      console.log('[ModernClone] Sending clone request:', request);\r\n\r\n      // Call the modern Git service clone method\r\n      this.gitService.modernClone(request).subscribe(\r\n        response => {\r\n          this.waitingDialog.closeMessageBox();\r\n\r\n          if (response.success) {\r\n            // Set the new project folder\r\n            this.projectService.setNewFolderProject(this.cloneRequest.localPath);\r\n            this.showMessage('Repository cloned successfully!');\r\n            this.dialogRef.close(this.cloneRequest);\r\n          } else {\r\n            this.showMessage(response.error || 'Clone failed');\r\n          }\r\n        },\r\n        error => {\r\n          this.waitingDialog.closeMessageBox();\r\n          this.showMessage(error.error?.error || 'Clone failed: ' + error.message);\r\n        }\r\n      );\r\n    } catch (error) {\r\n      this.waitingDialog.closeMessageBox();\r\n      this.showMessage('Unexpected error during clone');\r\n    }\r\n  }\r\n\r\n  showMessage(message: string): void {\r\n    const dialogRef = this.dialog.open(GitMessagesComponent, {\r\n      width: '400px',\r\n      data: { message: message }\r\n    });\r\n  }\r\n\r\n  openTokenSettings(): void {\r\n    // TODO: Open settings dialog to configure GitHub token\r\n    this.showMessage('Please configure your GitHub Personal Access Token in Settings');\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}","<div class=\"modern-clone-dialog\">\r\n  <h2 mat-dialog-title>Clone Repository</h2>\r\n\r\n  <mat-dialog-content>\r\n    <div class=\"clone-form\">\r\n      <!-- Repository URL -->\r\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n        <mat-label>Repository URL</mat-label>\r\n        <input matInput\r\n               [(ngModel)]=\"cloneRequest.url\"\r\n               (ngModelChange)=\"onUrlChange()\"\r\n               placeholder=\"https://github.com/user/repository.git\"\r\n               required>\r\n        <mat-hint *ngIf=\"isGitHubRepo\">GitHub repository detected</mat-hint>\r\n      </mat-form-field>\r\n\r\n      <!-- Authentication Section for GitHub -->\r\n      <div class=\"auth-section\" *ngIf=\"isGitHubRepo\">\r\n        <mat-card class=\"auth-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>Authentication</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <!-- Token Status -->\r\n            <div class=\"token-status\" *ngIf=\"hasGitHubToken\">\r\n              <mat-icon color=\"primary\">check_circle</mat-icon>\r\n              <span>{{ tokenStatus }}</span>\r\n            </div>\r\n            <div class=\"token-status warn\" *ngIf=\"!hasGitHubToken\">\r\n              <mat-icon color=\"warn\">warning</mat-icon>\r\n              <span>{{ tokenStatus }}</span>\r\n              <button mat-button color=\"primary\" (click)=\"openTokenSettings()\">\r\n                Configure Token\r\n              </button>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <!-- Manual Authentication for non-GitHub -->\r\n      <div class=\"auth-section\" *ngIf=\"!isGitHubRepo && authMethod === 'manual'\">\r\n        <mat-card class=\"auth-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>Authentication</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Username</mat-label>\r\n              <input matInput [(ngModel)]=\"manualCredentials.username\">\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Password / Token</mat-label>\r\n              <input matInput [(ngModel)]=\"manualCredentials.password\" type=\"password\">\r\n            </mat-form-field>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <!-- Clone Location -->\r\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n        <mat-label>Clone to</mat-label>\r\n        <input matInput\r\n               [(ngModel)]=\"cloneRequest.localPath\"\r\n               placeholder=\"Select destination folder\"\r\n               required\r\n               readonly>\r\n        <button mat-icon-button matSuffix (click)=\"openFileSystem()\">\r\n          <mat-icon>folder_open</mat-icon>\r\n        </button>\r\n        <mat-hint>The repository will be cloned to this location</mat-hint>\r\n      </mat-form-field>\r\n\r\n      <!-- Optional: Branch -->\r\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n        <mat-label>Branch (optional)</mat-label>\r\n        <input matInput\r\n               [(ngModel)]=\"cloneRequest.branchName\"\r\n               placeholder=\"main\">\r\n        <mat-hint>Leave empty to clone the default branch</mat-hint>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button (click)=\"cancel()\">Cancel</button>\r\n    <button mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"performClone()\"\r\n            [disabled]=\"!cloneRequest.url || !cloneRequest.localPath\">\r\n      Clone Repository\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>"],"sourceRoot":"webpack:///"}