{"version":3,"sources":["./src/app/md-explorer/pipes/safePipe.ts","./src/app/md-explorer/md-explorer.module.ts","./src/app/md-explorer/components/toolbar/toolbar.component.ts","./src/app/md-explorer/components/toolbar/toolbar.component.html","./src/app/md-explorer/md-explorer.component.ts","./src/app/md-explorer/components/sidenav/sidenav.component.ts","./src/app/md-explorer/components/sidenav/sidenav.component.html","./src/app/md-explorer/components/main-content/main-content.component.ts","./src/app/md-explorer/components/main-content/main-content.component.html","./src/app/md-explorer/services/md-file.service.ts"],"names":[],"mappings":"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","file":"md-explorer-md-explorer-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n  transform(url) {\r\n    debugger;\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\nimport { MainContentComponent } from './components/main-content/main-content.component';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MdExplorerComponent } from './md-explorer.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MdFileService } from './services/md-file.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SafePipe } from './pipes/safePipe';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '', component: MdExplorerComponent,\r\n  children: [\r\n    { path: ':path', component: MainContentComponent },\r\n    { path: '', component: MainContentComponent }\r\n  ]\r\n}];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SidenavComponent,\r\n    ToolbarComponent,\r\n    SafePipe,\r\n    MainContentComponent,\r\n    MdExplorerComponent    \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    MdFileService\r\n  ]\r\n})\r\nexport class MdExplorerModule { }\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n  @Output() toggleSidenav = new EventEmitter<void>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\r\n  <button mat-button class=\"sidenav-toggle\" (click)=\"toggleSidenav.emit()\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n\r\n  <span>MdExplorer</span>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-md-explorer',\n  template: `\n   <app-sidenav></app-sidenav>\n  `,\n  styles: [\n  ]\n})\nexport class MdExplorerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\n\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { MdFileService } from '../../services/md-file.service';\r\nimport { Observable } from 'rxjs';\r\nimport { MdFile } from '../../models/md-file';\r\nimport { IFileInfoNode } from '../../models/IFileInfoNode';\r\n\r\nconst SMALL_WIDTH_BREAKPOINT = 720;\r\n\r\nconst TREE_DATA: IFileInfoNode[] =[];\r\n\r\n/** Flat node with expandable and level information */\r\ninterface IFlatNode {\r\n  expandable: boolean;\r\n  name: string;\r\n  level: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n  private _transformer = (node: IFileInfoNode, level: number) => {\r\n    return {\r\n      expandable: !!node.childrens && node.childrens.length > 0,\r\n      name: node.name,\r\n      level: level,\r\n      path:node.path\r\n    };\r\n  }\r\n  treeControl = new FlatTreeControl<IFlatNode>(\r\n    node => node.level, node => node.expandable);\r\n\r\n  treeFlattener = new MatTreeFlattener(\r\n    this._transformer, node => node.level, node => node.expandable, node => node.childrens);\r\n\r\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n  hasChild = (_: number, node: IFlatNode) => node.expandable;\r\n\r\n  ///////////////////////////////\r\n  mdFiles: Observable<MdFile[]>;\r\n\r\n  public isScreenSmall: boolean;\r\n  constructor(private breakpointObserver: BreakpointObserver\r\n    , private mdFileService: MdFileService\r\n  ) {\r\n    this.dataSource.data = TREE_DATA;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.breakpointObserver.observe([`(max-width:${SMALL_WIDTH_BREAKPOINT}px)`])\r\n      .subscribe((state: BreakpointState) => {\r\n        this.isScreenSmall = state.matches\r\n      });\r\n\r\n    this.mdFiles = this.mdFileService.mdFiles;\r\n    this.mdFileService.mdFiles.subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n    this.mdFileService.loadAll();\r\n\r\n    this.mdFiles.subscribe(data => {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"app-sidenav-container\">\n  <mat-sidenav #sidenav class=\"app-sidenav mat-elevation-z10\"\n               [opened]=\"!isScreenSmall\"\n               [mode]=\"!isScreenSmall ? 'side':'over'\">\n    <mat-toolbar color=\"primary\">Markdown files</mat-toolbar>\n    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n      <!-- This is the tree node template for leaf nodes -->\n      <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n        <!-- use a disabled button to provide padding for tree leaf -->\n        <button mat-icon-button disabled>\n          <mat-icon class=\"mat-icon-rtl-mirror\">\n            {{'text_snippet'}}\n          </mat-icon>\n        </button>\n        <a class=\"\" [routerLink]=\"['/main',node.path]\">{{node.name}}</a>\n        <!--{{node.name}}-->\n      </mat-tree-node>\n      <!-- This is the tree node template for expandable nodes -->\n      <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n        <button mat-icon-button matTreeNodeToggle\n                [attr.aria-label]=\"'Toggle ' + node.name\">\n          <mat-icon class=\"mat-icon-rtl-mirror\">\n            {{treeControl.isExpanded(node) ? 'folder_open' : 'folder'}}\n          </mat-icon>\n        </button>\n\n        {{node.name}}\n      </mat-tree-node>\n    </mat-tree>\n\n    <!--<mat-nav-list>\n      <mat-list-item *ngFor=\"let mdFile of mdFiles | async\">\n        <a matLine [routerLink]=\"['/main',mdFile]\">{{mdFile.name}}</a>\n      </mat-list-item>\n    </mat-nav-list>-->\n\n  </mat-sidenav>\n\n\n  <div class=\"app-sidenav-content\">\n    <app-toolbar (toggleSidenav)=\"sidenav.toggle()\"></app-toolbar>\n    <router-outlet></router-outlet>\n  </div>\n</mat-sidenav-container>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MdFile } from '../../models/md-file';\r\nimport { HrefInterceptorService, IWorkWithElement } from '../../services/href-interceptor.service';\r\nimport { MdFileService } from '../../services/md-file.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n\r\n@Component({\r\n  selector: 'app-main-content',\r\n  templateUrl: './main-content.component.html',\r\n  styleUrls: ['./main-content.component.scss']\r\n})\r\nexport class MainContentComponent implements OnInit {\r\n\r\n  mdFile: MdFile;\r\n  html: string;\r\n  htmlSource: string = '../test.html';\r\n\r\n  helloWorld: IWorkWithElement = (msg) => {\r\n    alert('this is the callback');\r\n  };\r\n\r\n  private _this: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private service: MdFileService,\r\n  private sanitizer:DomSanitizer  ) {\r\n    \r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      debugger;\r\n      const path = params['path'];\r\n      const name = params['name'];\r\n      if (path != undefined) {        \r\n        //this.service.GetHtml(path).subscribe(data => {          \r\n        //  this.html = data;\r\n        //});\r\n        \r\n        this.htmlSource ='../api/mdexplorer/' + path;\r\n          \r\n      }      \r\n    });\r\n\r\n   \r\n\r\n  }\r\n\r\n  gettAlert() {\r\n    alert('cliccato');\r\n  }\r\n\r\n\r\n}\r\n","<!--<div [innerHtml]=\"html\"></div>-->\n<iframe style=\"width:100%; height:100%;\" [src]=\"htmlSource | safe\"></iframe>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MdFile } from '../models/md-file';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MdFileService {\r\n\r\n  private _mdFiles: BehaviorSubject<MdFile[]>;\r\n\r\n  private dataStore: {\r\n    mdFiles: MdFile[]\r\n  }\r\n  constructor(private http: HttpClient) {\r\n    this.dataStore = { mdFiles: [] };\r\n    this._mdFiles = new BehaviorSubject<MdFile[]>([]);\r\n\r\n  }\r\n\r\n  get mdFiles(): Observable<MdFile[]> {\r\n    return this._mdFiles.asObservable();\r\n  }\r\n\r\n\r\n\r\n  loadAll() {\r\n    const url = '../api/mdfiles';\r\n    return this.http.get<MdFile[]>(url)\r\n      .subscribe(data => {\r\n        this.dataStore.mdFiles = data;\r\n        this._mdFiles.next(Object.assign({}, this.dataStore).mdFiles);\r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch mdfile list\");\r\n        });\r\n  }\r\n\r\n  GetHtml(path: string) { //, currentFile: MdFile\r\n    const url = '../api/mdexplorer/' + path;\r\n    return this.http.get(url, { responseType: 'text' })//, currentFile\r\n      \r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}