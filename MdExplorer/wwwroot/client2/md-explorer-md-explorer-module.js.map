{"version":3,"sources":["./src/app/signalR/dialogs/rules/rules.component.ts","./src/app/signalR/dialogs/rules/rules.component.html","./src/app/md-explorer/components/gitlab-settings/gitlab-settings.component.ts","./src/app/md-explorer/components/gitlab-settings/gitlab-settings.component.html","./src/app/md-explorer/components/publish-md-tree/publish-md-tree.component.ts","./src/app/md-explorer/components/publish-md-tree/publish-md-tree.component.html","./src/app/md-explorer/pipes/safePipe.ts","./src/app/md-explorer/md-explorer.module.ts","./src/app/md-explorer/components/dialogs/settings/settings.component.ts","./src/app/md-explorer/components/dialogs/settings/settings.component.html","./src/app/md-explorer/components/dialogs/delete-markdown/delete-markdown.component.ts","./src/app/md-explorer/components/dialogs/delete-markdown/delete-markdown.component.html","./src/app/md-explorer/components/refactoring/rename-file/rename-file.component.ts","./src/app/md-explorer/components/refactoring/rename-file/rename-file.component.html","./src/app/md-explorer/components/dialogs/change-directory/change-directory.component.ts","./src/app/md-explorer/components/dialogs/change-directory/change-directory.component.html","./src/app/md-explorer/components/toolbar/toolbar.component.ts","./src/app/md-explorer/components/toolbar/toolbar.component.html","./src/app/git/models/gitlab-setting.ts","./src/app/git/services/gitservice.service.ts","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/clipboard.js","./src/app/md-explorer/components/dialogs/new-markdown/new-markdown.component.ts","./src/app/md-explorer/components/dialogs/new-markdown/new-markdown.component.html","./src/app/md-explorer/md-explorer.component.ts","./src/app/md-explorer/components/sidenav/sidenav.component.ts","./src/app/md-explorer/components/sidenav/sidenav.component.html","./src/app/md-explorer/services/md-refactoring.service.ts","./src/app/md-explorer/components/main-content/main-content.component.ts","./src/app/md-explorer/components/main-content/main-content.component.html","./src/app/md-explorer/components/document-settings/document-settings.component.html","./src/app/md-explorer/components/document-settings/document-settings.component.ts","./src/app/md-explorer/components/dialogs/new-directory/new-directory.component.ts","./src/app/md-explorer/components/dialogs/new-directory/new-directory.component.html","./src/app/md-explorer/components/md-tree/md-tree.component.ts","./src/app/md-explorer/components/md-tree/md-tree.component.html"],"names":[],"mappings":"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;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6BAA6B,sDAAe,CAAC,wDAAQ,GAAG;AACxG,kBAAkB,wEAAkB,EAAE,wCAAwC,sBAAsB,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,wCAAwC;AAClK;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4DAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,+DAAwB,aAAa,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,mCAAmC;AACjP,0BAA0B,+DAAwB,EAAE,yIAAyI;AAC7L,QAAQ,wDAA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","file":"md-explorer-md-explorer-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core';\r\nimport { MdRefactoringService } from '../../../md-explorer/services/md-refactoring.service';\r\nimport { MdFileService } from '../../../md-explorer/services/md-file.service';\r\nimport { MdFile } from '../../../md-explorer/models/md-file';\r\n\r\n\r\n@Component({\r\n  selector: 'app-rules',\r\n  templateUrl: './rules.component.html',\r\n  styleUrls: ['./rules.component.scss']\r\n})\r\nexport class RulesComponent implements OnInit {\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<RulesComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private refactoringService: MdRefactoringService,\r\n    private mdFileService: MdFileService,\r\n  ) { }\r\n\r\n\r\n  public message: string;\r\n  public fromFileName: string;\r\n  public toFileName: string;\r\n\r\n  ngOnInit(): void {    \r\n    this.message = this.data.message;\r\n    this.fromFileName = this.data.fromFileName;\r\n    this.toFileName = this.data.toFileName;\r\n   \r\n  }\r\n\r\n  changeName(): void {    \r\n    this.refactoringService.renameFileName(this.data)\r\n      .subscribe(data => {\r\n        var oldPath = data.relativePath + '\\\\' + data.oldName;\r\n        var newPath = data.relativePath + '\\\\' + data.newName;        \r\n        var oldFile = new MdFile(data.oldName, oldPath, data.oldLevel, false);\r\n        oldFile.relativePath = oldPath;\r\n        oldFile.fullPath = data.oldPath;\r\n        var newFile = new MdFile(data.newName, newPath, data.newLevel, false);\r\n        newFile.fullPath = data.newPath;\r\n        newFile.relativePath = newPath;\r\n        this.mdFileService.changeDataStoreMdFiles(oldFile, newFile);        \r\n        this.dialogRef.close(data);\r\n      });\r\n  }\r\n\r\n  closeDialog(data: any) {\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n  dismiss() {\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n}\r\n","\r\n<h1>rule # 1 broken!</h1>\r\n\r\n<p>{{message}}</p>\r\n<p>{{fromFileName}}</p>\r\n<p>{{toFileName}}</p>\r\n\r\n<button mat-button color=\"primary\" (click)=\"changeName()\">\r\n  <mat-icon>swap_horiz</mat-icon>change file name\r\n</button>\r\n<button mat-button color=\"primary\" (click)=\"dismiss()\">\r\n  <mat-icon>cancel</mat-icon>Cancel\r\n</button>\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gitlab-settings',\n  templateUrl: './gitlab-settings.component.html',\n  styleUrls: ['./gitlab-settings.component.scss']\n})\nexport class GitlabSettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-columns\">\n  <div class=\"container-title\">    \n    <img src=\"/assets/gitlabcicd.png\" style=\"width:300px\" />\n  </div>\n</div>\n","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { CollectionViewer, SelectionChange, DataSource } from '@angular/cdk/collections';\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { Router } from '@angular/router';\r\nimport { IFileInfoNode } from '../../models/IFileInfoNode';\r\nimport { MdFile } from '../../models/md-file';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { DynamicDatabase } from '../../../projects/new-project/new-project.component';\r\nimport { MdFileService } from '../../services/md-file.service';\r\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NewMarkdownComponent } from '../dialogs/new-markdown/new-markdown.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NewDirectoryComponent } from '../dialogs/new-directory/new-directory.component';\r\nimport { ChangeDirectoryComponent } from '../dialogs/change-directory/change-directory.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { DeleteMarkdownComponent } from '../dialogs/delete-markdown/delete-markdown.component';\r\n\nclass DynamicDataSource implements DataSource<MdFile> {\r\n\r\n  dataChange = new BehaviorSubject<MdFile[]>([]);\r\n\r\n  get data(): MdFile[] { return this.dataChange.value; }\r\n  set data(value: MdFile[]) {\r\n    this._treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private _treeControl: FlatTreeControl<MdFile>,\r\n    private _database: DynamicDatabase,\r\n    private _mdFileService: MdFileService) {\r\n    this.data = _database.initialData();\r\n    this._mdFileService.loadPublishNodes('root', 0).subscribe(_ => {      \r\n      this.data = _;\r\n    });\r\n  }\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<MdFile[]> {\r\n    this._treeControl.expansionModel.changed.subscribe(change => {\r\n      if ((change as SelectionChange<MdFile>).added ||\r\n        (change as SelectionChange<MdFile>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<MdFile>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\r\n\r\n  disconnect(collectionViewer: CollectionViewer): void { }\r\n\r\n  /** Handle expand/collapse behaviors */\r\n  handleTreeControl(change: SelectionChange<MdFile>) {\r\n    if (change.added) {\r\n      change.added.forEach(node => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the node, remove from display list\r\n   */\r\n  toggleNode(node: MdFile, expand: boolean) {\r\n    this._mdFileService.loadPublishNodes(node.path, node.level + 1).subscribe(_ => {\r\n\r\n      const children = _;\r\n      const index = this.data.indexOf(node);\r\n\r\n      if (!children || index < 0) { // If no children, or cannot find the node, no op\r\n        return;\r\n      }\r\n\r\n      node.isLoading = true;\r\n\r\n      setTimeout(() => {\r\n        if (expand) {\r\n          const nodes = children; // punto per fare chiamata remota\r\n          this.data.splice(index + 1, 0, ...nodes);\r\n        } else {\r\n          let count = 0;\r\n          for (let i = index + 1; i < this.data.length\r\n            && this.data[i].level > node.level; i++, count++) { }\r\n          this.data.splice(index + 1, count);\r\n        }\r\n\r\n        // notify the change\r\n        this.dataChange.next(this.data);\r\n        node.isLoading = false;\r\n      });\r\n    });\r\n  }\r\n}\n\n\n@Component({\n  selector: 'app-publish-md-tree',\n  templateUrl: './publish-md-tree.component.html',\n  styleUrls: ['./publish-md-tree.component.scss']\n})\nexport class PublishMdTreeComponent implements OnInit {\n  \r\n  menuTopLeftPosition = { x: 0, y: 0 }\r\n  @ViewChild(MatMenuTrigger, { static: true }) matMenuTrigger: MatMenuTrigger;\r\n  folder: {\r\n    name: string,\r\n    path: string\r\n  }\n  \n  constructor(private router: Router,\n              private database: DynamicDatabase,\n              private mdFileService: MdFileService,\n              private projectService: ProjectsService,\n              public dialog: MatDialog,\n              private snackBar: MatSnackBar,\r\n              private clipboard: Clipboard,\n              ) {\n    this.treeControl = new FlatTreeControl<MdFile>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new DynamicDataSource(this.treeControl, database, mdFileService);\n  }\n\n\n  ngOnInit(): void {\n  }\n  public getFolder(node: IFileInfoNode) {\r\n    this.folder.name = node.name;\r\n    this.folder.path = node.path;\r\n  }\n  activeNode: any;\r\n  treeControl: FlatTreeControl<MdFile>;\r\n  dataSource: DynamicDataSource;\r\n  isFolder = (_: number, node: IFileInfoNode) => node.type == \"publishFolder\";\n  isEmptyRoot = (_: number, node: IFileInfoNode) => node.type == \"root\";\n  getLevel = (node: MdFile) => node.level;\r\n  isExpandable = (node: MdFile) => node.expandable;\n\n\n  onRightClick(event: MouseEvent, item) {\r\n    // preventDefault avoids to show the visualization of the right-click menu of the browser\r\n    event.preventDefault();\r\n    if (item == null) {\r\n      item = new MdFile(\"root\", \"root\", 0, false);\r\n      item.fullPath = \"root\";\r\n    }\r\n    // we record the mouse position in our object\r\n    this.menuTopLeftPosition.x = event.clientX;\r\n    this.menuTopLeftPosition.y = event.clientY;\r\n\r\n    // we open the menu\r\n    // we pass to the menu the information about our object\r\n    this.matMenuTrigger.menuData = { item: item }\r\n\r\n    // we open the menu\r\n    this.matMenuTrigger.openMenu();\r\n\r\n  }\n\n  createMdOn(node: MdFile) {\r\n\r\n    this.dialog.open(NewMarkdownComponent, {\r\n      width: '300px',\r\n      //height:'400px',\r\n      data: node,\r\n    });\r\n  }\n\r\n  createDirectoryOn(node: MdFile) {\r\n    if (node == null) {\r\n      node = new MdFile(\"root\", \"root\", 0, false);\r\n      node.fullPath = \"root\";\r\n    }\r\n    this.dialog.open(NewDirectoryComponent, {\r\n      width: '300px',\r\n      data: node,\r\n    });\r\n  }\r\n\r\n  renameDirectoryOn(node: MdFile) {\r\n    if (node == null) {\r\n      node = new MdFile(\"root\", \"root\", 0, false);\r\n      node.fullPath = \"root\";\r\n    }\r\n    this.dialog.open(ChangeDirectoryComponent, {\r\n      width: '300px',\r\n      data: node,\r\n    });\r\n  }\r\n\r\n  openFolderOn(node: MdFile) {\r\n    this.mdFileService.openFolderOnFileExplorer(node).subscribe(_ => {\r\n      this.snackBar.open(\"file explorer open\", \"\", { duration: 500 });\r\n    });\r\n  }\r\n\r\n  getLinkFromNode(node: MdFile) {\r\n    this.clipboard.copy(node.relativePath);\r\n\r\n  }\r\n\r\n  deleteFile(node: MdFile) {\r\n    this.dialog.open(DeleteMarkdownComponent, {\r\n      width: '300px',\r\n      data: node,\r\n    });\r\n\r\n  }\n\r\n  getNode(node: MdFile) {\r\n    this.router.navigate(['/main/navigation/document']);\r\n    this.mdFileService.setSelectedMdFileFromSideNav(node);\r\n    this.activeNode = node;\r\n  }\n\n  openGitlabSettingsFromNode(node: MdFile) {\n    this.router.navigate(['/main/navigation/gitlabsettings']);\n  }\n\n}\n","<div style=\"visibility: hidden; position: fixed;\"\r\n     [style.left.px]=\"menuTopLeftPosition.x\"\r\n     [style.top.px]=\"menuTopLeftPosition.y\"\r\n     [matMenuTriggerFor]=\"rightMenu\"></div>\r\n\r\n<mat-menu #rightMenu=\"matMenu\">\r\n  <ng-template matMenuContent let-item=\"item\">\r\n    <div>\r\n      <button *ngIf=\"item.type==='publishFolder'\" mat-icon-button color=\"accent\" matTooltip=\"rename folder\" (click)=\"renameDirectoryOn(item)\">\r\n        <img src=\"/assets/rename.png\" alt=\"Rename directory\" />\r\n      </button>\r\n      <button *ngIf=\"item.type==='publishFolder' || item.type==='root'\" mat-icon-button matTooltip=\"create new folder\" color=\"primary\" (click)=\"createDirectoryOn(item)\">\r\n        <mat-icon>create_new_folder</mat-icon>\r\n      </button>\r\n      <button *ngIf=\"item.type==='publishFolder' || item.type==='root'\" mat-icon-button matTooltip=\"create new document\" color=\"primary\" (click)=\"createMdOn(item)\">\r\n        <mat-icon>note_add</mat-icon>\r\n      </button>\r\n      <button *ngIf=\"item.type==='mdFile'\" mat-icon-button color=\"warn\" (click)=\"deleteFile(item)\" matTooltip=\"delete document\">\r\n        <mat-icon>delete</mat-icon>\r\n      </button>\r\n      <button *ngIf=\"item.type==='mdFile'\" mat-icon-button color=\"primary\" (click)=\"getLinkFromNode(item)\" matTooltip=\"copy link to clipboard\"><mat-icon>link</mat-icon></button>\r\n      <button *ngIf=\"item.type==='mdFile'\" mat-icon-button color=\"primary\" (click)=\"openGitlabSettingsFromNode(item)\" matTooltip=\"Gitlab settings\">\r\n        <img src=\"/assets/gitlab.png\" />\r\n      </button>\r\n    </div>\r\n    <button *ngIf=\"item.type==='publishFolder' || item.type==='root'\" mat-menu-item (click)=\"openFolderOn(item)\"><b style=\"color:violet\">Open</b> directory on <b style=\"color:blue\">File Explorer</b></button>\r\n  </ng-template>\r\n</mat-menu>\r\n\r\n\r\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n  <!-- This is the tree node template for leaf nodes -->\r\n  <mat-tree-node *matTreeNodeDef=\"let node\"\r\n                 color=\"accent\"\r\n                 matTreeNodePadding\r\n                 (contextmenu)=\"onRightClick($event, node)\"\r\n                 style=\"cursor:pointer\">\r\n    <!-- use a disabled button to provide padding for tree leaf -->\r\n    <button mat-icon-button style=\"cursor:pointer\">\r\n      <mat-icon>text_snippet</mat-icon>\r\n    </button>\r\n    <a (click)=\"getNode(node)\" [ngClass]=\"activeNode === node ? 'background-highlight': 'accent-link'\">{{node.name}}</a>\r\n  </mat-tree-node>\r\n\r\n  <!-- This is the tree node template for expandable nodes -->\r\n  <mat-tree-node *matTreeNodeDef=\"let node;when: isFolder\"\r\n                 style=\"cursor:pointer\" matTreeNodePadding\r\n                 (contextmenu)=\"onRightClick($event, node)\">\r\n    <button mat-icon-button\r\n            matTreeNodeToggle\r\n            color=\"accent\"\r\n            [attr.aria-label]=\"'Toggle ' + node.name\">\r\n      <mat-icon>\r\n        {{treeControl.isExpanded(node) ? 'folder_open' : 'folder'}}\r\n      </mat-icon>\r\n    </button>\r\n    {{node.name}}\r\n  </mat-tree-node>\r\n\r\n  <mat-tree-node *matTreeNodeDef=\"let node;when: isEmptyRoot\"\r\n                 style=\"cursor:pointer\" matTreeNodePadding (contextmenu)=\"onRightClick($event, node)\">\r\n    <button mat-icon-button matTreeNodeToggle color=\"accent\"\r\n            [attr.aria-label]=\"'Toggle ' + node.name\">\r\n      <mat-icon>folder</mat-icon>\r\n    </button>\r\n    {{node.name}}\r\n  </mat-tree-node>\r\n</mat-tree>\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n  transform(url) {\r\n    \r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\nimport { MainContentComponent } from './components/main-content/main-content.component';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MdExplorerComponent } from './md-explorer.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MdFileService } from './services/md-file.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SafePipe } from './pipes/safePipe';\r\nimport { SettingsComponent } from './components/dialogs/settings/settings.component';\r\nimport { RenameFileComponent } from './components/refactoring/rename-file/rename-file.component';\r\nimport { RulesComponent } from '../signalR/dialogs/rules/rules.component';\r\nimport { NewMarkdownComponent } from './components/dialogs/new-markdown/new-markdown.component';\r\nimport { NewDirectoryComponent } from './components/dialogs/new-directory/new-directory.component';\r\nimport { MdTreeComponent } from './components/md-tree/md-tree.component';\r\nimport { ConnectionLostComponent } from '../signalR/dialogs/connection-lost/connection-lost.component';\r\nimport { ParsingProjectComponent } from '../signalR/dialogs/parsing-project/parsing-project.component';\r\nimport { ParsingProjectProvider } from '../signalR/dialogs/parsing-project/parsing-project.provider';\r\nimport { ChangeDirectoryComponent } from './components/dialogs/change-directory/change-directory.component';\r\nimport { DeleteMarkdownComponent } from './components/dialogs/delete-markdown/delete-markdown.component';\nimport { PublishMdTreeComponent } from './components/publish-md-tree/publish-md-tree.component';\nimport { GitlabSettingsComponent } from './components/gitlab-settings/gitlab-settings.component';\nimport { DocumentSettingsComponent } from './components/document-settings/document-settings.component';\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: SidenavComponent },\r\n  {\r\n  path: 'navigation', component: SidenavComponent,\r\n  children: [\r\n    { path: 'document', component: MainContentComponent },\r\n    { path: 'gitlabsettings', component: GitlabSettingsComponent },\r\n    { path: 'documentsettings', component: DocumentSettingsComponent },\r\n  ]\r\n  }];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SidenavComponent,\r\n    ToolbarComponent,\r\n    SafePipe,\r\n    MainContentComponent,\r\n    MdExplorerComponent,\r\n    SettingsComponent,\r\n    RenameFileComponent,\r\n    RulesComponent,\r\n    NewMarkdownComponent,\r\n    NewDirectoryComponent,\r\n    MdTreeComponent,\r\n    ConnectionLostComponent,\r\n    ParsingProjectComponent,\r\n    ChangeDirectoryComponent,\r\n    DeleteMarkdownComponent,\r\n    PublishMdTreeComponent,\r\n    GitlabSettingsComponent,\r\n    DocumentSettingsComponent,\r\n      \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    MdFileService,\r\n    \r\n  ]\r\n})\r\nexport class MdExplorerModule {\r\n  constructor() {\r\n    console.log('constructor MdExplorerModule');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { IMdSetting } from '../../../../Models/IMdSetting'\r\nimport { AppCurrentMetadataService } from '../../../../services/app-current-metadata.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n \r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  _settings: IMdSetting[];\r\n  vscodePath: string;\r\n  jiraServer: string;\r\n  plantumlLocalPath: string;\r\n  javaPath: string;\r\n  localGraphvizDotPath: string;\r\n\r\n  constructor(private appCurrentFolder: AppCurrentMetadataService,\r\n    private dialogRef: MatDialogRef<SettingsComponent>,\r\n    private _snackBar: MatSnackBar\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.appCurrentFolder.loadSettings();\r\n    this.appCurrentFolder.settings.subscribe((data: any) => {\r\n      var settings = data.settings as IMdSetting[];\r\n      if (settings != undefined) {\r\n        this._settings = settings;\r\n        this.vscodePath = settings.filter(_ => _.name === \"EditorPath\")[0].valueString || null;\r\n        this.jiraServer = settings.filter(_ => _.name === \"JiraServer\")[0].valueString || null;\r\n        this.plantumlLocalPath = settings.filter(_ => _.name === \"PlantumlLocalPath\")[0].valueString || null;\r\n        this.javaPath = settings.filter(_ => _.name === \"JavaPath\")[0].valueString || null;\r\n        this.localGraphvizDotPath = settings.filter(_ => _.name === \"LocalGraphvizDotPath\")[0].valueString || null;\r\n      }\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this._settings.filter(_ => _.name === \"EditorPath\")[0].valueString = this.vscodePath;\r\n    this._settings.filter(_ => _.name === \"JiraServer\")[0].valueString = this.jiraServer;\r\n    this._settings.filter(_ => _.name === \"PlantumlLocalPath\")[0].valueString = this.plantumlLocalPath;\r\n    this._settings.filter(_ => _.name === \"JavaPath\")[0].valueString = this.javaPath;\r\n    this._settings.filter(_ => _.name === \"LocalGraphvizDotPath\")[0].valueString = this.localGraphvizDotPath;\r\n\r\n    this.appCurrentFolder.saveSettings().subscribe(data => {\r\n      this._snackBar.open(\"settings saved\",\"\" ,{ duration: 1000 });\r\n    });\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n  dismiss() {\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n}\r\n","\r\n<h2 style=\"display:inline;\" mat-dialog-title>\r\n  <img style=\"display:inline; vertical-align:middle\" src=\"/assets/IconReady.png\" />\r\n  <span>MdExplorer Settings</span>\r\n</h2>\r\n\r\n<mat-dialog-content>\r\n  <mat-card style=\"margin-top:10px; margin-bottom:10px\">\r\n    <div class=\"example-container\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Visual studio code server path</mat-label>\r\n        <input matInput [(ngModel)]=\"vscodePath\" placeholder=\"Visual studio code path\">\r\n        <mat-hint>Set visual studio Path</mat-hint>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Plantuml local path</mat-label>\r\n        <input matInput [(ngModel)]=\"plantumlLocalPath\" placeholder=\"plantuml local path\">\r\n        <mat-hint>Set path for plantuml server</mat-hint>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Java path</mat-label>\r\n        <input matInput [(ngModel)]=\"javaPath\" placeholder=\"Java folder\">\r\n        <mat-hint>Set java path</mat-hint>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>LocalGraphvizDot path</mat-label>\r\n        <input matInput [(ngModel)]=\"localGraphvizDotPath\" placeholder=\"LocalGraphvizDot Path\">\r\n        <mat-hint>Set graphiz internal path</mat-hint>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Jira path</mat-label>\r\n        <input matInput [(ngModel)]=\"jiraServer\" placeholder=\"Jira path\">\r\n        <mat-hint>Set http to jira</mat-hint>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-card>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button mat-button color=\"primary\" (click)=\"save()\">\r\n    <mat-icon>save</mat-icon>Save\r\n  </button>\r\n  <button mat-button color=\"primary\" (click)=\"dismiss()\">\r\n    <mat-icon>cancel</mat-icon>Cancel\r\n  </button>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MdFile } from '../../../models/md-file';\r\nimport { MdFileService } from '../../../services/md-file.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-markdown',\r\n  templateUrl: './delete-markdown.component.html',\r\n  styleUrls: ['./delete-markdown.component.scss']\r\n})\r\nexport class DeleteMarkdownComponent implements OnInit {\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DeleteMarkdownComponent>,\r\n    private mdFileService: MdFileService,\r\n    @Inject(MAT_DIALOG_DATA) public data: MdFile,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  dismiss() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  delete() {\r\n    this.mdFileService.deleteFile(this.data);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div mat-dialog-title>\r\n   Delete markdown\r\n</div>\r\n<mat-dialog-content>\r\n  There are not depencies\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button mat-button color=\"warn\" (click)=\"delete()\">\r\n    Yes\r\n  </button>\r\n  <button mat-button color=\"primary\" (click)=\"dismiss()\">\r\n    Cancel\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { IRefactoringSourceAction } from '../../../models/irefactoring-source-action';\r\nimport { MdRefactoringService } from '../../../services/md-refactoring.service';\r\n\r\n@Component({\r\n  selector: 'app-rename-file',\r\n  templateUrl: './rename-file.component.html',\r\n  styleUrls: ['./rename-file.component.scss']\r\n})\r\nexport class RenameFileComponent implements OnInit {\r\n\r\n  constructor(private mdRefactoringService: MdRefactoringService,\r\n    private dialogRef: MatDialogRef<RenameFileComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,  ) {\r\n  }\r\n  public actionList: IRefactoringSourceAction[];\r\n  public displayedColumns = ['suggestedAction', 'fileName', 'oldLinkStored', 'newLinkToReplace'];\r\n\r\n  ngOnInit(): void {    \r\n    this.mdRefactoringService.getRefactoringSourceActionList(this.data.refactoringSourceActionId).subscribe(data => {      \r\n      this.actionList = data;\r\n    },\r\n      error => {\r\n        console.log(\"failed to fetch GetRefactoringFileEvent List\");\r\n      });;\r\n  }\r\n\r\n  doRefactoring() {\r\n\r\n    this.dialogRef.close(null);\r\n  }\r\n}\r\n","<h1>WOW! Relinking analysis!</h1>\r\n<mat-dialog-content>\r\n\r\n  <table mat-table [dataSource]=\"this.actionList\">\r\n    <ng-container matColumnDef=\"suggestedAction\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.suggestedAction}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"fileName\">\r\n      <th mat-header-cell *matHeaderCellDef> File Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.fileName}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"oldLinkStored\">\r\n      <th mat-header-cell *matHeaderCellDef> Old Link </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.oldLinkStored}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"newLinkToReplace\">\r\n      <th mat-header-cell *matHeaderCellDef> New Link </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.newLinkToReplace}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: this.displayedColumns;\"></tr>\r\n\r\n  </table>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n  <button mat-button color=\"primary\" (click)=\"doRefactoring()\">\r\n    <mat-icon>ok</mat-icon>Ok\r\n  </button>\r\n  \r\n</mat-dialog-actions>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MdFile } from '../../../models/md-file';\r\nimport { MdFileService } from '../../../services/md-file.service';\r\nimport { NewDirectoryComponent } from '../new-directory/new-directory.component';\r\n\r\n@Component({\r\n  selector: 'app-change-directory',\r\n  templateUrl: './change-directory.component.html',\r\n  styleUrls: ['./change-directory.component.scss']\r\n})\r\nexport class ChangeDirectoryComponent implements OnInit {\r\n  public directoryName: string\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: MdFile,\r\n    private dialogRef: MatDialogRef<NewDirectoryComponent>,\r\n    private mdFileService: MdFileService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  dismiss() {\r\n    this.dialogRef.close();\r\n  }\r\n  save() {\r\n    this.mdFileService.RenameDirectory(this.data.fullPath, this.directoryName, this.data.level)\r\n      .subscribe(data => {        \r\n        this.mdFileService.addNewDirectory(data);\r\n        this.mdFileService.setSelectedDirectoryFromNewDirectory(data[data.length - 1]);\r\n      });\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <div class=\"simple-container\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Directory Name</mat-label>\r\n      <input matInput [(ngModel)]=\"directoryName\" (keyup.enter)=\"save()\" placeholder=\"directoryName\">\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button mat-button color=\"primary\" (click)=\"save()\">\r\n    <mat-icon>save</mat-icon>Save\r\n  </button>\r\n  <button mat-button color=\"primary\" (click)=\"dismiss()\">\r\n    <mat-icon>cancel</mat-icon>Cancel\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { AfterViewInit, Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ServerMessagesService } from '../../../signalr/services/server-messages.service';\r\nimport { SettingsComponent } from '../dialogs/settings/settings.component';\r\nimport { RenameFileComponent } from '../refactoring/rename-file/rename-file.component';\r\nimport { MdFileService } from '../../services/md-file.service';\r\nimport { RulesComponent } from '../../../signalR/dialogs/rules/rules.component';\r\nimport { MdFile } from '../../models/md-file';\r\nimport { GITService } from '../../../git/services/gitservice.service';\r\nimport { AppCurrentMetadataService } from '../../../services/app-current-metadata.service';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { IBranch } from '../../../git/models/branch';\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\nimport { ITag } from '../../../git/models/Tag';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  public currentBranch: string;\r\n  @ViewChild(MatMenuTrigger) matMenuTrigger: MatMenuTrigger;\r\n  @ViewChild(MatTabGroup) tabGroup: MatTabGroup;\r\n  TitleToShow: string;\r\n  absolutePath: string;\r\n  relativePath: string;\r\n  connectionId: string;\r\n  somethingIsChangedInTheBranch: boolean;\r\n  howManyFilesAreToCommit: number;\r\n  branches: IBranch[];\r\n  taglist: ITag[];\r\n\r\n  //@Output() toggleSidenav = new EventEmitter<void>();\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private monitorMDService: ServerMessagesService,\r\n    private http: HttpClient,\r\n    private _snackBar: MatSnackBar,\r\n    public mdFileService: MdFileService,\r\n    private gitservice: GITService,\r\n    private appSettings: AppCurrentMetadataService,\r\n    private projectService: ProjectsService,\r\n    private router: Router\r\n\r\n  ) {\r\n    this.TitleToShow = \"MdExplorer\";\r\n  }    \r\n\r\n  ngOnInit(): void {    \r\n    this.monitorMDService.addMdProcessedListener(this.markdownFileIsProcessed, this);\r\n    this.monitorMDService.addPdfIsReadyListener(this.showPdfIsready, this); //TODO: da spostare in SignalR\r\n    this.monitorMDService.addMdRule1Listener(this.showRule1IsBroken, this);//TODO: da spostare in SignalR\r\n    // get current branch name and if the branch has something to commit\r\n    this.gitservice.getCurrentBranch().subscribe(branch => {\r\n      this.currentBranch = branch.name;\r\n      this.somethingIsChangedInTheBranch = branch.somethingIsChangedInTheBranch;\r\n      this.howManyFilesAreToCommit = branch.howManyFilesAreChanged;\r\n    });    \r\n\r\n    this.gitservice.getBranchList().subscribe(branches => {\r\n      this.branches = branches;\r\n    });    \r\n\r\n    // something is selected from treeview/sidenav\r\n    this.mdFileService.selectedMdFileFromSideNav.subscribe(_ => {\r\n      if (_ != null) {\r\n        this.mdFileService.navigationArray = [];\r\n        this.absolutePath = _.fullPath;\r\n        this.relativePath = _.relativePath;\r\n      }\r\n    });\r\n    // something has changed on filesystem\r\n    this.mdFileService.serverSelectedMdFile.subscribe(val => {\r\n      var current = val[0];\r\n\r\n      if (current != undefined) {\r\n        let index = this.mdFileService.navigationArray.length;\r\n        if (index > 0) {\r\n          //if (current.fullPath == this.mdFileService.navigationArray[index - 1].fullPath) {\r\n          if (current == this.mdFileService.navigationArray[index - 1]) {\r\n            //return;\r\n          }\r\n        }\r\n        this.absolutePath = current.fullPath;\r\n        this.relativePath = current.relativePath;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  toggleSidenav() {\r\n    let test = !this.appSettings.showSidenav.value;\r\n    this.appSettings.showSidenav.next(test);\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(SettingsComponent, {\r\n      width: '600px',\r\n\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  openRules(data: any): void {\r\n    const dialogRef = this.dialog.open(RulesComponent, {\r\n      width: '600px',\r\n      data: data\r\n    });\r\n    dialogRef.afterClosed().subscribe(_ => {\r\n      if (_.refactoringSourceActionId != undefined) {\r\n        this.dialog.open(RenameFileComponent, {\r\n          width: '600px',\r\n          data: _\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private showRule1IsBroken(data: any, objectThis: ToolbarComponent) {\r\n    objectThis.openRules(data);\r\n  }\r\n\r\n  private sendExportRequest(data, objectThis: ToolbarComponent) {\r\n    const url = '../api/mdexport/' + objectThis.relativePath + '?connectionId=' + data;\r\n    return objectThis.http.get(url)\r\n      .subscribe(data => { console.log(data) });\r\n  }\r\n\r\n  private showPdfIsready(data: any, objectThis: ToolbarComponent) {\r\n    let snackRef = objectThis._snackBar.open(\"seconds: \" + data.executionTimeInSeconds, \"Open folder\", { duration: 5000, verticalPosition: 'top' });\r\n    snackRef.onAction().subscribe(() => {\r\n      const url = '../api/AppSettings/OpenChromePdf?path=' + data.path;\r\n      return objectThis.http.get(url)\r\n        .subscribe(data => { console.log(data) });\r\n    });\r\n  }\r\n\r\n  private markdownFileIsProcessed(data: MdFile, objectThis: ToolbarComponent) {\r\n    objectThis.mdFileService.navigationArray.push(data);\r\n    objectThis.mdFileService.setSelectedMdFileFromServer(data);\r\n  }\r\n\r\n  OpenEditor() {\r\n    const url = '../api/AppSettings/OpenFile?path=' + this.absolutePath;\r\n    return this.http.get(url)\r\n      .subscribe(data => { console.log(data) });\r\n  }\r\n\r\n  Export() {\r\n    this._snackBar.open(\"Export request queued!\", null, { duration: 2000, verticalPosition: 'top' });\r\n    this.monitorMDService.getConnectionId(this.sendExportRequest, this);\r\n  }\r\n\r\n  backToDocument(doc: MdFile) {\r\n    var thatFile = this.mdFileService.navigationArray.find(_ => _.fullPath == doc.fullPath);\r\n    if (thatFile != null && thatFile != undefined) {\r\n      let i = this.mdFileService.navigationArray.length;\r\n      let toDelete = this.mdFileService.navigationArray[i - 1];\r\n      do {\r\n        this.mdFileService.navigationArray.pop();\r\n        i = i - 1;\r\n        toDelete = this.mdFileService.navigationArray[i - 1];\r\n      } while (toDelete != undefined && toDelete.fullPath == thatFile.fullPath)\r\n    }\r\n    this.mdFileService.setSelectedMdFileFromToolbar(doc);\r\n  }\r\n\r\n  openBranch(branch: IBranch): void {    \r\n    this.gitservice.checkoutSelectedBranch(branch).subscribe(_ => {      \r\n      this.currentBranch = _.name;\r\n      var mdFile = new MdFile(\"Welcome to MDExplorer\", '/../welcome.html', 0, false);\r\n      mdFile.relativePath = '/../../welcome.html';\r\n      this.mdFileService.setSelectedMdFileFromSideNav(mdFile);      \r\n      this.projectService.setNewFolderProject(_.fullPath).subscribe(_ => {\r\n        this.mdFileService.loadAll(null,null);\r\n        this.router.navigate(['/main/navigation/document']);\r\n      });\r\n    });\r\n    this.matMenuTrigger.closeMenu();\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <button mat-icon-button matTooltip=\"hide/show menu\" (click)=\"toggleSidenav()\">\r\n      <mat-icon>vertical_split</mat-icon>\r\n    </button>\r\n    <button mat-icon-button matTooltip=\"edit document\" (click)=\"OpenEditor()\">\r\n      <mat-icon>edit_note</mat-icon>\r\n    </button>\r\n    <button mat-icon-button matTooltip=\"export in word\" (click)=\"Export()\">\r\n      <mat-icon>directions</mat-icon>\r\n    </button>\r\n    <span *ngFor=\"let doc of this.mdFileService.navigationArray\">\r\n      <span style=\"color:aquamarine\" *ngIf=\"this.mdFileService.navigationArray.indexOf(doc)>0\">>></span>\r\n      <a [ngStyle]=\"this.mdFileService.navigationArray.indexOf(doc)<this.mdFileService.navigationArray.length - 1 ? {'cursor':'pointer', 'color':'orange'}:{}\"\r\n         (click)=\"this.mdFileService.navigationArray.indexOf(doc)<this.mdFileService.navigationArray.length - 1 ? backToDocument(doc):return;\">{{doc.name}}</a>\r\n    </span>\r\n    <span class=\"flexExpand\"></span>\r\n    <span *ngIf=\"currentBranch!=null\">\r\n      <div *ngIf=\"somethingIsChangedInTheBranch\" matBadge=\"{{howManyFilesAreToCommit}}\" matBadgePosition=\"before\"\r\n           matBadgeOverlap=\"false\" matBadgeColor=\"accent\" matBadgeSize=\"small\">\r\n      </div>\r\n      <button mat-button [matMenuTriggerFor]=\"tagsAndBranches\" [ngClass]=\"!somethingIsChangedInTheBranch? 'branchGood':'branchToCommit'\">[{{currentBranch}}] <img src=\"/assets/gitlogo.png\" /></button>\r\n      <mat-menu  #tagsAndBranches=\"matMenu\">\r\n        <div *ngIf=\"!somethingIsChangedInTheBranch\">\r\n          <div class=\"container\" *ngFor=\"let branch of branches\" color=\"warn\" mat-menu-item (click)=\"$event.stopPropagation()\">\r\n            <span>{{branch.name}}</span><span class=\"flexExpand\"></span>\r\n            <button mat-icon-button (click)=\"openBranch(branch)\">\r\n              <mat-icon style=\"text-align:right\" color=\"warn\">sync</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"somethingIsChangedInTheBranch\">\r\n          <span>To checkout any branch, please commit</span>\r\n        </div>\r\n      </mat-menu>\r\n    </span>\r\n\r\n    <button mat-icon-button matTooltip=\"global settings\" (click)=\"openDialog()\">\r\n      <mat-icon>settings</mat-icon>\r\n    </button>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","export class GitlabSetting {\r\n  id: string;\r\n  user: string;\r\n  password: string;\r\n  gitlabLinkl: string;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { IBranch } from '../models/branch';\r\nimport { GitlabSetting } from '../models/gitlab-setting';\r\nimport { ITag } from '../models/Tag';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GITService {\r\n  private _Settings: BehaviorSubject<GitlabSetting[]>;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCurrentBranch() {\r\n    const url = '../api/gitservice/branches/feat/getcurrentbranch';\r\n    return this.http.get<IBranch>(url);\r\n  }\r\n\r\n  getBranchList():Observable<IBranch[]> {\r\n    const url = '../api/gitservice/branches';\r\n    return this.http.get<IBranch[]>(url);\r\n  }\r\n\r\n  checkoutSelectedBranch(selected: IBranch) {\r\n    const url = '../api/gitservice/branches/feat/checkoutBranch';\r\n    return this.http.post<IBranch>(url, selected);\r\n\r\n  }\r\n\r\n  getTagList() {\r\n    const url = '../api/gitservice/tags';\r\n    return this.http.get<ITag[]>(url);\r\n  }\r\n\r\n  storeGitlabSettings(user: string, password: string, gitlabLink: string) {\r\n    const url = '../api/gitservice/gitlabsettings';\r\n    let setting = new GitlabSetting();    \r\n    return this.http.post<GitlabSetting>(url, setting);\r\n  }\r\n\r\n  getGitlabSettings() {\r\n    const url = '../api/gitservice/gitlabsettings'\r\n    return this.http.get<GitlabSetting[]>(url);\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, InjectionToken, EventEmitter, Directive, NgZone, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a relayout. This relayout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * relayout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nimport * as ɵngcc0 from '@angular/core';\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = this._textarea = this._document.createElement('textarea');\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        this._document.body.appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try { // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch (_a) {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            if (textarea.parentNode) {\n                textarea.parentNode.removeChild(textarea);\n            }\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n}\nClipboard.ɵfac = function Clipboard_Factory(t) { return new (t || Clipboard)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nClipboard.ɵprov = ɵɵdefineInjectable({ factory: function Clipboard_Factory() { return new Clipboard(ɵɵinject(DOCUMENT)); }, token: Clipboard, providedIn: \"root\" });\nClipboard.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Clipboard, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * @deprecated Use `CDK_COPY_TO_CLIPBOARD_CONFIG` instead.\n * @breaking-change 13.0.0\n */\nconst CKD_COPY_TO_CLIPBOARD_CONFIG = CDK_COPY_TO_CLIPBOARD_CONFIG;\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n}\nCdkCopyToClipboard.ɵfac = function CdkCopyToClipboard_Factory(t) { return new (t || CdkCopyToClipboard)(ɵngcc0.ɵɵdirectiveInject(Clipboard), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(CKD_COPY_TO_CLIPBOARD_CONFIG, 8)); };\nCdkCopyToClipboard.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCopyToClipboard, selectors: [[\"\", \"cdkCopyToClipboard\", \"\"]], hostBindings: function CdkCopyToClipboard_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkCopyToClipboard_click_HostBindingHandler() { return ctx.copy(); });\n    } }, inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" } });\nCdkCopyToClipboard.ctorParameters = () => [\n    { type: Clipboard },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CKD_COPY_TO_CLIPBOARD_CONFIG,] }] }\n];\nCdkCopyToClipboard.propDecorators = {\n    text: [{ type: Input, args: ['cdkCopyToClipboard',] }],\n    attempts: [{ type: Input, args: ['cdkCopyToClipboardAttempts',] }],\n    copied: [{ type: Output, args: ['cdkCopyToClipboardCopied',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCopyToClipboard, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkCopyToClipboard]',\n                host: {\n                    '(click)': 'copy()'\n                }\n            }]\n    }], function () { return [{ type: Clipboard }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CKD_COPY_TO_CLIPBOARD_CONFIG]\n            }] }]; }, { text: [{\n            type: Input,\n            args: ['cdkCopyToClipboard']\n        }], attempts: [{\n            type: Input,\n            args: ['cdkCopyToClipboardAttempts']\n        }], copied: [{\n            type: Output,\n            args: ['cdkCopyToClipboardCopied']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClipboardModule {\n}\nClipboardModule.ɵfac = function ClipboardModule_Factory(t) { return new (t || ClipboardModule)(); };\nClipboardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClipboardModule });\nClipboardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClipboardModule, { declarations: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClipboardModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkCopyToClipboard],\n                exports: [CdkCopyToClipboard]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CKD_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n\n//# sourceMappingURL=clipboard.js.map","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MdFile } from '../../../models/md-file';\r\nimport { MdFileService } from '../../../services/md-file.service';\r\nimport { Snippet } from './models/snippet';\r\n\r\n@Component({\r\n  selector: 'app-new-markdown',\r\n  templateUrl: './new-markdown.component.html',\r\n  styleUrls: ['./new-markdown.component.scss']\r\n})\r\nexport class NewMarkdownComponent implements OnInit {\r\n  public markdownTitle: string\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: MdFile,\r\n    private dialogRef: MatDialogRef<NewMarkdownComponent>,\r\n    private mdFileService: MdFileService\r\n  ) {\r\n    this.selectedTemplate = this.plantumlTemplates[0]    \r\n  }\r\n\r\n  \r\n  selectedTemplate: Snippet;\r\n\r\n  plantumlTemplates: Snippet[] =\r\n    [{ id: 0, name: 'Text document', documentType:'document' },\r\n      { id: 1, name: 'Sequence Diagram', documentType: 'document' },\r\n      { id: 2, name: 'State Diagram', documentType: 'document' },\r\n      { id: 3, name: 'Workflow', documentType: 'document' },\r\n      { id: 4, name: 'Gantt current week', documentType: 'document' }];\r\n\r\n  slideTemplates: Snippet[] =\r\n    [{\r\n      id: 5, name: 'Flicker document', documentType: 'slides'\r\n    }, {\r\n      id: 6, name: 'Slide video', documentType: 'slides'\r\n    }, {\r\n      id: 7, name: 'Slide power point', documentType: 'slides'\r\n    }];\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  dismiss() {\r\n    this.dialogRef.close();\r\n  }\r\n  save() {\r\n    this.mdFileService.CreateNewMd(\r\n      this.data.fullPath,\r\n      this.markdownTitle,\r\n      this.data.level,\r\n      this.selectedTemplate.id,\r\n      this.selectedTemplate.documentType )\r\n      .subscribe(data => {\r\n        this.mdFileService.addNewFile(data);\r\n        this.mdFileService.setSelectedMdFileFromSideNav(data[data.length - 1]);\r\n      });\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <h3><strong>New markdown</strong></h3>\r\n  <div class=\"simple-container\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Document's title</mat-label>\r\n      <input matInput [(ngModel)]=\"markdownTitle\" (keyup.enter)=\"save()\" placeholder=\"Title\">\r\n      <mat-hint>Set the title's document</mat-hint>\r\n    </mat-form-field>\r\n  </div>\r\n  <label>Select document template</label>\r\n  <mat-tab-group headerPosition=\"below\" style=\"justify-content: space-between; height: calc(100%);\">\r\n    <mat-tab label=\"Documents\">\r\n      <mat-radio-group aria-labelledby=\"plantuml-radio-group-label\"\r\n                       class=\"plantuml-radio-group\"\r\n                       [(ngModel)]=\"selectedTemplate\">\r\n        <mat-radio-button class=\"plantuml-list-radio-button\"\r\n                          *ngFor=\"let plantumlTemplate of plantumlTemplates\" [value]=\"plantumlTemplate\">\r\n          {{plantumlTemplate.name}}\r\n        </mat-radio-button>\r\n      </mat-radio-group>      \r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Presentation\">\r\n      <mat-radio-group aria-labelledby=\"slide-radio-group-label\"\r\n                       class=\"slide-radio-group\"\r\n                       [(ngModel)]=\"selectedTemplate\">\r\n        <mat-radio-button class=\"plantuml-list-radio-button\"\r\n                          *ngFor=\"let slideTemplate of slideTemplates\" [value]=\"slideTemplate\">\r\n          {{slideTemplate.name}}\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n  <div>Template: {{selectedTemplate.name}}</div>\r\n\r\n  <mat-dialog-actions>\r\n    <button mat-button color=\"primary\" (click)=\"save()\">\r\n      <mat-icon>save</mat-icon>Save\r\n    </button>\r\n    <button mat-button color=\"primary\" (click)=\"dismiss()\">\r\n      <mat-icon>cancel</mat-icon>Cancel\r\n    </button>\r\n  </mat-dialog-actions>\r\n\r\n</mat-dialog-content>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-md-explorer',\r\n  template: `\r\n   <app-sidenav></app-sidenav>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class MdExplorerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\nimport { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router }                                          from '@angular/router';\r\nimport { BreakpointObserver, BreakpointState }   from '@angular/cdk/layout';\r\nimport { MdFileService }      from '../../services/md-file.service';\r\nimport { AppCurrentMetadataService } from '../../../services/app-current-metadata.service';\r\nimport { GITService } from '../../../git/services/gitservice.service';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { ServerMessagesService } from '../../../signalR/services/server-messages.service';\r\nimport { MdFile } from '../../models/md-file';\r\nimport { slideInAnimation } from '../../../animations/animations';\r\n\r\n\r\nconst SMALL_WIDTH_BREAKPOINT = 720;\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss'],\r\n \r\n})\r\nexport class SidenavComponent implements OnInit {\r\n  \r\n  public sideNavWidth: string = \"240px\";\r\n  public isScreenSmall: boolean;\r\n  private hooked: boolean = false;\r\n  public classForBorderDiv: string = \"border-div\";\r\n  public titleProject: string;\r\n  public currentBranch: string = null;\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  constructor(\r\n    private breakpointObserver: BreakpointObserver,\r\n    private mdFileService: MdFileService,    \r\n    private router: Router,\r\n    private currentFolder: AppCurrentMetadataService,\r\n    \r\n    private gitService: GITService,    \r\n  ) {\r\n    document.addEventListener(\"mousemove\", (event) => {\r\n      if (this.hooked) {\r\n        this.sideNavWidth = event.clientX + \"px\";\r\n      }\r\n    });\r\n    document.addEventListener(\"mouseup\", (event) => {\r\n      if (this.hooked) {\r\n        this.stopResizeWidth();\r\n      }\r\n    });\r\n    \r\n    this.currentFolder.folderName.subscribe((data: any) => {      \r\n      this.titleProject = data.currentFolder;\r\n    });\r\n    this.currentFolder.loadFolderName();\r\n    this.gitService.getCurrentBranch().subscribe(_ => {\r\n      this.currentBranch = _.name;\r\n    });\r\n\r\n    this.currentFolder.showSidenav.subscribe(_ => {      \r\n      if (this.sidenav != undefined ) {\r\n        if (_) {\r\n          this.sidenav.open();\r\n        } else {\r\n          this.sidenav.close();\r\n        }\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  resizeWidth(): void {    \r\n    this.hooked = true;\r\n    this.classForBorderDiv = \"border-div-moving\";\r\n  }\r\n\r\n  stopResizeWidth(): void {    \r\n    this.hooked = false;\r\n    this.classForBorderDiv = \"border-div\";\r\n  }\r\n\r\n  openProject(): void {\r\n    var mdFile = new MdFile(\"Welcome to MDExplorer\", '/../welcome.html',0,false);\r\n    mdFile.relativePath = '/../../welcome.html';\r\n    this.mdFileService.setSelectedMdFileFromSideNav(mdFile);\r\n    this.router.navigate(['/projects']);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.breakpointObserver.observe([`(max-width:${SMALL_WIDTH_BREAKPOINT}px)`])\r\n      .subscribe((state: BreakpointState) => {\r\n        this.isScreenSmall = state.matches\r\n      });\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n","\r\n\r\n<mat-sidenav-container autosize class=\"app-sidenav-container\">\r\n\r\n  <mat-sidenav #sidenav [style.width]=\"sideNavWidth\" class=\" mat-elevation-z10\"\r\n               [opened]=\"!isScreenSmall\"\r\n               [mode]=\"!isScreenSmall ? 'side':'over'\">\r\n\r\n    <mat-toolbar color=\"primary\">\r\n      <div>\r\n        <button mat-icon-button id=\"projectcss\" matTooltip=\"projects list\" (click)=\"openProject()\">\r\n          <mat-icon>ballot</mat-icon>\r\n        </button>\r\n        <!--<button mat-icon-button>\r\n          <mat-icon>developer_board</mat-icon>\r\n        </button>\r\n        <button mat-icon-button>\r\n          <mat-icon>rule</mat-icon>\r\n        </button>-->\r\n      </div>\r\n      {{titleProject}}\r\n    </mat-toolbar>\r\n    <mat-tab-group headerPosition=\"below\" style=\"justify-content: space-between; height: calc(100% - 64px);\">\r\n      <mat-tab style=\"height:100%\" >\r\n        <ng-template mat-tab-label>\r\n          <img src=\"/assets/project.png\" style=\"height:24px\" />\r\n          Project docs\r\n        </ng-template>\r\n          <app-md-tree></app-md-tree>\r\n      </mat-tab>      \r\n      <mat-tab *ngIf=\"currentBranch != null\">\r\n        <ng-template mat-tab-label>\r\n          <img src=\"/assets/cicd.png\" style=\"height:24px\"/>CI/CD   \r\n        </ng-template>\r\n        <app-publish-md-tree></app-publish-md-tree>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n\r\n  </mat-sidenav>\r\n\r\n  <div class=\"flex-container\">\r\n    <div [ngClass]=\"classForBorderDiv\" (pointerdown)=\"resizeWidth()\" (mouseup)=\"stopResizeWidth()\"></div>\r\n    <div style=\"width:100%; height:100%;\">\r\n      <div class=\"app-sidenav-content\" style=\"height:100%;\">\r\n        \r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { IRefactoringFilesystemEvent } from '../models/irefactoring-filesystem-event';\r\nimport { RefactoringFilesystemEvent } from '../models/refactoring-filesystem-event';\r\nimport { IRefactoringSourceAction } from '../models/irefactoring-source-action';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MdRefactoringService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  getFileEventList() {\r\n    const url = '../api/refactoringfiles/GetRefactoringFileEventList';\r\n    return this.http.get<IRefactoringFilesystemEvent[]>(url);\r\n  }\r\n\r\n  getRefactoringSourceActionList(SourceActionId: string) {\r\n    var params = new HttpParams().set('RefactoringSourceActionId', SourceActionId);\r\n    const url = '../api/refactoringfiles/GetRefactoringSourceActionList';\r\n    return this.http.get<IRefactoringSourceAction[]>(url, { params });\r\n  }\r\n\r\n  renameFileName(data: any): Observable<IChangeFileData> {\r\n    const url = '../api/refactoringfiles/RenameFileName';\r\n    var newData = {\r\n      message: data.message,\r\n      fromFileName: data.fromFileName,\r\n      toFileName: data.toFileName,\r\n      fullPath: data.fullPath,\r\n      relativePath:data.relativePath,\r\n    }\r\n    return this.http.post<IChangeFileData>(url, newData );\r\n  }\r\n\r\n \r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport interface IChangeFileData {\r\n  RefactoringSourceActionId: string;\r\n  oldName: string;\r\n  newName: string;\r\n  oldPath: string;\r\n  newPath: string;\r\n  oldLevel: number;\r\n  newLevel: number;\r\n  expandable: boolean;\r\n  relativePath: boolean;\r\n  \r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, NgZone, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MdFile } from '../../models/md-file';\r\n//import { IWorkWithElement } from '../../services/href-interceptor.service';\r\nimport { MdFileService } from '../../services/md-file.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ServerMessagesService } from '../../../signalr/services/server-messages.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n//import { ConnectionLostComponent } from '../../../signalR/dialogs/connection-lost/connection-lost.component';///dialogs/connection-lost/connection-lost.component\r\n\r\n\r\n@Component({\r\n  selector: 'app-main-content',\r\n  templateUrl: './main-content.component.html',\r\n  styleUrls: ['./main-content.component.scss']\r\n})\r\nexport class MainContentComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('myBelovedIframe') el: ElementRef;\r\n  public classForToolbar: string = \"showToolbar\";\r\n  public classForContent: string = \"contentWithToolbar\";\r\n  \r\n  ngAfterViewInit() {\r\n    \r\n    this.el.nativeElement.onload = _ => {\r\n      try {\r\n        _.target.contentWindow.document.myReferenceObject = this;\r\n        _.target.contentWindow.document.addEventListener('wheel',\r\n          this.toolbarHandler);\r\n      } catch (e) { // for some reason the wheel event \"injection\" failed, so in ordet to Not hide tolbar i set block\r\n        this.service.setWhatDisplayForToolbar('showToolbar');\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n\r\n  toolbarHandler(event) {\r\n    event.currentTarget.myReferenceObject.lastCall(event);\r\n  }\r\n\r\n  lastCall(event) {\r\n    if (event.deltaY < 0) {\r\n      // visualizzare\r\n      this.service.setWhatDisplayForToolbar('showToolbar');\r\n      \r\n    } else {\r\n      // nascondere\r\n      this.service.setWhatDisplayForToolbar('hideToolbar');\r\n      \r\n    }    \r\n  }\r\n\r\n  mdFile: MdFile;\r\n  html: string;\r\n  htmlSource: string = '../welcome.html';\r\n\r\n  //helloWorld: IWorkWithElement = (msg) => {\r\n  //  alert('this is the callback');\r\n  //};\r\n\r\n\r\n  public _HideIFrame = false;\r\n\r\n  constructor(\r\n    private service: MdFileService,\r\n    private sanitizer: DomSanitizer,\r\n    private monitorMDService: ServerMessagesService,\r\n    public dialog: MatDialog,\r\n    private ref: ChangeDetectorRef,\r\n  ) {\r\n    console.log(\"MainContentComponent constructor\");\r\n    this.monitorMDService.addMarkdownFileListener(this.markdownFileIsChanged, this);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.service.selectedMdFileFromSideNav.subscribe(_ => {      \r\n      this.callMdExplorerController(_);\r\n    });\r\n    this.service.selectedMdFileFromToolbar.subscribe(_ => {      \r\n      let current = _[0];\r\n      if (current != undefined) {\r\n        this.callMdExplorerController(current);\r\n      }      \r\n    });\r\n    \r\n    this.service.whatDisplayForToolbar.subscribe(_ => {\r\n\r\n      if ((_ == 'showToolbar' && this.classForToolbar != _) ||\r\n        (_ == 'hideToolbar' && this.classForToolbar != _ + ' ' + 'hideToolbarNone')\r\n      ) { // check if something is truely changed\r\n        this.classForToolbar = _;\r\n        this.classForContent = 'contentWithToolbar';\r\n          if (_ == 'hideToolbar' && _ != undefined) {\r\n            this.classForToolbar = _ + ' ' + 'hideToolbarNone'\r\n            this.classForContent = 'hundredPercentContent';\r\n            this.ref.detectChanges();\r\n          }\r\n        this.ref.detectChanges();\r\n      }\r\n    });\r\n  }\r\n  private callMdExplorerController(node:  MdFile) {    \r\n    if (node != null && node.relativePath != undefined) {\r\n      let dateTime = new Date().getTime() / 1000;      \r\n      this.htmlSource = '../api/mdexplorer' + node.relativePath + '?time=' + dateTime;\r\n    }\r\n  }\r\n\r\n  private markdownFileIsChanged(data: any, objectThis: MainContentComponent) {    \r\n    let dateTime = new Date();\r\n    objectThis.service.navigationArray = [];\r\n    objectThis.service.setSelectedMdFileFromServer(data);\r\n    objectThis.htmlSource = '../api/mdexplorer/' + data.path + '?time=' + dateTime;\r\n  }\r\n \r\n\r\n\r\n}\r\n","<app-toolbar [ngClass]=\"classForToolbar\"></app-toolbar>\r\n<iframe #myBelovedIframe id=\"mdIframe\" name=\"mdIframe\" [hidden]=\"_HideIFrame\"\r\n        [ngClass]=\"classForContent\"\r\n        [src]=\"htmlSource | safe\">\r\n</iframe>\r\n","<div class=\"container-columns\">\n  <div class=\"container-title\">\n    <h1><strong>Document's Settings</strong></h1>\n  </div>\n  <div class=\"container-title\">\n    <h3>{{selectedMdFile.name}}</h3>\n  </div>\n\n  <div class=\"container-row\">\n\n    <form>\n      <div>\n        <mat-card>\n          <mat-card-header>\n            <strong>Document's type</strong>\n          </mat-card-header>\n          <mat-card-content>\n            <mat-radio-group name=\"documentType\" [disabled]=\"true\" [(ngModel)]=\"documentDescriptor.documentType\" class=\"container-columns\">\n              <mat-radio-button value=\"document\">document</mat-radio-button>\n              <mat-radio-button value=\"slide\">slide</mat-radio-button>\n            </mat-radio-group>\n          </mat-card-content>\n        </mat-card>\n        <mat-card>\n          <mat-card-header>\n            <strong>Microsoft Word Templates</strong>\n          </mat-card-header>\n          <mat-card-content>\n            <mat-radio-group name=\"wordTemplates\"\n                             class=\"container-columns\"\n                             aria-label=\"Select a template\"\n                             [(ngModel)]=\"documentDescriptor.wordSection.templateSection.templateType\">\n              <mat-radio-button name=\"wordTemplates\" value=\"inherits\">\n                Inherit standard template\n                <mat-form-field appearance=\"fill\">\n                  <mat-label>Select a template</mat-label>\n                  <mat-select [(ngModel)]=\"documentDescriptor.wordSection.templateSection.inheritFromTemplate\" name=\"projectTemplate\">\n                    <mat-option *ngFor=\"let template of standardTemplates\" [value]=\"template.name\">\n                      {{template.name}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <button mat-button color=\"warn\" (click)=\"openSelectedInheritingTemplateWord()\"><mat-icon >edit</mat-icon></button> \n              </mat-radio-button>\n              <mat-radio-button value=\"custom\">\n                Custom Template\n                <mat-form-field appearance=\"fill\">\n                  <mat-label>Copy as reference from</mat-label>\n                  <mat-select [(ngModel)]=\"documentDescriptor.wordSection.templateSection.customTemplate\" name=\"customTemplate\">\n                    <mat-option *ngFor=\"let template of standardTemplates\" [value]=\"template.name\">\n                      {{template.name}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <button mat-button (click)=\"openCustomWord()\"> <mat-icon color=\"warn\">edit</mat-icon></button>\n              </mat-radio-button>\n            </mat-radio-group>\n          </mat-card-content>\n        </mat-card>\n        <mat-card>\n          <mat-card-header>\n            <strong>Microsoft Word Document's header page</strong>\n          </mat-card-header>\n          <mat-card-content>\n            <mat-radio-group name=\"wordHeaderPage\"\n                             class=\"container-columns\"\n                             aria-label=\"Select a header page\"\n                             [(ngModel)]=\"documentDescriptor.wordSection.documentHeader\">\n              <mat-radio-button value=\"None\">None</mat-radio-button>\n              <mat-radio-button value=\"Project\">Append project's document header page<mat-icon color=\"warn\">edit</mat-icon></mat-radio-button>\n              <mat-radio-button value=\"Custom\">\n                Append custom document header page\n                <button mat-button (click)=\"openCustomWord()\"> <mat-icon  color=\"warn\">edit</mat-icon></button>\n              </mat-radio-button>\n            </mat-radio-group>\n          </mat-card-content>\n        </mat-card>\n        <mat-card>\n          <mat-card-header>\n            <strong>Documents goodies</strong>\n          </mat-card-header>\n          <mat-card-content>\n            <section class=\"container-columns\">\n              <mat-checkbox name=\"writeToc\"\n                            [(ngModel)]=\"documentDescriptor.wordSection.writeToc\"\n                            class=\"example-margin\"\n                            [checked]=\"documentDescriptor.wordSection.writeToc\">Create TOC in Microsoft Word</mat-checkbox>\n            </section>\n          </mat-card-content>\n        </mat-card>\n        <div mat-dialog-actions align=\"end\">\n          <button mat-stroked-button (click)=\"saveSettings()\" mat-button color=\"primary\"> <mat-icon>save</mat-icon>Save</button>\n        </div>\n\n      </div>\n    </form>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MdFile } from '../../models/md-file';\r\nimport { MdFileService } from '../../services/md-file.service';\r\nimport { IDocumentSettings } from '../../services/Types/IDocumentSettings';\r\n\n@Component({\n  selector: 'app-document-settings',\n  templateUrl: './document-settings.component.html',\n  styleUrls: ['./document-settings.component.scss']\n})\nexport class DocumentSettingsComponent implements OnInit {\n\n  standardTemplates = [{ name: \"project\",fullPath:\"\" }, {name:\"minute\",fullPath:\"\"}]\n  selectedMdFile: MdFile;\n  documentDescriptor: IDocumentSettings = {\r\n    author: 'Carlo',\r\n    date: '2022',\r\n    documentType: 'document',\r\n    email: '@carlo',\r\n    title: 'title',\r\n    wordSection: {\r\n      documentHeader: 'None',\r\n      writeToc: true,\r\n      templateSection: {\r\n        customTemplate: \"\",\r\n        inheritFromTemplate: \"minute\",\r\n        templateType: \"inherit\"\r\n        }\r\n      }\r\n  };\r\n;\n\n  //////////////////////////////////\n  constructor(\n    private mdFileService: MdFileService,\n    private _snackBar: MatSnackBar) {        \n  }\n  /////////////////////////////////\n\n  ngOnInit(): void {\n    this.mdFileService.selectedMdFileFromSideNav.subscribe(\n      currentMdFile => {\r\n        this.selectedMdFile = currentMdFile;\n        //\n        this.mdFileService.getDocumentSettings(currentMdFile).subscribe(descriptor => {\n          this.documentDescriptor = descriptor;\r\n        });\n      }\n      \n    );\n  }\n\n  openSelectedInheritingTemplateWord() {\n    this.mdFileService.openInheritingTemplateWord(this.documentDescriptor.wordSection.templateSection.inheritFromTemplate)\r\n      .subscribe(_ => {\r\n        this._snackBar.open(\"Opening Word Custom template!\");\r\n      });\r\n  }\n\n  saveSettings() {\n    this.mdFileService.setDocumentSettings(this.documentDescriptor, this.selectedMdFile)\r\n      .subscribe(_ => {\r\n        this._snackBar.open(\"Saved!\");\r\n      });\r\n  }\n\n  openCustomWord() {\n    debugger;\n    this.mdFileService.opencustomwordtemplate(this.selectedMdFile)\r\n      .subscribe(_=>\r\n        {\r\n          this._snackBar.open(\"Opening Word Custom template!\");\r\n        });\r\n  }\n}\n","  import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MdFile } from '../../../models/md-file';\r\nimport { MdFileService } from '../../../services/md-file.service';\r\n\r\n@Component({\r\n  selector: 'app-new-directory',\r\n  templateUrl: './new-directory.component.html',\r\n  styleUrls: ['./new-directory.component.scss']\r\n})\r\nexport class NewDirectoryComponent implements OnInit {\r\n  public directoryName: string\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: MdFile,\r\n    private dialogRef: MatDialogRef<NewDirectoryComponent>,\r\n    private mdFileService: MdFileService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  dismiss() {\r\n    this.dialogRef.close();\r\n  }\r\n  save() {\r\n    this.mdFileService.CreateNewDirectory(this.data.fullPath, this.directoryName, this.data.level)\r\n      .subscribe(data => {        \r\n        this.mdFileService.addNewDirectory(data);\r\n        this.mdFileService.setSelectedDirectoryFromNewDirectory(data[data.length - 1]);\r\n      });\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div mat-dialog-title>\r\n  Create new folder\r\n</div>\r\n  \r\n\r\n<mat-dialog-content>\r\n  <div class=\"simple-container\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Directory Name</mat-label>\r\n      <input matInput [(ngModel)]=\"directoryName\" (keyup.enter)=\"save()\" placeholder=\"directoryName\">\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button mat-button color=\"primary\" (click)=\"save()\">\r\n    <mat-icon>save</mat-icon>Save\r\n  </button>\r\n  <button mat-button color=\"primary\" (click)=\"dismiss()\">\r\n    <mat-icon>cancel</mat-icon>Cancel\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { Observable } from 'rxjs';\r\nimport { IFileInfoNode } from '../../models/IFileInfoNode';\r\nimport { MdFile } from '../../models/md-file';\r\nimport { MdFileService } from '../../services/md-file.service';\r\nimport { ChangeDirectoryComponent } from '../dialogs/change-directory/change-directory.component';\r\nimport { NewDirectoryComponent } from '../dialogs/new-directory/new-directory.component';\r\nimport { NewMarkdownComponent } from '../dialogs/new-markdown/new-markdown.component';\r\nimport { Clipboard } from '@angular/cdk/clipboard';\r\nimport { DeleteMarkdownComponent } from '../dialogs/delete-markdown/delete-markdown.component';\r\nimport { Router } from '@angular/router';\r\n\r\nconst TREE_DATA: IFileInfoNode[] = [];\r\n\r\n@Component({\r\n  selector: 'app-md-tree',\r\n  templateUrl: './md-tree.component.html',\r\n  styleUrls: ['./md-tree.component.scss']\r\n})\r\nexport class MdTreeComponent implements OnInit {\r\n\r\n  private hooked: boolean = false;\r\n  private activeNode: any;\r\n  mdFiles: Observable<MdFile[]>;\r\n\r\n  menuTopLeftPosition = { x: 0, y: 0 }\r\n  @ViewChild(MatMenuTrigger, { static: true }) matMenuTrigger: MatMenuTrigger;\r\n\r\n\r\n  private _transformer = (node: IFileInfoNode, level: number) => {\r\n    return {\r\n      expandable: (!!node.childrens && node.childrens.length > 0) || node.type == \"folder\",\r\n      name: node.name,\r\n      level: level,\r\n      path: node.path,\r\n      relativePath: node.path,\r\n      fullPath: node.fullPath,\r\n      type: node.type,\r\n    };\r\n  }\r\n  treeControl = new FlatTreeControl<IFileInfoNode>(\r\n    node => node.level, node => node.expandable);\r\n\r\n  treeFlattener = new MatTreeFlattener(\r\n    this._transformer, node => node.level, node => node.expandable, node => node.childrens);\r\n\r\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n  hasChild = (_: number, node: IFileInfoNode) => node.expandable;\r\n\r\n  isFolder = (_: number, node: IFileInfoNode) => node.type == \"folder\";\r\n  isMdPublish = (_: number, node: IFileInfoNode) => node.type == \"folder\" && node.name==\"mdPublish\";\r\n  isEmptyRoot = (_: number, node: IFileInfoNode) => node.type == \"emptyroot\";\r\n\r\n  ///////////////////////////////\r\n  \r\n\r\n  constructor(private router: Router,\r\n    private mdFileService: MdFileService,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private clipboard: Clipboard,\r\n\r\n  ) {\r\n    this.dataSource.data = TREE_DATA;\r\n    this.mdFileService.serverSelectedMdFile.subscribe(_ => {\r\n      const myClonedArray = [];\r\n      _.forEach(val => myClonedArray.push(Object.assign({}, val)));\r\n      while (myClonedArray.length > 1) {\r\n        var toExpand = myClonedArray.pop();\r\n        var test = this.treeControl.dataNodes.find(_ => _.path == toExpand.path);\r\n        this.treeControl.expand(test);\r\n      }\r\n      if (myClonedArray.length > 0) {\r\n        var toExpand = myClonedArray.pop();\r\n        this.activeNode = this.treeControl.dataNodes.find(_ => _.path == toExpand.path);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.mdFiles = this.mdFileService.mdFiles;\r\n    this.mdFileService.mdFiles.subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n    this.mdFileService.loadAll(this.deferredOpenProject, this);\r\n\r\n  }\r\n\r\n  deferredOpenProject(data, objectThis: MdTreeComponent): void {\r\n    objectThis.mdFileService.getLandingPage().subscribe(node => {\r\n      if (node != null) {\r\n        objectThis.mdFileService.setSelectedMdFileFromSideNav(node);\r\n        objectThis.activeNode = node;\r\n      }\r\n    });\r\n  }\r\n\r\n  onRightClick(event: MouseEvent, item) {\r\n    // preventDefault avoids to show the visualization of the right-click menu of the browser\r\n    event.preventDefault();\r\n    if (item == null) {\r\n      item = new MdFile(\"root\", \"root\", 0, false);\r\n      item.fullPath = \"root\";\r\n    }\r\n    // we record the mouse position in our object\r\n    this.menuTopLeftPosition.x = event.clientX;\r\n    this.menuTopLeftPosition.y = event.clientY;\r\n\r\n    // we open the menu\r\n    // we pass to the menu the information about our object\r\n    this.matMenuTrigger.menuData = { item: item }\r\n\r\n    // we open the menu\r\n    this.matMenuTrigger.openMenu();\r\n\r\n  }\r\n\r\n  public getNode(node: MdFile) {\r\n    this.router.navigate(['/main/navigation/document']);\r\n    this.mdFileService.setSelectedMdFileFromSideNav(node);\r\n    this.activeNode = node;\r\n  }\r\n\r\n  // Manu management\r\n\r\n  createMdOn(node: MdFile) {\r\n\r\n    this.dialog.open(NewMarkdownComponent, {\r\n      width: '300px',\r\n      //height:'400px',\r\n      data: node,\r\n    });\r\n  }\r\n\r\n  setMdAsLandingPage(node: MdFile) {\r\n    this.mdFileService.SetLandingPage(node).subscribe(_ => {\r\n      this.snackBar.open(node.name, \"is project landing page\", { duration: 5000 });\r\n    });\r\n  }\r\n\r\n  createDirectoryOn(node: MdFile) {\r\n    if (node == null) {\r\n      node = new MdFile(\"root\", \"root\", 0, false);\r\n      node.fullPath = \"root\";\r\n    }\r\n    this.dialog.open(NewDirectoryComponent, {\r\n      width: '300px',\r\n      data: node,\r\n    });\r\n  }\r\n\r\n  renameDirectoryOn(node: MdFile) {\r\n    if (node == null) {\r\n      node = new MdFile(\"root\", \"root\", 0, false);\r\n      node.fullPath = \"root\";\r\n    }\r\n    this.dialog.open(ChangeDirectoryComponent, {\r\n      width: '300px',\r\n      data: node,\r\n    });\r\n  }\r\n\r\n  openFolderOn(node: MdFile) {\r\n    this.mdFileService.openFolderOnFileExplorer(node).subscribe(_ => {\r\n      this.snackBar.open(\"file explorer open\", \"\", { duration: 500 });\r\n    });\r\n  }\r\n\r\n  getLinkFromNode(node: MdFile) {\r\n    this.clipboard.copy(node.relativePath.replace(\"\\\\\",\"/\"));\r\n\r\n  }\r\n\r\n  deleteFile(node: MdFile) {\r\n    this.dialog.open(DeleteMarkdownComponent, {\r\n      width: '300px',\r\n      data: node,\r\n    });\r\n\r\n  }\r\n\r\n  openDocumentSettings(node: MdFile) {\r\n    this.mdFileService.setSelectedMdFileFromSideNav(node);\r\n    this.router.navigate(['/main/navigation/documentsettings']);\r\n  }\r\n\r\n}\r\n","\r\n<div style=\"visibility: hidden; position: fixed;\"\r\n     [style.left.px]=\"menuTopLeftPosition.x\"\r\n     [style.top.px]=\"menuTopLeftPosition.y\"\r\n     [matMenuTriggerFor]=\"rightMenu\"></div>\r\n\r\n<mat-menu #rightMenu=\"matMenu\">\r\n  <ng-template matMenuContent let-item=\"item\">\r\n    <div>\r\n      <button *ngIf=\"item.type==='folder'\" mat-icon-button color=\"accent\" matTooltip=\"rename folder\" (click)=\"renameDirectoryOn(item)\"><img src=\"/assets/rename.png\" alt=\"Rename directory\" /></button>\r\n      <button *ngIf=\"item.type==='folder' || item.name==='root'\" mat-icon-button matTooltip=\"create new folder\" color=\"primary\" (click)=\"createDirectoryOn(item)\"><mat-icon>create_new_folder</mat-icon></button>\r\n      <button *ngIf=\"item.type==='folder' || item.name==='root'\" mat-icon-button matTooltip=\"create new document\" mat-icon-button color=\"primary\" (click)=\"createMdOn(item)\"><mat-icon>note_add</mat-icon></button>\r\n      <button *ngIf=\"item.type==='mdFile'\" mat-icon-button color=\"warn\" (click)=\"deleteFile(item)\" matTooltip=\"delete document\"><mat-icon>delete</mat-icon></button>\r\n      <button *ngIf=\"item.type==='mdFile'\" mat-icon-button color=\"primary\" (click)=\"getLinkFromNode(item)\" matTooltip=\"copy link to clipboard\"><mat-icon>link</mat-icon></button>\r\n      \r\n      <button *ngIf=\"item.type==='mdFile'\" mat-icon-button color=\"primary\" (click)=\"openDocumentSettings(item)\" matTooltip=\"document settings\"><mat-icon>settings</mat-icon></button>\r\n    </div>\r\n    <button *ngIf=\"item.type==='folder' || item.name==='root'\" mat-menu-item (click)=\"openFolderOn(item)\"><b style=\"color:violet\">Open</b> directory on <b style=\"color:blue\">File Explorer</b></button>\r\n    <button *ngIf=\"item.type==='mdFile'\" mat-menu-item (click)=\"setMdAsLandingPage(item)\"><mat-icon>home</mat-icon><b>Set as project's landing page</b></button>    \r\n  </ng-template>\r\n</mat-menu>\r\n\r\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" (contextmenu)=\"onRightClick($event, null)\">\r\n  <!-- This is the tree node template for leaf nodes -->\r\n  <mat-tree-node *matTreeNodeDef=\"let node\"\r\n                 matTreeNodePadding\r\n                 style=\"cursor:pointer\"\r\n                 (contextmenu)=\"onRightClick($event, node)\">\r\n    <!-- use a disabled button to provide padding for tree leaf -->\r\n    <button mat-icon-button color=\"primary\" style=\"cursor:pointer\">\r\n      <mat-icon class=\"mat-icon-rtl-mirror\">text_snippet</mat-icon>\r\n    </button>\r\n    <a (click)=\"getNode(node)\" [ngClass]=\"activeNode === node ? 'background-highlight': 'blue-link'\">{{node.name}}</a>\r\n  </mat-tree-node>\r\n\r\n  <!-- This is the tree node template for expandable nodes -->\r\n  <mat-tree-node *matTreeNodeDef=\"let node;when: isFolder\" style=\"cursor:pointer\" matTreeNodePadding (contextmenu)=\"onRightClick($event, node)\">\r\n    <button mat-icon-button matTreeNodeToggle\r\n            [attr.aria-label]=\"'Toggle ' + node.name\">\r\n      <mat-icon *ngIf=\"node.name!='mdPublish'\" class=\"gold-icon mat-icon-rtl-mirror\">\r\n        {{treeControl.isExpanded(node) ? 'folder_open' : 'folder'}}\r\n      </mat-icon>\r\n      <mat-icon *ngIf=\"node.name=='mdPublish'\" color=\"accent\" class=\"gold-icon mat-icon-rtl-mirror\">\r\n        {{treeControl.isExpanded(node) ? 'folder_open' : 'folder'}}\r\n      </mat-icon>\r\n    </button>\r\n    {{node.name}}\r\n  </mat-tree-node>\r\n  <mat-tree-node *matTreeNodeDef=\"let node;when: isEmptyRoot\" style=\"cursor:pointer\" matTreeNodePadding (contextmenu)=\"onRightClick($event, node)\">\r\n    <button mat-icon-button matTreeNodeToggle></button>\r\n  </mat-tree-node> \r\n</mat-tree>\r\n\r\n"],"sourceRoot":"webpack:///"}