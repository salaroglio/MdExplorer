{"version":3,"sources":["./src/app/signalR/services/server-messages.service.ts","./src/app/shared/material.module.ts","./src/app/components/title-bar/title-bar.component.ts","./src/app/components/title-bar/title-bar.component.html","./src/app/signalR/dialogs/connection-lost/connection-lost.component.ts","./src/app/signalR/dialogs/connection-lost/connection-lost.component.html","./src/environments/environment.ts","./src/app/signalR/dialogs/plantuml-working/plantuml-working.provider.ts","./src/app/commons/components/show-file-system/show-file-metadata.ts","./src/app/md-explorer/services/layout.service.ts","./src/app/git/models/gitlab-setting.ts","./src/app/shared/animations.ts","./src/app/commons/waitingdialog/waiting-dialog/models/WaitingDialogInfo.ts","./src/app/git/services/gitservice.service.ts","./src/app/services/app-current-metadata.service.ts","./src/app/commons/waitingdialog/waiting-dialog/waiting-dialog.component.ts","./src/app/commons/waitingdialog/waiting-dialog/waiting-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/commons/components/new-directory/new-directory.component.ts","./src/app/commons/components/new-directory/new-directory.component.html","./src/app/Models/MdSettings.ts","./src/app/components/search-box/search-box.component.ts","./src/app/components/search-box/search-box.component.html","./src/app/signalR/dialogs/parsing-project/parsing-project.provider.ts","./src/app/app.module.ts","./src/app/md-explorer/models/md-file.ts","./src/app/signalR/dialogs/plantuml-working/plantuml-working.component.ts","./src/app/signalR/dialogs/plantuml-working/plantuml-working.component.html","./src/app/md-explorer/services/md-navigation.service.ts","./src/app/signalR/dialogs/connection-lost/connection-lost.provider.ts","./src/app/services/search.service.ts","./src/app/signalR/dialogs/opening-application/opening-application.provider.ts","./src/app/signalR/dialogs/opening-application/opening-application.component.ts","./src/app/signalR/dialogs/opening-application/opening-application.component.html","./src/app/signalR/dialogs/parsing-project/parsing-project.component.ts","./src/app/signalR/dialogs/parsing-project/parsing-project.component.html","./src/environments/version.ts","./src/app/md-explorer/services/projects.service.ts","./src/app/md-explorer/services/md-file.service.ts","./src/app/commons/components/show-file-system/show-file-system.component.ts","./src/app/commons/components/show-file-system/show-file-system.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport { GITService } from '../../git/services/gitservice.service';\r\nimport { ConnectionLostProvider } from '../../signalR/dialogs/connection-lost/connection-lost.provider';\r\nimport { ParsingProjectProvider } from '../../signalR/dialogs/parsing-project/parsing-project.provider';\r\nimport { PlantumlWorkingProvider } from '../../signalR/dialogs/plantuml-working/plantuml-working.provider';\r\nimport { connect } from 'net';\r\nimport { OpeningApplicationProvider } from '../dialogs/opening-application/opening-application.provider';\r\n\r\ninterface linkSignalREvent_Component {\r\n  key: string\r\n  object: any;\r\n  callback: (data: any, objectThis: any) => any\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MdServerMessagesService {\r\n\r\n  linkEventCompArray: linkSignalREvent_Component[];\r\n  public connectionId: string;\r\n\r\n  constructor(\r\n    private parsingProjectProvider: ParsingProjectProvider,\r\n    private plantumlWorkingProvider: PlantumlWorkingProvider,\r\n    private connectionLostProvider: ConnectionLostProvider,\r\n    private openingApplicationProvider: OpeningApplicationProvider,\r\n    private gitService: GITService) {\r\n    this.startConnection();\r\n    console.log('MonitorMDService constructor');\r\n    this.linkEventCompArray = [];\r\n    \r\n  }\r\n\r\n  private hubConnection: signalR.HubConnection\r\n  private rule1IsRegistered: any;\r\n  private connectionIsLost: boolean = false;\r\n  private consoleIsClosed: boolean = false;\r\n  \r\n\r\n  public startConnection = () => {\r\n    if (this.hubConnection == null) {\r\n      this.hubConnection = new signalR.HubConnectionBuilder()\r\n        .withUrl('../signalr/monitormd')\r\n        .build();\r\n      this.hubConnection.on('markdownfileisprocessed', (data) => {\r\n        this.processCallBack(data, 'markdownfileisprocessed');\r\n      });\r\n      this.hubConnection.on('yamlAutoGenerated', (data) => {\r\n        this.processCallBack(data, 'yamlAutoGenerated');\r\n      });\r\n      this.hubConnection.on('parsingProjectStart', (data) => {\r\n        this.parsingProjectProvider.show(data);\r\n      });\r\n      this.hubConnection.on('openingApplication', (data) => {\r\n        this.openingApplicationProvider.show(data);\r\n      });\r\n      this.hubConnection.on('parsingProjectStop', (data) => {\r\n        this.parsingProjectProvider.hide(data);\r\n      });\r\n      this.hubConnection.on('plantumlWorkStart', (data) => {\r\n        this.plantumlWorkingProvider.show(data);\r\n      });\r\n      this.hubConnection.on('plantumlWorkStop', (data) => {\r\n        this.plantumlWorkingProvider.hide(data);\r\n      });\r\n      this.hubConnection.on('indexingFolder', (folder) => {\r\n        this.parsingProjectProvider.folder$.next(folder);\r\n      });\r\n\r\n      this.hubConnection.on('consoleClosed', (data) => {\r\n        console.log('consoleClosed');\r\n        this.consoleIsClosed = true;\r\n        this.connectionLostProvider.showConsoleClosed();\r\n      });\r\n      this.hubConnection.onclose((data) => {\r\n        if (!this.consoleIsClosed) {\r\n          this.connectionLostProvider.show(this);\r\n          this.connectionIsLost = true;\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    if (this.hubConnection.state == \"Disconnected\") {\r\n      this.hubConnection\r\n        .start()\r\n        .then(() => {\r\n          console.log('Connection started');\r\n          this.connectionIsLost = false;\r\n          this.getCurrentConnectionId(this);\r\n        }\r\n\r\n        )\r\n        .catch(err => {\r\n          console.log('Error while starting connection: ' + err);\r\n        }\r\n        );\r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  public addRefactoringFileEvent(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('refactoringFileEvent', (data) => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n\r\n  public addMarkdownFileListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('markdownfileischanged', (data) => {\r\n      // Modern Git service will automatically update via polling - no manual refresh needed\r\n      callback(data, objectThis);\r\n      console.log('markdownfileischanged');\r\n    });\r\n  }\r\n\r\n  private processCallBack(data: any, signalREvent: string) {\r\n    this.linkEventCompArray.forEach(_ => {\r\n      if (_.key == signalREvent) {\r\n        _.callback(data, _.object);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  public addMdProcessedListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    let check = this.linkEventCompArray.find(_ =>\r\n      _.key == 'markdownfileisprocessed' && _.object.constructor.name === objectThis.constructor.name);\r\n    if (check == undefined) {\r\n      this.linkEventCompArray.push({ key: 'markdownfileisprocessed', object: objectThis, callback: callback });\r\n    }\r\n  }\r\n\r\n  public addMdRule1Listener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    // giusto per evitare di effettuare l'instanziazione un centinaio di volte l'evento\r\n    console.log('addMdRule1Listener');\r\n    if (this.rule1IsRegistered == undefined) {\r\n      this.rule1IsRegistered = objectThis;\r\n      this.hubConnection.on('markdownbreakrule1', (data) => {\r\n        callback(data, objectThis);\r\n      });\r\n    }\r\n  }\r\n\r\n  public addPdfIsReadyListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('pdfisready', (data) => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  public addYamlAutoGeneratedListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    let check = this.linkEventCompArray.find(_ =>\r\n      _.key == 'yamlAutoGenerated' && _.object.constructor.name === objectThis.constructor.name);\r\n    if (check == undefined) {\r\n      this.linkEventCompArray.push({ key: 'yamlAutoGenerated', object: objectThis, callback: callback });\r\n    }\r\n  }\r\n\r\n  // Listener per forzare l'aggiornamento di file rinominati (Rule #1 fix)\r\n  private rule1ForceUpdateRegistered: any;\r\n  public addRule1ForceUpdateListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    console.log('addRule1ForceUpdateListener');\r\n    if (this.rule1ForceUpdateRegistered == undefined) {\r\n      this.rule1ForceUpdateRegistered = objectThis;\r\n      // Non abbiamo bisogno di un evento SignalR reale, useremo questo per il pattern locale\r\n    }\r\n  }\r\n  \r\n  // Metodo per triggerare l'evento di force update localmente\r\n  public triggerRule1ForceUpdate(filePath: string): void {\r\n    if (this.rule1ForceUpdateRegistered?.handleRule1ForceUpdate) {\r\n      this.rule1ForceUpdateRegistered.handleRule1ForceUpdate(filePath);\r\n    }\r\n  }\r\n\r\n  public addFileIndexedListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('fileIndexed', (data) => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  public addFolderIndexingStartListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('folderIndexingStart', (data) => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  public addFolderIndexingCompleteListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('folderIndexingComplete', (data) => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  public addParsingProjectStartListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('parsingProjectStart', (data) => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  public addMarkdownFileCreatedListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('markdownFileCreated', (data) => {\r\n      console.log('📄 [SignalR] Evento markdownFileCreated ricevuto:');\r\n      console.log('📄 [SignalR] Data ricevuta:', JSON.stringify(data, null, 2));\r\n      console.log('📄 [SignalR] Nome file:', data.name);\r\n      console.log('📄 [SignalR] Path completo:', data.fullPath);\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  public addMarkdownFileDeletedListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('markdownFileDeleted', (data) => {\r\n      console.log('🗑️ [SignalR] Evento markdownFileDeleted ricevuto:');\r\n      console.log('🗑️ [SignalR] Data ricevuta:', JSON.stringify(data, null, 2));\r\n      console.log('🗑️ [SignalR] Nome file:', data.name);\r\n      console.log('🗑️ [SignalR] Path completo:', data.fullPath);\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  public addParsingProjectStopListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('parsingProjectStop', (data) => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  public addConnectionIdListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('getconnectionid', (data) => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  public getConnectionId(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.invoke('GetConnectionId')\r\n      .then(function (connectionId) {        \r\n        objectThis.connectionId = connectionId;\r\n        callback(connectionId, objectThis);\r\n      });\r\n  }\r\n\r\n  public getCurrentConnectionId(objectThis: MdServerMessagesService): void {\r\n    this.hubConnection.invoke('GetConnectionId')\r\n      .then(function (connectionId) {        \r\n        objectThis.connectionId = connectionId;        \r\n      });\r\n  }\r\n\r\n  // TOC Generation listeners\r\n  public addTocGenerationProgressListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('TocGenerationProgress', (data) => {\r\n      console.log('[SignalR] TOC Generation Progress:', data);\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  public addTocGenerationCompleteListener(callback: (data: any, objectThis: any) => any, objectThis: any): void {\r\n    this.hubConnection.on('TocGenerationComplete', (data) => {\r\n      console.log('[SignalR] TOC Generation Complete:', data);\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core'\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\n\r\n@NgModule({\r\n  declarations: [    \r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatTreeModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatBadgeModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatRippleModule,\r\n    MatBottomSheetModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    \r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { versionInfo } from '../../../environments/version';\nimport { MdNavigationService } from '../../md-explorer/services/md-navigation.service';\nimport { MdFileService } from '../../md-explorer/services/md-file.service';\nimport { Router } from '@angular/router';\nimport { LayoutService } from '../../md-explorer/services/layout.service';\n\n@Component({\n  selector: 'app-title-bar',\n  templateUrl: './title-bar.component.html',\n  styleUrls: ['./title-bar.component.scss']\n})\nexport class TitleBarComponent implements OnInit {\n  isElectron = false;\n  version = versionInfo.version;\n  isSidenavOpen = true;\n\n  constructor(\n    public navService: MdNavigationService,\n    private mdFileService: MdFileService,\n    private router: Router,\n    private layoutService: LayoutService\n  ) {\n    // Check if running in Electron\n    this.isElectron = !!(window && (window as any).electronAPI);\n  }\n\n  ngOnInit(): void {\n    // Subscribe to sidenav state changes\n    this.layoutService.sidenavOpen$.subscribe(isOpen => {\n      this.isSidenavOpen = isOpen;\n    });\n  }\n\n  backward(): void {\n    console.log('[TitleBar] backward() called');\n    console.log('[TitleBar] navigation before:', this.navService.navigation);\n    console.log('[TitleBar] navigationGhost before:', this.navService.navigationGhost);\n    console.log('[TitleBar] currentIndex before:', this.navService.currentIndex);\n    \n    const navToMdFile = this.navService.back();\n    console.log('[TitleBar] navToMdFile returned:', navToMdFile);\n    \n    console.log('[TitleBar] Navigating to route: /main/navigation/document');\n    this.router.navigate(['/main/navigation/document']);\n    \n    console.log('[TitleBar] Calling setSelectedMdFileFromSideNav with:', navToMdFile);\n    this.mdFileService.setSelectedMdFileFromSideNav(navToMdFile);\n    \n    console.log('[TitleBar] navigation after:', this.navService.navigation);\n    console.log('[TitleBar] navigationGhost after:', this.navService.navigationGhost);\n    console.log('[TitleBar] currentIndex after:', this.navService.currentIndex);\n  }\n\n  forward(): void {\n    console.log('[TitleBar] forward() called');\n    console.log('[TitleBar] navigation before:', this.navService.navigation);\n    console.log('[TitleBar] navigationGhost before:', this.navService.navigationGhost);\n    console.log('[TitleBar] currentIndex before:', this.navService.currentIndex);\n    \n    const navToMdFile = this.navService.forward();\n    console.log('[TitleBar] navToMdFile returned:', navToMdFile);\n    \n    console.log('[TitleBar] Navigating to route: /main/navigation/document');\n    this.router.navigate(['/main/navigation/document']);\n    \n    console.log('[TitleBar] Calling setSelectedMdFileFromSideNav with:', navToMdFile);\n    this.mdFileService.setSelectedMdFileFromSideNav(navToMdFile);\n    \n    console.log('[TitleBar] navigation after:', this.navService.navigation);\n    console.log('[TitleBar] navigationGhost after:', this.navService.navigationGhost);\n    console.log('[TitleBar] currentIndex after:', this.navService.currentIndex);\n  }\n\n  minimizeWindow(): void {\n    if (this.isElectron && (window as any).electronAPI) {\n      (window as any).electronAPI.minimizeWindow();\n    }\n  }\n\n  maximizeWindow(): void {\n    if (this.isElectron && (window as any).electronAPI) {\n      (window as any).electronAPI.maximizeWindow();\n    }\n  }\n\n  closeWindow(): void {\n    if (this.isElectron && (window as any).electronAPI) {\n      (window as any).electronAPI.closeWindow();\n    }\n  }\n}\n","<div class=\"title-bar\">\n  <div class=\"app-info\">\n    <img src=\"/assets/MdIcon.png\" alt=\"MdExplorer\" class=\"app-icon\">\n    <span class=\"app-title\">MdExplorer</span>\n    <span class=\"app-version\">v{{ version }}</span>\n  </div>\n  \n  <div class=\"navigation-controls\" *ngIf=\"isSidenavOpen\">\n    <button mat-icon-button \n            (click)=\"backward()\"\n            [disabled]=\"navService.navigationGhost.length <= 1\"\n            class=\"nav-button\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n    <button mat-icon-button \n            (click)=\"forward()\"\n            [disabled]=\"navService.navigation.length == navService.navigationGhost.length\"\n            class=\"nav-button\">\n      <mat-icon>arrow_forward</mat-icon>\n    </button>\n  </div>\n  \n  <app-search-box></app-search-box>\n  \n  <div class=\"drag-region\"></div>\n  \n  <div class=\"window-controls\" *ngIf=\"isElectron\">\n    <button mat-icon-button (click)=\"minimizeWindow()\" class=\"window-control\">\n      <mat-icon>remove</mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"maximizeWindow()\" class=\"window-control\">\n      <mat-icon>crop_square</mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"closeWindow()\" class=\"window-control close-button\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { GITService } from '../../../git/services/gitservice.service';\r\n\r\n@Component({\r\n  selector: 'app-connection-lost',\r\n  templateUrl: './connection-lost.component.html',\r\n  styleUrls: ['./connection-lost.component.scss']\r\n})\r\nexport class ConnectionLostComponent implements OnInit {\r\n  //private _this: any;\r\n  public _HideImg = true;\r\n  public consoleIsClosed = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private gitservice: GITService,\r\n    private dialogRef: MatDialogRef<ConnectionLostComponent>){\r\n    console.log('MAT_DIALOG_DATA = ' + data);\r\n    if (data ==='serverIsDown') {\r\n      this.consoleIsClosed = true;\r\n    }\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  refresh() {\r\n    //this.monitorMDService.startConnection();\r\n    // Trigger a manual refresh by calling checkConnection on the modern Git service\r\n    // Note: The observable subscription will automatically update the UI\r\n    this.dialogRef.close();\r\n  }\r\n    \r\n\r\n\r\n}\r\n","<mat-dialog-content>\r\n  <div *ngIf=\"!consoleIsClosed\">\r\n      <img style=\"left:0px; right:0px; margin-left:auto;width:500px; margin-right:auto\" src=\"/assets/ConnectionLost.png\" />\r\n  </div>\r\n  <div *ngIf=\"consoleIsClosed\">\r\n    <h1>Server down!</h1>\r\n    Close the MdExplorer tab browser\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button *ngIf=\"!consoleIsClosed\" mat-button color=\"primary\" (click)=\"refresh()\">\r\n    <mat-icon>refresh</mat-icon>re-link\r\n  </button>  \r\n</mat-dialog-actions>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { PlantumlWorkingComponent } from \"./plantuml-working.component\";\r\n\r\n@Injectable()\r\nexport class PlantumlWorkingProvider {\r\n\r\n  private _dialogRef: MatDialogRef<PlantumlWorkingComponent>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog) {\r\n  }\r\n\r\n  show(data: any): PlantumlWorkingProvider {\r\n    this._dialogRef = this.dialog.open(PlantumlWorkingComponent, {\r\n      data: data\r\n    });\r\n    return this;\r\n  }\r\n\r\n  hide(data: any): void {\r\n    this._dialogRef.close();\r\n  }\r\n\r\n}\r\n","export class ShowFileMetadata {\r\n  constructor() {\r\n  }\r\n  public start: string;\r\n  public title: string;\r\n  public typeOfSelection: string;\r\n  \r\n  // Nuove proprietà opzionali\r\n  public buttonText?: string;\r\n  public fileExtensions?: string[];\r\n  public showFileDetails?: boolean;\r\n  public allowMultipleSelection?: boolean;\r\n  public placeholder?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LayoutService {\r\n  private sidenavWidthSubject = new BehaviorSubject<number>(240);\r\n  public sidenavWidth$: Observable<number> = this.sidenavWidthSubject.asObservable();\r\n\r\n  private sidenavOpenSubject = new BehaviorSubject<boolean>(true);\r\n  public sidenavOpen$: Observable<boolean> = this.sidenavOpenSubject.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  setSidenavWidth(width: number): void {\r\n    this.sidenavWidthSubject.next(width);\r\n  }\r\n\r\n  getSidenavWidth(): number {\r\n    return this.sidenavWidthSubject.value;\r\n  }\r\n\r\n  setSidenavOpen(isOpen: boolean): void {\r\n    this.sidenavOpenSubject.next(isOpen);\r\n  }\r\n\r\n  getSidenavOpen(): boolean {\r\n    return this.sidenavOpenSubject.value;\r\n  }\r\n}","export class GitlabSetting {\r\n  id: string;\r\n  user: string;\r\n  password: string;\r\n  gitlabLinkl: string;\r\n}\r\n","import { animate, animateChild, group, query, style, transition, trigger } from \"@angular/animations\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { IDataForRouting } from \"../Models/IDataForRouting\";\r\n\r\nconst fromProjectsToMain = (fromState: any, toState: any): boolean => {\r\n  \r\n  if (fromState===\"void\" || fromState===\"\") {\r\n    return true;\r\n  }  \r\n  let fromStart = <ActivatedRoute> fromState;\r\n  let toArrive = <ActivatedRoute>toState;\r\n  let test1 = <BehaviorSubject<IDataForRouting>> fromStart.data;\r\n  let test2 = <BehaviorSubject<IDataForRouting>>toArrive.data;\r\n  if (test1.value.animation === \"projects\" && test2.value.animation === \"main\" ) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nconst fromMainToProjects = (fromState: any, toState: any): boolean => {\r\n\r\n  if (fromState === \"void\" || fromState === \"\") {\r\n    return true;\r\n  }  \r\n  let fromStart = <ActivatedRoute>fromState;\r\n  let toArrive = <ActivatedRoute>toState;\r\n  let test1 = <BehaviorSubject<IDataForRouting>>fromStart.data;\r\n  let test2 = <BehaviorSubject<IDataForRouting>>toArrive.data;\r\n  if (test1.value.animation === \"main\" && test2.value.animation === \"projects\") {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    transition(fromProjectsToMain, [\r\n      style({ position: 'relative' }),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ], { optional: true }),\r\n      query(':enter', [\r\n        style({ left: '-100%' })\r\n      ], { optional: true }),\r\n      query(':leave', animateChild(), { optional: true }),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({ left: '100%' }))\r\n        ], { optional: true }),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({ left: '0%' }))\r\n        ], { optional: true }),\r\n      ]),\r\n    ]),\r\n    transition(fromMainToProjects, [\r\n      style({ position: 'relative' }),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ], { optional: true }),\r\n      query(':enter', [\r\n        style({ left: '100%' })\r\n      ], { optional: true }),\r\n      query(':leave', animateChild(), { optional: true }),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({ left: '-100%' }))\r\n        ], { optional: true }),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({ left: '0%' }))\r\n        ], { optional: true }),\r\n      ]),\r\n    ]), \r\n    //transition('* <=> *', [\r\n    //  style({ position: 'relative' }),\r\n    //  query(':enter, :leave', [\r\n    //    style({\r\n    //      position: 'absolute',\r\n    //      top: 0,\r\n    //      left: 0,\r\n    //      width: '100%'\r\n    //    })\r\n    //  ], { optional: true }),\r\n    //  query(':enter', [\r\n    //    style({ left: '-100%' })\r\n    //  ], { optional: true }),\r\n    //  query(':leave', animateChild(), { optional: true }),\r\n    //  group([\r\n    //    query(':leave', [\r\n    //      animate('300ms ease-out', style({ left: '100%', opacity: 0 }))\r\n    //    ], { optional: true }),\r\n    //    query(':enter', [\r\n    //      animate('300ms ease-out', style({ left: '0%' }))\r\n    //    ], { optional: true }),\r\n    //    query('@*', animateChild(), { optional: true })\r\n    //  ]),\r\n    //])\r\n  ]);\r\n","export class WaitingDialogInfo {\r\n  message: string\r\n  gifPath:string\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { IBranch } from '../models/branch';\r\nimport { DataToPull } from '../models/DataToPull'\r\nimport { CloneInfo } from '../models/cloneRequest';\r\nimport { GitlabSetting } from '../models/gitlab-setting';\r\nimport { ITag } from '../models/Tag';\r\nimport { ResposneClone } from './responses/ResponseClone';\r\nimport { \r\n  ModernGitRequest, \r\n  ModernGitResponse, \r\n  ModernPullResponse, \r\n  ModernCommitResponse, \r\n  ModernBranchStatusResponse,\r\n  ModernResponsePull \r\n} from '../models/modern-git-models';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GITService implements OnDestroy {\r\n  private _Settings: BehaviorSubject<GitlabSetting[]>;\r\n  private gitPollingInterval: any = null;\r\n  private readonly ACTIVE_POLLING_INTERVAL = 60000; // 60 secondi quando attivo\r\n  private readonly INACTIVE_POLLING_INTERVAL = 300000; // 5 minuti quando inattivo\r\n  private currentProjectPath: string = null;\r\n  \r\n  public currentBranch$: BehaviorSubject<IBranch> = new BehaviorSubject<IBranch>(\r\n    {\r\n      id: \"\", name: \"\",\r\n      somethingIsChangedInTheBranch: true,\r\n      howManyFilesAreChanged: 0,            \r\n      fullPath: \"\",\r\n      howManyCommitAreToPush:0,\r\n    });\r\n\r\n  public commmitsToPull$: BehaviorSubject<DataToPull> = new BehaviorSubject<DataToPull>({\r\n    howManyFilesAreToPull: 0,\r\n    howManyCommitAreToPush:0,\r\n    somethingIsToPull: false,\r\n    somethingIsToPush:false,\r\n    connectionIsActive: false,\r\n    whatFilesWillBeChanged: []\r\n  });\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.initializeSmartPolling();\r\n  }\r\n\r\n  /**\r\n   * Set the current project path for modern Git operations\r\n   */\r\n  setProjectPath(path: string): void {\r\n    this.currentProjectPath = path;\r\n    // Trigger immediate poll with new path\r\n    if (path) {\r\n      this.performPoll();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Inizializza il polling intelligente che si adatta alla visibilità della finestra\r\n   */\r\n  private initializeSmartPolling(): void {\r\n    // Polling iniziale immediato\r\n    this.performPoll();\r\n    \r\n    // Avvia polling con intervallo attivo\r\n    this.startPolling(this.ACTIVE_POLLING_INTERVAL);\r\n    \r\n    // Listener per cambio visibilità finestra\r\n    document.addEventListener('visibilitychange', () => {\r\n      this.handleVisibilityChange();\r\n    });\r\n    \r\n    // Listener per focus/blur finestra (backup per browser che non supportano visibilitychange)\r\n    window.addEventListener('focus', () => {\r\n      this.handleWindowFocus();\r\n    });\r\n    \r\n    window.addEventListener('blur', () => {\r\n      this.handleWindowBlur();\r\n    });\r\n    \r\n  }\r\n\r\n  /**\r\n   * Perform polling based on current configuration\r\n   */\r\n  private performPoll(): void {\r\n    if (this.currentProjectPath) {\r\n      // Use modern endpoints with SSH support\r\n      \r\n      // Get branch status\r\n      this.modernGetBranchStatus(this.currentProjectPath).subscribe(\r\n        branch => {\r\n          this.currentBranch$.next(branch);\r\n        },\r\n        error => {\r\n          console.error('Error in modern branch status:', error);\r\n          // Set default empty state on error\r\n          this.currentBranch$.next({\r\n            id: \"\", name: \"unknown\",\r\n            somethingIsChangedInTheBranch: false,\r\n            howManyFilesAreChanged: 0,\r\n            fullPath: this.currentProjectPath,\r\n            howManyCommitAreToPush: 0\r\n          });\r\n        }\r\n      );\r\n      \r\n      // Get pull/push data\r\n      this.modernGetDataToPull(this.currentProjectPath).subscribe(\r\n        pullData => {\r\n          this.commmitsToPull$.next(pullData);\r\n        },\r\n        error => {\r\n          console.error('Error in modern data to pull:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gestisce il cambio di visibilità della finestra\r\n   */\r\n  private handleVisibilityChange(): void {\r\n    if (document.visibilityState === 'visible') {\r\n      this.handleWindowFocus();\r\n    } else {\r\n      this.handleWindowBlur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Quando la finestra diventa attiva: polling più frequente\r\n   */\r\n  private handleWindowFocus(): void {\r\n    this.startPolling(this.ACTIVE_POLLING_INTERVAL);\r\n    // Polling immediato quando torna in focus\r\n    this.performPoll();\r\n  }\r\n\r\n  /**\r\n   * Quando la finestra diventa inattiva: polling meno frequente\r\n   */\r\n  private handleWindowBlur(): void {\r\n    this.startPolling(this.INACTIVE_POLLING_INTERVAL);\r\n  }\r\n\r\n  /**\r\n   * Avvia polling con intervallo specificato\r\n   */\r\n  private startPolling(interval: number): void {\r\n    // Ferma polling esistente\r\n    if (this.gitPollingInterval) {\r\n      clearInterval(this.gitPollingInterval);\r\n    }\r\n    \r\n    // Avvia nuovo polling\r\n    this.gitPollingInterval = setInterval(() => {\r\n      this.performPoll();\r\n    }, interval);\r\n  }\r\n\r\n  /**\r\n   * Ferma completamente il polling (per cleanup)\r\n   */\r\n  public stopPolling(): void {\r\n    if (this.gitPollingInterval) {\r\n      clearInterval(this.gitPollingInterval);\r\n      this.gitPollingInterval = null;\r\n    }\r\n  }\r\n\r\n  clone(request: CloneInfo): Observable<ResposneClone> {\r\n    const url = '../api/gitfeatures/cloneRepository';\r\n    return this.http.post<ResposneClone>(url, request);\r\n  }\r\n\r\n\r\n  getBranchList():Observable<IBranch[]> {\r\n    const url = '../api/gitservice/branches';\r\n    return this.http.get<IBranch[]>(url);\r\n  }\r\n\r\n  checkoutSelectedBranch(selected: IBranch) {\r\n    const url = '../api/gitservice/branches/feat/checkoutBranch';\r\n    return this.http.post<IBranch>(url, selected);\r\n  }\r\n\r\n  getTagList() {\r\n    const url = '../api/gitservice/tags';\r\n    return this.http.get<ITag[]>(url);\r\n  }\r\n\r\n  storeGitlabSettings(user: string, password: string, gitlabLink: string) {\r\n    const url = '../api/gitservice/gitlabsettings';\r\n    let setting = new GitlabSetting();    \r\n    return this.http.post<GitlabSetting>(url, setting);\r\n  }\r\n\r\n  getGitlabSettings(): Observable<GitlabSetting[]> {\r\n    const url = '../api/gitservice/gitlabsettings';\r\n    return this.http.get<GitlabSetting[]>(url);\r\n  }\r\n\r\n\r\n  // ===== MODERN GIT METHODS WITH NATIVE AUTHENTICATION =====\r\n\r\n  /**\r\n   * Pull using modern Git service with native authentication\r\n   */\r\n  modernPull(projectPath: string): Observable<ModernResponsePull> {\r\n    const request: ModernGitRequest = { ProjectPath: projectPath };\r\n    const url = '../api/ModernGitToolbar/pull';\r\n    \r\n    return this.http.post<ModernPullResponse>(url, request).pipe(\r\n      map(response => this.adaptModernResponseToLegacy(response))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Commit using modern Git service with native authentication\r\n   */\r\n  modernCommit(projectPath: string, commitMessage?: string): Observable<ModernResponsePull> {\r\n    const request: ModernGitRequest = { \r\n      ProjectPath: projectPath, \r\n      CommitMessage: commitMessage \r\n    };\r\n    const url = '../api/ModernGitToolbar/commit';\r\n    \r\n    return this.http.post<ModernCommitResponse>(url, request).pipe(\r\n      map(response => this.adaptModernResponseToLegacy(response))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Commit and push using modern Git service with native authentication\r\n   */\r\n  modernCommitAndPush(projectPath: string, commitMessage?: string): Observable<ModernResponsePull> {\r\n    const request: ModernGitRequest = { \r\n      ProjectPath: projectPath, \r\n      CommitMessage: commitMessage \r\n    };\r\n    const url = '../api/ModernGitToolbar/commit-and-push';\r\n    \r\n    console.log('[DEBUG] Sending commit request:', JSON.stringify(request, null, 2));\r\n    \r\n    return this.http.post<ModernCommitResponse>(url, request).pipe(\r\n      map(response => this.adaptModernResponseToLegacy(response))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Push using modern Git service with native authentication\r\n   */\r\n  modernPush(projectPath: string): Observable<ModernResponsePull> {\r\n    const request: ModernGitRequest = { ProjectPath: projectPath };\r\n    const url = '../api/ModernGitToolbar/push-v2';\r\n    \r\n    return this.http.post<ModernGitResponse>(url, request).pipe(\r\n      map(response => this.adaptModernResponseToLegacy(response))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get branch status using modern Git service\r\n   */\r\n  modernGetBranchStatus(projectPath: string): Observable<IBranch> {\r\n    const url = `../api/ModernGitToolbar/branch-status?projectPath=${encodeURIComponent(projectPath)}`;\r\n    \r\n    return this.http.get<ModernBranchStatusResponse>(url).pipe(\r\n      map(response => ({\r\n        id: '',\r\n        name: response.name,\r\n        somethingIsChangedInTheBranch: response.somethingIsChangedInTheBranch,\r\n        howManyFilesAreChanged: response.howManyFilesAreChanged,\r\n        howManyCommitAreToPush: response.howManyCommitAreToPush,\r\n        fullPath: response.fullPath\r\n      }))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get data to pull/push using modern Git service\r\n   */\r\n  modernGetDataToPull(projectPath: string): Observable<DataToPull> {\r\n    const url = `../api/ModernGitToolbar/get-data-to-pull?projectPath=${encodeURIComponent(projectPath)}`;\r\n    \r\n    return this.http.get<DataToPull>(url).pipe(\r\n      catchError(error => {\r\n        console.error('Error in modernGetDataToPull:', error);\r\n        // Return empty data on error\r\n        return of({\r\n          somethingIsToPull: false,\r\n          somethingIsToPush: false,\r\n          howManyFilesAreToPull: 0,\r\n          howManyCommitAreToPush: 0,\r\n          connectionIsActive: false,\r\n          whatFilesWillBeChanged: []\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Adapts modern Git response to legacy format for backward compatibility\r\n   */\r\n  private adaptModernResponseToLegacy(response: ModernGitResponse): ModernResponsePull {\r\n    return {\r\n      isConnectionMissing: false, // Modern service handles connection issues differently\r\n      isAuthenticationMissing: false, // Modern service uses native authentication\r\n      thereAreConflicts: response.thereAreConflicts,\r\n      errorMessage: response.errorMessage,\r\n      whatFilesWillBeChanged: response.changedFiles || []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Cleanup quando il service viene distrutto\r\n   */\r\n  ngOnDestroy(): void {\r\n    this.stopPolling();\r\n    \r\n    // Rimuovi event listeners per evitare memory leak\r\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange);\r\n    window.removeEventListener('focus', this.handleWindowFocus);\r\n    window.removeEventListener('blur', this.handleWindowBlur);\r\n    \r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { IMdSetting } from '../Models/IMdSetting';\r\nimport { MdSetting } from '../Models/MdSettings';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppCurrentMetadataService {\r\n\r\n  private _folderName: BehaviorSubject<string>;\r\n  private _Settings: BehaviorSubject<IMdSetting[]>;\r\n  public showSidenav: BehaviorSubject<boolean>;\r\n\r\n\r\n  private dataStore: {\r\n    folderName: string\r\n    settings: IMdSetting[]\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    \r\n    this.dataStore = {\r\n      folderName: 'test', settings: [new MdSetting({ id:'test', name: 'PlantumlServer' })]}\r\n    this._folderName = new BehaviorSubject<string>('test');\r\n    this._Settings = new BehaviorSubject<IMdSetting[]>([]);\r\n    this.showSidenav = new BehaviorSubject<boolean>(true);\r\n  }\r\n\r\n  get folderName(): Observable<string> {\r\n    return this._folderName.asObservable();\r\n  }\r\n\r\n  get settings(): Observable<IMdSetting[]> {\r\n    return this._Settings.asObservable();\r\n  }\r\n\r\n  loadFolderName() {\r\n    const url = '../api/AppSettings/GetCurrentFolder';\r\n    return this.http.get<string>(url)\r\n      .subscribe(data => {\r\n        this.dataStore.folderName = data;\r\n        this._folderName.next(Object.assign({},this.dataStore).folderName);\r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch working folder name\");\r\n        }\r\n      );\r\n  }\r\n\r\n  loadSettings() {\r\n    const url = '../api/AppSettings/GetSettings';\r\n    return this.http.get<IMdSetting[]>(url)\r\n      .subscribe(data => {\r\n        this.dataStore.settings = data;\r\n        this._Settings.next(Object.assign({}, this.dataStore).settings);\r\n      }\r\n        , error => {\r\n\r\n        });\r\n  }\r\n\r\n  saveSettings(updatedSettings?: IMdSetting[]) {\r\n    const url = '../api/AppSettings/SetSettings';\r\n    // If updatedSettings are provided, update the dataStore first\r\n    if (updatedSettings) {\r\n      this.dataStore.settings = updatedSettings;\r\n      this._Settings.next(Object.assign({}, this.dataStore).settings);\r\n    }\r\n    return this.http.post<IMdSetting[]>(url, this.dataStore.settings);\r\n  }\r\n\r\n  killServer() {\r\n    const url = '../api/AppSettings/KillServer';    \r\n    return this.http.get(url).subscribe(data => {      \r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { WaitingDialogInfo } from './models/WaitingDialogInfo';\r\n\r\n@Component({\r\n  selector: 'app-waiting-dialog',\r\n  templateUrl: './waiting-dialog.component.html',\r\n  styleUrls: ['./waiting-dialog.component.scss']\r\n})\r\nexport class WaitingDialogComponent implements OnInit {\r\n\r\n  public message: string = \"<todo>\";\r\n \r\n\r\n  constructor(private dialogRef: MatDialogRef<WaitingDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: WaitingDialogInfo,) {\r\n    dialogRef.disableClose = true;\r\n    this.message = this.data.message;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <iframe src=\"https://giphy.com/embed/l0NgQIwNvU9AUuaY0\" width=\"120\" height=\"120\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\r\n</div>\r\n<div>\r\n  <h2>{{message}}</h2>\r\n</div>\r\n","import { Component, HostListener } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { slideInAnimation } from './shared/animations';\r\nimport { AppCurrentMetadataService } from './services/app-current-metadata.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  animations: [\r\n    slideInAnimation\r\n  ],\r\n}) \r\nexport class AppComponent {\r\n  @HostListener('window:unload', ['$event'])\r\n  unloadHandler(event) {\r\n    // E' stato dato il comando di chiusura del tab o di chrome\r\n    // spegni il serverino che si è acceso\r\n    if (performance.navigation.type != performance.navigation.TYPE_RELOAD) {\r\n      //this.currentFolder.killServer();\r\n    }\r\n    \r\n    //\r\n  }\r\n  title = 'client2';\r\n  constructor(private titleService: Title,\r\n    private currentFolder: AppCurrentMetadataService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) {\r\n    \r\n    currentFolder.folderName.subscribe((data: any) => {      \r\n      this.titleService.setTitle(data.currentFolder);\r\n    });\r\n    currentFolder.loadFolderName();\r\n    \r\n  }\r\n}\r\n","\r\n<app-title-bar></app-title-bar>\r\n<div class=\"container app-content\" [@routeAnimations]=\"o.isActivated ? o.activatedRoute:''\">\r\n  <router-outlet #o=\"outlet\"></router-outlet>\r\n</div>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MdFile } from '../../../md-explorer/models/md-file';\r\nimport { MdFileService } from '../../../md-explorer/services/md-file.service';\r\n\r\n@Component({\r\n  selector: 'app-new-directory',\r\n  templateUrl: './new-directory.component.html',\r\n  styleUrls: ['./new-directory.component.scss']\r\n})\r\nexport class NewDirectoryComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: MdFile,\r\n    private dialogRef: MatDialogRef<NewDirectoryComponent>,\r\n    private mdFileService: MdFileService) { }\r\n  public directoryName: string\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  save() {\r\n    this.mdFileService.CreateNewDirectoryEx(this.data.fullPath, this.directoryName, this.data.level)\r\n      .subscribe(data => {\r\n        this.dialogRef.close(data);\r\n      });\r\n\r\n  }\r\n  dismiss() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div mat-dialog-title>\r\n  Create new folder\r\n</div>\r\n\r\n\r\n<mat-dialog-content>\r\n  <div class=\"simple-container\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Directory Name</mat-label>\r\n      <input matInput [(ngModel)]=\"directoryName\" (keyup.enter)=\"save()\" placeholder=\"directoryName\">\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n  <button mat-button color=\"primary\" (click)=\"save()\">\r\n    <mat-icon>save</mat-icon>Save\r\n  </button>\r\n  <button mat-button color=\"primary\" (click)=\"dismiss()\">\r\n    <mat-icon>cancel</mat-icon>Cancel\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { IMdSetting } from \"./IMdSetting\";\r\n\r\nexport class MdSetting implements IMdSetting {\r\n\r\n  public constructor(init?: Partial<MdSetting>) {\r\n    Object.assign(this, init);\r\n  }\r\n  id: string;\r\n  name: string;\r\n  intValue?: number;\r\n  stringValue?: string;\r\n  dateTimeValue?: Date;\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, HostListener } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { SearchService } from '../../services/search.service';\r\nimport { SearchResult, FileSearchResult, LinkSearchResult } from '../../Models/search.models';\r\nimport { Router } from '@angular/router';\r\nimport { MdFileService } from '../../md-explorer/services/md-file.service';\r\nimport { ProjectsService } from '../../md-explorer/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-search-box',\r\n  templateUrl: './search-box.component.html',\r\n  styleUrls: ['./search-box.component.scss']\r\n})\r\nexport class SearchBoxComponent implements OnInit, OnDestroy {\r\n  @ViewChild('searchInput') searchInput: ElementRef;\r\n  \r\n  searchControl = new FormControl('');\r\n  searchResults: SearchResult | null = null;\r\n  isSearching = false;\r\n  showResults = false;\r\n  selectedTab: 'files' | 'links' = 'files';\r\n  selectedTabIndex = 0;\r\n  currentProjectPath: string = '';\r\n  \r\n  private destroy$ = new Subject<void>();\r\n  \r\n  constructor(\r\n    private searchService: SearchService,\r\n    private router: Router,\r\n    private mdFileService: MdFileService,\r\n    private projectsService: ProjectsService\r\n  ) {}\r\n  \r\n  ngOnInit(): void {\r\n    \r\n    // Subscribe to current project changes\r\n    this.projectsService.currentProjects$.pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(project => {\r\n      if (project) {\r\n        this.currentProjectPath = project.path;\r\n      }\r\n    });\r\n    \r\n    // Setup search with debounce\r\n    this.searchControl.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged(),\r\n      switchMap(term => {\r\n        if (!term || term.trim().length < 2) {\r\n          this.searchResults = null;\r\n          this.showResults = false;\r\n          return [];\r\n        }\r\n        \r\n        this.isSearching = true;\r\n        this.showResults = true;\r\n        return this.searchService.quickSearch(term);\r\n      }),\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(\r\n      results => {\r\n        \r\n        // Debug: Analizza i file ricevuti per trovare duplicati\r\n        if (results && results.files) {\r\n          \r\n          // Raggruppa per path per trovare duplicati\r\n          const filesByPath = {};\r\n          results.files.forEach((file, index) => {\r\n            const normalizedPath = file.path.toLowerCase();\r\n            if (!filesByPath[normalizedPath]) {\r\n              filesByPath[normalizedPath] = [];\r\n            }\r\n            filesByPath[normalizedPath].push(file);\r\n          });\r\n          \r\n          // Log dei duplicati trovati\r\n          Object.keys(filesByPath).forEach(path => {\r\n            if (filesByPath[path].length > 1) {\r\n              console.warn('[SearchBox] ⚠️ DUPLICATE FILES FOUND!');\r\n              console.warn('[SearchBox] Path:', path);\r\n              console.warn('[SearchBox] Number of duplicates:', filesByPath[path].length);\r\n              console.warn('[SearchBox] Duplicate entries with IDs:', filesByPath[path].map(f => ({\r\n                id: f.id,\r\n                fileName: f.fileName,\r\n                path: f.path\r\n              })));\r\n            }\r\n          });\r\n        }\r\n        \r\n        this.searchResults = results;\r\n        this.isSearching = false;\r\n        \r\n        // Auto-select tab with results\r\n        if (results && results.files.length > 0 && results.links.length === 0) {\r\n          this.selectedTab = 'files';\r\n          this.selectedTabIndex = 0;\r\n        } else if (results && results.links.length > 0 && results.files.length === 0) {\r\n          this.selectedTab = 'links';\r\n          this.selectedTabIndex = 1;\r\n        }\r\n      },\r\n      error => {\r\n        this.isSearching = false;\r\n        this.searchResults = null;\r\n      }\r\n    );\r\n  }\r\n  \r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n  \r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: MouseEvent): void {\r\n    const clickedElement = event.target as HTMLElement;\r\n    const searchBox = document.querySelector('.search-box-container');\r\n    \r\n    \r\n    // Don't close if clicking on Material Design overlay, tab elements, or toolbar buttons\r\n    if (clickedElement.closest('.cdk-overlay-container') ||\r\n        clickedElement.closest('.mat-tab-label') ||\r\n        clickedElement.closest('.mat-tab-group') ||\r\n        clickedElement.closest('mat-toolbar') ||\r\n        clickedElement.closest('.mat-toolbar')) {\r\n      return;\r\n    }\r\n    \r\n    if (searchBox && !searchBox.contains(clickedElement)) {\r\n      this.showResults = false;\r\n    }\r\n  }\r\n  \r\n  onFocus(): void {\r\n    if (this.searchControl.value && this.searchControl.value.trim().length >= 2) {\r\n      this.showResults = true;\r\n    }\r\n  }\r\n  \r\n  onBlur(event: FocusEvent): void {\r\n    \r\n    // Delay to allow click on results\r\n    setTimeout(() => {\r\n      const searchContainer = document.querySelector('.search-box-container');\r\n      const activeElement = document.activeElement;\r\n      \r\n      // Keep results open if focus is still within the search container\r\n      if (searchContainer && searchContainer.contains(activeElement)) {\r\n        return;\r\n      }\r\n      \r\n      // Also keep open if clicking on Material tabs or tab content\r\n      if (activeElement && (\r\n        activeElement.closest('.mat-tab-label') ||\r\n        activeElement.closest('.mat-tab-group') ||\r\n        activeElement.closest('.search-results')\r\n      )) {\r\n        return;\r\n      }\r\n      \r\n      this.showResults = false;\r\n    }, 200);\r\n  }\r\n  \r\n  selectFile(file: FileSearchResult): void {\r\n    \r\n    // Get current project path to calculate relative path\r\n    const currentProject = this.projectsService.currentProjects$.value;\r\n    \r\n    let fullPath = file.path;\r\n    let relativePath = '';\r\n    \r\n    // Calculate relative path from project root\r\n    if (currentProject && currentProject.path) {\r\n      const projectPath = currentProject.path.replace(/\\\\/g, '/');\r\n      const filePath = file.path.replace(/\\\\/g, '/');\r\n      \r\n      \r\n      // If file path starts with project path, extract relative part\r\n      if (filePath.startsWith(projectPath)) {\r\n        relativePath = filePath.substring(projectPath.length);\r\n        // Ensure relative path starts with backslash or forward slash\r\n        if (!relativePath.startsWith('/') && !relativePath.startsWith('\\\\')) {\r\n          relativePath = '\\\\' + relativePath;\r\n        }\r\n      } else {\r\n        // Fallback: use just the filename with backslash prefix\r\n        relativePath = '\\\\' + file.fileName;\r\n      }\r\n    } else {\r\n      // No project context, use filename as relative path\r\n      relativePath = '\\\\' + file.fileName;\r\n    }\r\n    \r\n    \r\n    // Create MdFile object from search result\r\n    const mdFile = {\r\n      fullPath: fullPath,\r\n      relativePath: relativePath,\r\n      path: relativePath, // Add path property for compatibility\r\n      name: file.fileName,\r\n      type: file.fileType || 'mdFile'\r\n    };\r\n    \r\n    \r\n    // Navigate to document\r\n    this.router.navigate(['/main/navigation/document']);\r\n    this.mdFileService.setSelectedMdFileFromSideNav(mdFile as any);\r\n    \r\n    // Clear search and hide results\r\n    this.searchControl.setValue('');\r\n    this.showResults = false;\r\n  }\r\n  \r\n  selectLink(link: LinkSearchResult): void {\r\n    \r\n    // Navigate based on link type\r\n    if (link.fullPath) {\r\n      // Get current project path to calculate relative path\r\n      const currentProject = this.projectsService.currentProjects$.value;\r\n      let relativePath = '';\r\n      \r\n      // Calculate relative path from project root\r\n      if (currentProject && currentProject.path) {\r\n        const projectPath = currentProject.path.replace(/\\\\/g, '/');\r\n        const filePath = link.fullPath.replace(/\\\\/g, '/');\r\n        \r\n        // If file path starts with project path, extract relative part\r\n        if (filePath.startsWith(projectPath)) {\r\n          relativePath = filePath.substring(projectPath.length);\r\n          // Ensure relative path starts with backslash or forward slash\r\n          if (!relativePath.startsWith('/') && !relativePath.startsWith('\\\\')) {\r\n            relativePath = '\\\\' + relativePath;\r\n          }\r\n        } else {\r\n          // Fallback: use just the filename with backslash prefix\r\n          const fileName = link.fullPath.split('\\\\').pop() || link.mdTitle || link.path;\r\n          relativePath = '\\\\' + fileName;\r\n        }\r\n      } else {\r\n        // No project context, use filename as relative path\r\n        const fileName = link.fullPath.split('\\\\').pop() || link.mdTitle || link.path;\r\n        relativePath = '\\\\' + fileName;\r\n      }\r\n      \r\n      const mdFile = {\r\n        fullPath: link.fullPath,\r\n        relativePath: relativePath,\r\n        path: relativePath, // Add path property for compatibility\r\n        name: link.mdTitle || link.path,\r\n        type: 'mdFile'\r\n      };\r\n      \r\n      this.router.navigate(['/main/navigation/document']);\r\n      this.mdFileService.setSelectedMdFileFromSideNav(mdFile as any);\r\n    }\r\n    \r\n    // Clear search and hide results\r\n    this.searchControl.setValue('');\r\n    this.showResults = false;\r\n  }\r\n  \r\n  clearSearch(): void {\r\n    this.searchControl.setValue('');\r\n    this.searchResults = null;\r\n    this.showResults = false;\r\n  }\r\n  \r\n  onTabChange(index: number): void {\r\n    console.log('Tab changed:', {\r\n      newIndex: index,\r\n      previousIndex: this.selectedTabIndex,\r\n      newTab: index === 0 ? 'files' : 'links',\r\n      showResults: this.showResults\r\n    });\r\n    this.selectedTabIndex = index;\r\n    this.selectedTab = index === 0 ? 'files' : 'links';\r\n  }\r\n  \r\n  // Keyboard navigation\r\n  @HostListener('keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent): void {\r\n    if (event.key === 'Escape') {\r\n      this.showResults = false;\r\n      this.searchInput.nativeElement.blur();\r\n    }\r\n    \r\n    // Add arrow key navigation if needed\r\n  }\r\n  \r\n  // Helper method to get relative path for display\r\n  getRelativePath(fullPath: string): string {\r\n    if (!this.currentProjectPath || !fullPath) {\r\n      return fullPath;\r\n    }\r\n    \r\n    const projectPath = this.currentProjectPath.replace(/\\\\/g, '/').toLowerCase();\r\n    const filePath = fullPath.replace(/\\\\/g, '/').toLowerCase();\r\n    \r\n    // If file path starts with project path, extract relative part\r\n    if (filePath.startsWith(projectPath)) {\r\n      let relativePath = fullPath.substring(this.currentProjectPath.length);\r\n      // Remove leading slash/backslash if present\r\n      if (relativePath.startsWith('\\\\') || relativePath.startsWith('/')) {\r\n        relativePath = relativePath.substring(1);\r\n      }\r\n      return relativePath;\r\n    }\r\n    \r\n    // Fallback: return the full path\r\n    return fullPath;\r\n  }\r\n  \r\n  // Get tooltip text for long paths\r\n  getPathTooltip(fullPath: string): string {\r\n    const relativePath = this.getRelativePath(fullPath);\r\n    // Show full path in tooltip if it's truncated\r\n    return relativePath;\r\n  }\r\n}","<div class=\"search-box-container\">\n  <div class=\"search-input-wrapper\">\n    <mat-icon class=\"search-icon\" [class.has-value]=\"searchControl.value\">search</mat-icon>\n    <input \n      #searchInput\n      type=\"text\" \n      class=\"search-input\"\n      placeholder=\"Cerca documenti e link...\"\n      [formControl]=\"searchControl\"\n      (focus)=\"onFocus()\"\n      (blur)=\"onBlur($event)\"\n      autocomplete=\"off\">\n    <button \n      *ngIf=\"searchControl.value\" \n      class=\"clear-button\"\n      (click)=\"clearSearch()\"\n      type=\"button\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  \n  <div class=\"search-results\" *ngIf=\"showResults && (searchResults || isSearching)\">\n    <div class=\"search-header\" *ngIf=\"searchResults\">\n      <mat-tab-group [selectedIndex]=\"selectedTabIndex\" (selectedIndexChange)=\"onTabChange($event)\">\n        <mat-tab>\n          <ng-template mat-tab-label>\n            <span class=\"tab-label\">\n              Files \n              <span class=\"count\">({{ searchResults.totalFiles }})</span>\n            </span>\n          </ng-template>\n          \n          <div class=\"results-list files-list\">\n            <div *ngIf=\"searchResults.files.length === 0\" class=\"no-results\">\n              Nessun file trovato\n            </div>\n            \n            <div \n              *ngFor=\"let file of searchResults.files\" \n              class=\"result-item file-item\"\n              (click)=\"selectFile(file)\">\n              <mat-icon class=\"result-icon\">description</mat-icon>\n              <div class=\"result-content\">\n                <div class=\"result-title\" [innerHTML]=\"file.highlightedText || file.fileName\"></div>\n                <div class=\"result-path\" \n                     [title]=\"getPathTooltip(file.path)\"\n                     [matTooltip]=\"getRelativePath(file.path)\"\n                     matTooltipPosition=\"above\"\n                     [matTooltipShowDelay]=\"500\">\n                  {{ getRelativePath(file.path) }}\n                </div>\n                <div class=\"result-meta\">\n                  <span class=\"matched-field\">{{ file.matchedField }}</span>\n                  <span class=\"file-type\" *ngIf=\"file.fileType\">{{ file.fileType }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </mat-tab>\n        \n        <mat-tab>\n          <ng-template mat-tab-label>\n            <span class=\"tab-label\">\n              Links \n              <span class=\"count\">({{ searchResults.totalLinks }})</span>\n            </span>\n          </ng-template>\n          \n          <div class=\"results-list links-list\">\n            <div *ngIf=\"searchResults.links.length === 0\" class=\"no-results\">\n              Nessun link trovato\n            </div>\n            \n            <div \n              *ngFor=\"let link of searchResults.links\" \n              class=\"result-item link-item\"\n              (click)=\"selectLink(link)\">\n              <mat-icon class=\"result-icon\">link</mat-icon>\n              <div class=\"result-content\">\n                <div class=\"result-title\" [innerHTML]=\"link.highlightedText || link.mdTitle || link.path\"></div>\n                <div class=\"result-context\" *ngIf=\"link.mdContext\">{{ link.mdContext }}</div>\n                <div class=\"result-meta\">\n                  <span class=\"matched-field\">{{ link.matchedField }}</span>\n                  <span class=\"source-file\" *ngIf=\"link.markdownFileName\"\n                        [matTooltip]=\"getRelativePath(link.markdownFilePath)\"\n                        matTooltipPosition=\"above\"\n                        [matTooltipShowDelay]=\"500\">\n                    in {{ link.markdownFileName }}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n    \n    <div class=\"search-loading\" *ngIf=\"isSearching\">\n      <mat-spinner diameter=\"20\"></mat-spinner>\n      <span>Ricerca in corso...</span>\n    </div>\n    \n    <div class=\"search-footer\" *ngIf=\"searchResults && !isSearching\">\n      <span class=\"search-time\">{{ searchResults.searchDurationMs }}ms</span>\n    </div>\n  </div>\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ParsingProjectComponent } from \"./parsing-project.component\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ParsingProjectProvider {\r\n\r\n  private _dialogRef: MatDialogRef<ParsingProjectComponent>;\r\n  public folder$ = new BehaviorSubject<string>(\"Processing\");\r\n\r\n  constructor(\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  show(data:any): ParsingProjectProvider {\r\n    this._dialogRef = this.dialog.open(ParsingProjectComponent, {\r\n      data: { data : data, folder$:this.folder$ }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  hide(data: any): void {\r\n    this._dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n//import { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MaterialModule } from \"./shared/material.module\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ParsingProjectProvider } from './signalR/dialogs/parsing-project/parsing-project.provider';\r\nimport { ConnectionLostProvider } from './signalR/dialogs/connection-lost/connection-lost.provider';\r\nimport { PlantumlWorkingComponent } from './signalR/dialogs/plantuml-working/plantuml-working.component';\r\nimport { PlantumlWorkingProvider } from './signalR/dialogs/plantuml-working/plantuml-working.provider';\r\nimport { ShowFileSystemComponent } from './commons/components/show-file-system/show-file-system.component';\r\nimport { WaitingDialogComponent } from './commons/waitingdialog/waiting-dialog/waiting-dialog.component';\r\nimport { NewDirectoryComponent } from './commons/components/new-directory/new-directory.component';\r\nimport { OpeningApplicationComponent } from './signalR/dialogs/opening-application/opening-application.component';\r\nimport { OpeningApplicationProvider } from './signalR/dialogs/opening-application/opening-application.provider';\r\nimport { TitleBarComponent } from './components/title-bar/title-bar.component';\r\nimport { SearchBoxComponent } from './components/search-box/search-box.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'main',\r\n    loadChildren: () => import('./md-explorer/md-explorer.module').then(m => m.MdExplorerModule),\r\n    data: { animation: 'main' }\r\n  },\r\n  {\r\n    path: 'projects', loadChildren: () => import('./projects/projects.module').then(m => m.ProjectsModule),\r\n    data: { animation: 'projects' }\r\n  },\r\n  { path: '**', redirectTo: 'projects', data: { animation: 'projects' } }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PlantumlWorkingComponent,\r\n    ShowFileSystemComponent,\r\n    WaitingDialogComponent,\r\n    NewDirectoryComponent,\r\n    OpeningApplicationComponent,\r\n    TitleBarComponent,\r\n    SearchBoxComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes), //\r\n    FlexLayoutModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,    \r\n    \r\n  ],\r\n  providers: [ParsingProjectProvider,\r\n    ConnectionLostProvider,\r\n    PlantumlWorkingProvider,\r\n    OpeningApplicationProvider],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor() {\r\n    console.log('AppModuleConstructor');\r\n  }\r\n}\r\n","import { IFileInfoNode } from \"./IFileInfoNode\";\r\n\r\n\r\nexport class MdFile implements IFileInfoNode {\r\n  \r\n\r\n  constructor(public name:string,public path:string, public level: number, public expandable:boolean) {\r\n\r\n  }\r\n  \r\n  type: string;\r\n  //children: MdFile[];\r\n  isLoading: boolean;\r\n  childrens: MdFile[];\r\n  fullPath: string;\r\n  relativePath: string;\r\n  fullDirectoryPath: string;\r\n  index: number;\r\n  \r\n  // Nuove proprietà per caricamento incrementale\r\n  isIndexed?: boolean;\r\n  indexingStatus?: 'idle' | 'indexing' | 'completed';\r\n  indexingProgress?: number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-plantuml-working',\r\n  templateUrl: './plantuml-working.component.html',\r\n  styleUrls: ['./plantuml-working.component.scss']\r\n})\r\nexport class PlantumlWorkingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p><a href=\"https://plantuml.com\" target=\"_blank\"> Thanks Plantuml.com!</a></p>\r\n<img class=\"rise-shake\" src=\"/assets/Plantuml_Logo.svg\" />\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { MdFile } from '../models/md-file';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MdNavigationService {\r\n\r\n  public navigation: MdFile[] = [];\r\n  public navigationGhost: MdFile[] = [];\r\n  public currentIndex: number = 0;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public back(): MdFile {\r\n    \r\n    this.navigationGhost.pop();// throw away the item into the copy    \r\n    this.currentIndex = this.navigationGhost.length-1;\r\n    let currentMdFile = this.navigation[this.currentIndex];\r\n    // Navigation back: index \" + this.currentIndex\r\n    return currentMdFile;\r\n  }\r\n\r\n  public forward(): MdFile {\r\n    \r\n    this.currentIndex = this.currentIndex + 1;\r\n    let currentMdFile = this.navigation[this.currentIndex];  \r\n    this.navigationGhost.push(currentMdFile);\r\n    // Navigation forward: index \" + this.currentIndex\r\n    return currentMdFile;\r\n  }\r\n\r\n  public resetNavigation() {\r\n    \r\n    this.navigationGhost = [];\r\n    this.navigation = [];\r\n  }\r\n\r\n  public setNewNavigation(currentMdFile: MdFile): void {\r\n    // Adding to navigation: \" + currentMdFile.fullPath\r\n    if (this.navigationGhost.length>=1) {\r\n      // Checking if current file matches last in navigation\r\n    }\r\n    if (\r\n      (this.navigationGhost.length - 1) >= 0 //check its not at beginning of navigation\r\n      && currentMdFile.fullPath == this.navigationGhost[this.navigationGhost.length - 1].fullPath) {\r\n      // Same file as current, skipping\r\n      return; //DO NOTHING\r\n    }\r\n    this.navigationGhost.push(currentMdFile);\r\n    \r\n    this.navigation = this.deepCopyArray(this.navigationGhost);\r\n    this.currentIndex = this.navigationGhost.length - 1;// index i 0 based, length is 1 based\r\n    // Navigation updated, length: \" + this.navigation.length\r\n  }\r\n\r\n  public deepCopyArray<T>(array: T[]): T[] {\r\n    return JSON.parse(JSON.stringify(array));\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MdServerMessagesService } from \"../../services/server-messages.service\";\r\nimport { ConnectionLostComponent } from \"./connection-lost.component\";\r\n\r\n\r\n@Injectable()\r\nexport class ConnectionLostProvider {\r\n\r\n  private _dialogRef: MatDialogRef<ConnectionLostComponent>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog) {\r\n  }\r\n\r\n  show(hub: MdServerMessagesService): ConnectionLostProvider {\r\n    this._dialogRef = this.dialog.open(ConnectionLostComponent, {\r\n      data: null\r\n    });\r\n    this._dialogRef.afterClosed().subscribe(_ => {\r\n      hub.startConnection();\r\n    });\r\n    return this;\r\n  }\r\n  showConsoleClosed(): void {\r\n    console.log('showConsoleClosed')\r\n    this._dialogRef = this.dialog.open(ConnectionLostComponent, {\r\n      data: 'serverIsDown'\r\n    });\r\n  }\r\n\r\n  hide(data: any): void {\r\n    this._dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SearchResult, SearchRequest, FileSearchResult, LinkSearchResult } from '../Models/search.models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n  private baseUrl = '../api/search';\r\n\r\n  constructor(private http: HttpClient) {\r\n    console.log('[SearchService] Service initialized');\r\n  }\r\n\r\n  quickSearch(term: string, maxResults: number = 20): Observable<SearchResult> {\r\n    console.log(`[SearchService] Quick search for: ${term}`);\r\n    \r\n    const params = new HttpParams()\r\n      .set('term', term)\r\n      .set('maxResults', maxResults.toString());\r\n    \r\n    return this.http.get<SearchResult>(`${this.baseUrl}/quick`, { params });\r\n  }\r\n\r\n  advancedSearch(request: SearchRequest): Observable<SearchResult> {\r\n    console.log(`[SearchService] Advanced search:`, request);\r\n    \r\n    return this.http.post<SearchResult>(`${this.baseUrl}/advanced`, request);\r\n  }\r\n\r\n  searchFiles(term: string, maxResults: number = 50): Observable<{ files: FileSearchResult[], totalFiles: number }> {\r\n    console.log(`[SearchService] Search files for: ${term}`);\r\n    \r\n    const params = new HttpParams()\r\n      .set('term', term)\r\n      .set('maxResults', maxResults.toString());\r\n    \r\n    return this.http.get<{ files: FileSearchResult[], totalFiles: number }>(`${this.baseUrl}/files`, { params });\r\n  }\r\n\r\n  searchLinks(term: string, maxResults: number = 50): Observable<{ links: LinkSearchResult[], totalLinks: number }> {\r\n    console.log(`[SearchService] Search links for: ${term}`);\r\n    \r\n    const params = new HttpParams()\r\n      .set('term', term)\r\n      .set('maxResults', maxResults.toString());\r\n    \r\n    return this.http.get<{ links: LinkSearchResult[], totalLinks: number }>(`${this.baseUrl}/links`, { params });\r\n  }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { OpeningApplicationComponent } from \"./opening-application.component\";\r\n\r\n@Injectable()\r\nexport class OpeningApplicationProvider {\r\n\r\n  private _dialogRef: MatDialogRef<OpeningApplicationComponent>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog) {\r\n  }\r\n\r\n  show(data: any): OpeningApplicationProvider {\r\n    this._dialogRef = this.dialog.open(OpeningApplicationComponent, {\r\n      data: data\r\n    });\r\n    return this;\r\n  }\r\n\r\n  hide(data: any): void {\r\n    this._dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-opening-application',\r\n  templateUrl: './opening-application.component.html',\r\n  styleUrls: ['./opening-application.component.scss']\r\n})\r\nexport class OpeningApplicationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>MarkDown is opening an application</h1>\r\n<h3>Please check on you computer</h3>\r\n\r\n\r\n<p>Remember to close application, before commit</p>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-parsing-project',\r\n  templateUrl: './parsing-project.component.html',\r\n  styleUrls: ['./parsing-project.component.scss']\r\n})\r\nexport class ParsingProjectComponent implements OnInit {\r\n\r\n  public folder$: BehaviorSubject<string>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dialogRef: MatDialogRef<ParsingProjectComponent>\r\n  ) {\r\n    this.folder$ = data.folder$;\r\n    dialogRef.disableClose = true;\r\n}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>Indexing documents</h1>\r\n{{folder$.value}}\r\n","// Questo file è generato automaticamente dallo script update-version.js\n// Non modificarlo manualmente.\nexport const versionInfo = {\n  version: '2025.09.02.3',\n  buildTime: '2025.09.02 09:36:19'\n};\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MdProject } from '../models/md-project';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _mdProjects: BehaviorSubject<MdProject[]>;\r\n  currentProjects$: BehaviorSubject<MdProject> = new BehaviorSubject<MdProject>(null);\r\n\r\n  get mdProjects() {\r\n    return this._mdProjects.asObservable();\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.dataStore = { mdProjects: [] };\r\n    this._mdProjects = new BehaviorSubject<MdProject[]>([]);\r\n  }\r\n\r\n  private dataStore: {\r\n\r\n    mdProjects: MdProject[]\r\n  }\r\n\r\n  fetchProjects() {\r\n    const url = '../api/MdProjects/GetProjects';\r\n    this.http.get<MdProject[]>(url)\r\n      .subscribe(data => {\r\n        this.dataStore.mdProjects = data;\r\n        this._mdProjects.next(Object.assign({}, this.dataStore).mdProjects);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async SetSideNavWidth(mdProject: MdProject) {\r\n    const url = '../api/MdProjects/SetSideNavWidth';\r\n    await this.http.post<any>(url, mdProject).toPromise();\r\n  }\r\n\r\n  setNewFolderProject(path: string):void {\r\n    const url = '../api/MdProjects/SetFolderProject';\r\n    this.http.post<MdProject>(url, { path: path }).subscribe(_ => {\r\n      this.currentProjects$.next(_);\r\n    });\r\n    \r\n  }\r\n\r\n  //setNewFolderProject(path: string, callback: (data: any, objectThis: any) => any, objectThis: any) {\r\n  //  const url = '../api/MdProjects/SetFolderProject';\r\n  //  this.http.post<any>(url, { path: path }).subscribe(data => {\r\n  //    callback(data, objectThis);\r\n  //  });\r\n  //}\r\n\r\n  deleteProject(project: any, callback: (data: any, objectThis: any) => any, objectThis: any) {\r\n    const url = '../api/MdProjects/DeleteProject';\r\n    this.http.post<any>(url, project).subscribe(data => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { MdFile } from '../models/md-file';\r\nimport { IDocumentSettings } from './Types/IDocumentSettings';\r\nimport { MdServerMessagesService } from '../../signalR/services/server-messages.service';\r\nimport { SpecialFolder, Drive } from '../../commons/components/show-file-system/file-explorer.models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MdFileService {\r\n\r\n  private _whatDisplayForToolbar: BehaviorSubject<string>;\r\n  public _mdFiles: BehaviorSubject<MdFile[]>;\r\n  public _mdDynFolderDocument: BehaviorSubject<MdFile[]>;\r\n  public _serverSelectedMdFile: BehaviorSubject<MdFile[]>;\r\n  private _navigationArray: MdFile[] = [];// deve morire\r\n  private _selectedMdFileFromToolbar: BehaviorSubject<MdFile[]>;\r\n  private _selectedMdFileFromSideNav: BehaviorSubject<MdFile>;\r\n  private _selectedDirectoryFromNewDirectory: BehaviorSubject<MdFile>;\r\n  \r\n\r\n  private dataStore: {\r\n    mdFiles: MdFile[]\r\n    mdFoldersDocument: MdFile[]\r\n    mdDynFolderDocument: MdFile[]\r\n    serverSelectedMdFile: MdFile[]\r\n  }\r\n  constructor(private http: HttpClient,\r\n    private mdServerMessages: MdServerMessagesService) {\r\n\r\n    var defaultSelectedMdFile = [];\r\n    this.dataStore = {\r\n      mdFiles: [],\r\n      mdFoldersDocument: [],\r\n      mdDynFolderDocument: [],\r\n      serverSelectedMdFile: defaultSelectedMdFile\r\n    };\r\n\r\n    this._mdFiles = new BehaviorSubject<MdFile[]>([]);\r\n    this._mdDynFolderDocument = new BehaviorSubject<MdFile[]>([]);\r\n    this._serverSelectedMdFile = new BehaviorSubject<MdFile[]>([]);\r\n    this._selectedMdFileFromToolbar = new BehaviorSubject<MdFile[]>([]);\r\n    this._selectedMdFileFromSideNav = new BehaviorSubject<MdFile>(null);\r\n    this._selectedDirectoryFromNewDirectory = new BehaviorSubject<MdFile>(null);\r\n    this._whatDisplayForToolbar = new BehaviorSubject<string>('block');\r\n  }\r\n\r\n  get whatDisplayForToolbar(): Observable<string> {\r\n    return this._whatDisplayForToolbar.asObservable();\r\n  }\r\n\r\n  setWhatDisplayForToolbar(value: string) {\r\n    this._whatDisplayForToolbar.next(value);\r\n  }\r\n\r\n  get mdFiles(): Observable<MdFile[]> {\r\n    return this._mdFiles.asObservable();\r\n  }\r\n\r\n  get mdDynFolderDocument(): Observable<MdFile[]> {\r\n    return this._mdDynFolderDocument.asObservable();\r\n  }\r\n\r\n  get serverSelectedMdFile(): Observable<MdFile[]> {\r\n    return this._serverSelectedMdFile.asObservable();\r\n  }\r\n\r\n  get selectedMdFileFromToolbar(): Observable<MdFile[]> {\r\n    return this._selectedMdFileFromToolbar.asObservable();\r\n  }\r\n\r\n  get selectedMdFileFromSideNav(): Observable<MdFile> {\r\n    return this._selectedMdFileFromSideNav.asObservable();\r\n  }\r\n\r\n  get selectedDirectoryFromNewDirectory(): Observable<MdFile> {\r\n    return this._selectedDirectoryFromNewDirectory.asObservable();\r\n  }\r\n\r\n\r\n  // breadcrumb\r\n  get navigationArray(): MdFile[] {\r\n    return this._navigationArray;\r\n  }\r\n\r\n  set navigationArray(mdFile: MdFile[]) {\r\n    this._navigationArray = mdFile;\r\n  }\r\n\r\n  moveMdFile(mdFile: MdFile, pathDestination: string) {\r\n    const url = '../api/mdFiles/moveMdFile';\r\n    return this.http.post<any>(url, { mdFile: mdFile, destinationPath:pathDestination });\r\n  }\r\n\r\n  openInheritingTemplateWord(InheringTemplate: string) {\r\n    const url = '../api/mdFiles/openinheritingtemplateWord';\r\n    return this.http.post<any>(url, { templateName: InheringTemplate });\r\n  }\r\n\r\n  opencustomwordtemplate(mdFile: MdFile) {\r\n    const url = '../api/mdFiles/opencustomwordtemplate';\r\n    return this.http.post<any>(url, mdFile);\r\n  }\r\n\r\n  setDocumentSettings(documentDescriptor: IDocumentSettings , mdFile:MdFile) {\r\n    const url = '../api/mdFiles/setdocumentsettings';\r\n    return this.http.post<any>(url, { documentDescriptor, mdFile });\r\n  }\r\n\r\n  getDocumentSettings(mdFile: MdFile): Observable<IDocumentSettings> {\r\n    const url = '../api/mdFiles/getdocumentsettings';\r\n    var params = new HttpParams().set('fullPath', mdFile.fullPath)\r\n    return this.http.get<IDocumentSettings>(url, { params });\r\n  }\r\n\r\n\r\n  // This function adds a new file,\r\n  // looking for the right position in the\r\n  // folder hierarchy.\r\n  // It assumes that all structures are complete,\r\n  // and the only thing to add is the file itself.\r\n  addNewFile(data: MdFile[]) {\r\n    // searching directories    \r\n    const currentItem = data[0];\r\n    \r\n    // Assicuriamoci che le proprietà di indicizzazione siano preservate\r\n    if (currentItem.type === 'mdFile' || currentItem.type === 'mdFileTimer') {\r\n      // Preserva le proprietà esistenti o imposta i default\r\n      currentItem.isIndexed = currentItem.isIndexed ?? true; // Default true per nuovi file\r\n      currentItem.indexingStatus = currentItem.indexingStatus ?? 'completed';\r\n    }\r\n    \r\n    const currentFolder = this.dataStore.mdFiles.find(item => item.fullPath == currentItem.fullPath);\r\n\r\n    if (currentFolder) {\r\n      this.recursiveSearchFolder(data, 0, currentFolder);\r\n    } else {\r\n      // The file is in the root\r\n      const dummyItem = this.dataStore.mdFiles.pop();\r\n      this.dataStore.mdFiles.push(currentItem, dummyItem); // Simplified push operation\r\n      this._mdFiles.next({ ...this.dataStore }.mdFiles); // Simplified object cloning and notification\r\n    }\r\n  }\r\n\r\n\r\n  // This function adds new directories\r\n  // if one or more on the file path are missing.\r\n  // At the end of the process, it will call the classic addNewFile method.\r\n  addNewDirectoryExtended(folders: MdFile[]) {\r\n\r\n    let currentfolder = [];\r\n    folders.forEach((folder, index) => {      \r\n      const dataFound: MdFile[] = [];\r\n      this.recursiveSearch(this.dataStore.mdFiles, folder, dataFound);\r\n      currentfolder.push(folder);\r\n      if (dataFound.length === 0) {        \r\n        this.addNewDirectory(currentfolder);\r\n      }\r\n      \r\n    });\r\n      \r\n       \r\n  }\r\n\r\n  // This function adds a new directory.\r\n  // Assuming that all directories/folders are already present,\r\n  // and there is just one to add consequently to\r\n  // what already exists in the store.\r\n  addNewDirectory(data: MdFile[]) {\r\n    //alert(JSON.stringify(data, null, 2));\r\n    // Initialize the current item and mark it as expandable\r\n    const currentItem = data[0];\r\n    currentItem.expandable = true;\r\n\r\n    // Search for the directory in the current datastore\r\n    const currentFolder = this.dataStore.mdFiles.find(item => item.fullPath == currentItem.fullPath);\r\n\r\n    if (currentFolder) {\r\n      // If found, perform a recursive search to insert the directory\r\n      this.recursiveSearchFolder(data, 0, currentFolder);\r\n    } else {\r\n      // If the directory is in the root, handle the dummy item and reinsert\r\n      const dummyItem = this.dataStore.mdFiles.pop(); // Remove the last item (dummy)\r\n      this.dataStore.mdFiles.push(currentItem, dummyItem); // Add the current item and then the dummy back\r\n\r\n      // Notify subscribers of the update\r\n      this._mdFiles.next({ ...this.dataStore }.mdFiles);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  recursiveSearchFolder(data: MdFile[], i: number, parentFolder: MdFile) {\r\n    \r\n    const currentItem = data[i + 1];\r\n    if (!currentItem) return; // Guard clause\r\n    \r\n    // Assicuriamoci che le proprietà di indicizzazione siano preservate\r\n    if (currentItem.type === 'mdFile' || currentItem.type === 'mdFileTimer') {\r\n      currentItem.isIndexed = currentItem.isIndexed ?? true;\r\n      currentItem.indexingStatus = currentItem.indexingStatus ?? 'completed';\r\n    }\r\n    \r\n    const currentFolder = parentFolder.childrens.find(folder => folder.fullPath == currentItem.fullPath);\r\n\r\n    if (currentFolder) {\r\n      this.recursiveSearchFolder(data, i + 1, currentFolder);\r\n    } else {\r\n      parentFolder.childrens.push(currentItem); // Directly use currentItem\r\n      this._mdFiles.next({ ...this.dataStore }.mdFiles); // Simplified notification\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getShallowStructure(): Observable<MdFile[]> {\r\n    const url = '../api/mdfiles/GetShallowStructure?connectionId=' + this.mdServerMessages.connectionId;\r\n    return this.http.get<MdFile[]>(url);\r\n  }\r\n\r\n  loadAll(callback: (data: any, objectThis: any) => any, objectThis: any) {\r\n    const url = '../api/mdfiles/GetShallowStructure?connectionId=' + this.mdServerMessages.connectionId;    \r\n    return this.http.get<MdFile[]>(url)\r\n      .subscribe(data => {\r\n        // Assicuriamo che tutte le proprietà siano definite fin dall'inizio\r\n        this.initializeIndexingProperties(data);\r\n        this.dataStore.mdFiles = data;        \r\n        this._mdFiles.next([...this.dataStore.mdFiles]);       \r\n        if (callback != null) {\r\n          callback(data, objectThis);\r\n        }\r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch mdfile list\");\r\n        });\r\n  }\r\n\r\n  private initializeIndexingProperties(nodes: any[]): void {\r\n    nodes.forEach(node => {\r\n      // Assicura che le proprietà esistano fin dall'inizio\r\n      if (node.type === 'mdFile' || node.type === 'mdFileTimer') {\r\n        node.isIndexed = node.isIndexed ?? false;\r\n        node.indexingStatus = node.indexingStatus ?? 'idle';\r\n      }\r\n      if (node.childrens && node.childrens.length > 0) {\r\n        this.initializeIndexingProperties(node.childrens);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateFileIndexStatus(path: string, isIndexed: boolean): void {\r\n    // Ricostruisce completamente l'array invece di modificare gli oggetti esistenti\r\n    const updateNodeInArray = (nodes: any[]): any[] => {\r\n      return nodes.map(node => {\r\n        if (node.fullPath === path) {\r\n          // Crea un nuovo oggetto invece di modificare quello esistente\r\n          return {\r\n            ...node,\r\n            isIndexed: isIndexed,\r\n            indexingStatus: isIndexed ? 'completed' : 'idle'\r\n          };\r\n        }\r\n        \r\n        if (node.childrens && node.childrens.length > 0) {\r\n          return {\r\n            ...node,\r\n            childrens: updateNodeInArray(node.childrens)\r\n          };\r\n        }\r\n        \r\n        return node;\r\n      });\r\n    };\r\n\r\n    // Ricostruisce completamente l'array\r\n    this.dataStore.mdFiles = updateNodeInArray(this.dataStore.mdFiles);\r\n    \r\n    // Emette il nuovo array\r\n    this._mdFiles.next([...this.dataStore.mdFiles]);\r\n  }\r\n\r\n  // Forza aggiornamento stato indicizzazione per file rinominati Rule #1\r\n  forceFileAsIndexed(filePath: string): void {\r\n    this.updateFileIndexStatus(filePath, true);\r\n    \r\n    setTimeout(() => {\r\n      this.mdServerMessages.triggerRule1ForceUpdate(filePath);\r\n    }, 100);\r\n  }\r\n\r\n\r\n  loadDynFolders(path: string, level: number) {\r\n    const url = '../api/mdfiles/GetDynFoldersDocument';\r\n    var params = new HttpParams().set('path', path).set('level', String(level));\r\n\r\n    return this.http.get<MdFile[]>(url, { params })\r\n      .subscribe(data => {\r\n        if (this.dataStore.mdDynFolderDocument.length > 0) {          \r\n          //var test = this.dataStore.mdDynFolderDocument.find(_ => _.path == path);\r\n          //test.children = data;\r\n        } else {\r\n          this.dataStore.mdDynFolderDocument = data;\r\n        }\r\n        this._mdDynFolderDocument.next(Object.assign({}, this.dataStore).mdDynFolderDocument);\r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch mdfile list\");\r\n        });\r\n  }\r\n\r\n  loadDocumentFolder(path: string, level: number, typeOfSelection:string): Observable<MdFile[]> {\r\n    let url = '../api/mdfiles/GetDynFoldersDocument';\r\n        \r\n    if (typeOfSelection===\"FoldersAndFiles\") {\r\n      url = '../api/mdfiles/GetDynFoldersAndFilesDocument';\r\n    }\r\n    console.log(url);\r\n    var params = new HttpParams().set('path', path).set('level', String(level));\r\n    return this.http.get<MdFile[]>(url, { params });\r\n  }\r\n\r\n\r\n\r\n  loadPublishNodes(path: string, level: number): Observable<MdFile[]> {\r\n    const url = '../api/mdPublishNodes';\r\n    var params = new HttpParams().set('path', path).set('level', String(level));\r\n    return this.http.get<MdFile[]>(url, { params });\r\n  }\r\n\r\n\r\n  GetHtml(path: string) { //, currentFile: MdFile\r\n    const url = '../api/mdexplorer/' + path;\r\n    return this.http.get(url, { responseType: 'text' })//, currentFile      \r\n  }\r\n\r\n  getLandingPage() {\r\n    const url = '../api/mdfiles/GetLandingPage';\r\n    return this.http.get<MdFile>(url);\r\n  }\r\n\r\n  SetLandingPage(file: MdFile) {\r\n    const url = '../api/mdfiles/SetLandingPage';\r\n    return this.http.post<MdFile>(url, file);\r\n  }\r\n  openFolderOnFileExplorer(file: MdFile) {\r\n    console.log('[MdFileService] openFolderOnFileExplorer() called');\r\n    console.log('[MdFileService] file:', file);\r\n    console.log('[MdFileService] file.fullPath:', file.fullPath);\r\n    \r\n    const url = '../api/mdfiles/OpenFolderOnFileExplorer';\r\n    console.log('[MdFileService] POST to:', url);\r\n    \r\n    return this.http.post<MdFile>(url, file).pipe(\r\n      tap(response => {\r\n        console.log('[MdFileService] Response received:', response);\r\n      }),\r\n      catchError(error => {\r\n        console.error('[MdFileService] Error in openFolderOnFileExplorer:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteFile(file: MdFile) {\r\n    const url = '../api/mdfiles/DeleteFile';\r\n    return this.http.post<MdFile>(url, file);\r\n      \r\n\r\n      //this._mdFiles.next(Object.assign({}, this.dataStore).mdFiles);\r\n    \r\n  }\r\n\r\n  //Minimum information to set\r\n  // 1. fullPath:ex: \"C:\\Users\\Carlo\\Documents\\2-personale\\sviluppo\\MdExplorer\\UnitTestMdExplorer\\RockSolidEdition\\using-chatGPT\\eargaer.md\"\r\n  // 2. level: not important\r\n\r\n  recursiveDeleteFileFromDataStore(fileToFind: MdFile) {\r\n    \r\n    const dataFound: MdFile[] = [];\r\n    this.recursiveSearch(this.dataStore.mdFiles, fileToFind, dataFound);\r\n\r\n    if (dataFound.length === 1) {\r\n      const dataIndex = this.dataStore.mdFiles.indexOf(dataFound[0]);\r\n      if (dataIndex > -1) {\r\n        this.dataStore.mdFiles.splice(dataIndex, 1);\r\n      }\r\n    } if (dataFound.length > 1) {\r\n      //let cursor = this.dataStore.mdFiles;\r\n      let currentFolder: MdFile[] = this.dataStore.mdFiles;\r\n      for (var i = dataFound.length -1 ; i >0 ; i--) {\r\n        currentFolder = currentFolder[currentFolder.indexOf(dataFound[i])].childrens;\r\n      }\r\n      currentFolder.splice(currentFolder.indexOf(dataFound[0]), 1);\r\n    }\r\n    this._mdFiles.next({ ...this.dataStore }.mdFiles); \r\n\r\n  }\r\n\r\n  recursiveSearchForShowData(fileToFind):MdFile[] {\r\n    let dataFound: MdFile[] = [];\r\n    this.recursiveSearch(this.dataStore.mdFiles, fileToFind, dataFound);\r\n    return dataFound;\r\n  }\r\n\r\n\r\n  CreateNewDirectoryEx(path: string, directoryName: string, directoryLevel: number) {\r\n    const url = '../api/mdfiles/CreateNewDirectoryEx';\r\n    var newData = {\r\n      directoryPath: path,\r\n      directoryName: directoryName,\r\n      directoryLevel: directoryLevel,\r\n    }\r\n    return this.http.post<MdFile>(url, newData);\r\n  }\r\n\r\n\r\n  CreateNewDirectory(path: string, directoryName: string, directoryLevel: number) {\r\n    const url = '../api/mdfiles/CreateNewDirectory';\r\n    var newData = {\r\n      directoryPath: path,\r\n      directoryName: directoryName,\r\n      directoryLevel: directoryLevel,\r\n    }\r\n    return this.http.post<MdFile[]>(url, newData);\r\n  }\r\n\r\n  RenameDirectory(path: string, directoryName: string, directoryLevel: number) {\r\n    const url = '../api/mdfiles/RenameDirectory';\r\n    var newData = {\r\n      directoryPath: path,\r\n      directoryName: directoryName,\r\n      directoryLevel: directoryLevel,\r\n    }\r\n    return this.http.post<MdFile[]>(url, newData);\r\n  }\r\n  pasteFromClipboard(node: any) {\r\n    const url = '../api/mdfiles/pasteFromClipboard';\r\n    return this.http.post<any>(url, node);\r\n  }\r\n\r\n\r\n  addExistingFileToMDEProject(node: MdFile,path:String) {\r\n    const url = '../api/mdfiles/addExistingFileToMDEProject';\r\n    return this.http.post<string>(url, { mdFile: node, fullPath:path });\r\n  }\r\n\r\n  getTextFromClipboard() {\r\n    const url = '../api/mdfiles/getTextFromClipboard';\r\n    return this.http.get<any>(url)    \r\n  }\r\n\r\n  \r\n\r\n\r\n  cloneTimerDocument(node: MdFile) {\r\n    const url = '../api/mdfiles/CloneTimerMd';\r\n    return this.http.post<MdFile[]>(url, node);\r\n  }\r\n\r\n  CreateNewMd(path: string, title: string, directoryLevel: number, documentTypeId: number, documentType: string) {\r\n    const url = '../api/mdfiles/CreateNewMd';\r\n    var newData = {\r\n      directoryPath: path,\r\n      title: title,\r\n      directoryLevel: directoryLevel,\r\n      documentTypeId: documentTypeId,\r\n      documentType: documentType\r\n    }\r\n    return this.http.post<MdFile[]>(url, newData);\r\n  }\r\n\r\n\r\n  //fileFoundMd: boolean = false;\r\n\r\n\r\n  /**\r\n   * Funzione di sostituzione di un nodo, con un altro\r\n   * @param oldFile\r\n   * @param newFile\r\n   */\r\n  changeDataStoreMdFiles(oldFile: MdFile, newFile: MdFile) {\r\n    var returnFound = this.searchMdFileIntoDataStore(this.dataStore.mdFiles, oldFile);\r\n    var leaf = returnFound[0];\r\n    \r\n    if (!leaf) {\r\n      console.error('❌ [Service] File non trovato nel datastore:', oldFile.name);\r\n      return;\r\n    }\r\n    \r\n    // Aggiorna le proprietà del file\r\n    leaf.name = newFile.name;\r\n    leaf.fullPath = newFile.fullPath;\r\n    leaf.path = newFile.path;\r\n    leaf.relativePath = newFile.relativePath;\r\n    \r\n    // Per file rinominati via Rule #1, forza come indicizzato\r\n    leaf.isIndexed = true;\r\n    leaf.indexingStatus = 'completed';\r\n    \r\n    // Forza nuova referenza per triggerare OnPush change detection\r\n    this._mdFiles.next([...this.dataStore.mdFiles]);\r\n    this._serverSelectedMdFile.next([...returnFound]);\r\n    \r\n    // Notifica il tree component per aggiornare il Set di tracking\r\n    this.mdServerMessages.triggerRule1ForceUpdate(leaf.fullPath);\r\n  }\r\n\r\n  setSelectedMdFileFromSideNav(selectedFile: MdFile) {\r\n    console.log('[MdFileService] setSelectedMdFileFromSideNav called with:', selectedFile);\r\n    console.log('[MdFileService] _selectedMdFileFromSideNav value before:', this._selectedMdFileFromSideNav.value);\r\n    console.log('[MdFileService] _selectedMdFileFromSideNav has observers:', this._selectedMdFileFromSideNav.observers?.length || 0);\r\n    this._selectedMdFileFromSideNav.next(selectedFile);\r\n    console.log('[MdFileService] _selectedMdFileFromSideNav value after:', this._selectedMdFileFromSideNav.value);\r\n  }\r\n\r\n  setSelectedDirectoryFromNewDirectory(selectedDirectory: MdFile) {\r\n    this._selectedDirectoryFromNewDirectory.next(selectedDirectory);\r\n  }\r\n   \r\n  setSelectedMdFileFromToolbar(selectedFile: MdFile) {\r\n    let returnFound = this.searchMdFileIntoDataStore(this.dataStore.mdFiles, selectedFile);\r\n    this._selectedMdFileFromToolbar.next(returnFound);\r\n  }\r\n\r\n  setSelectedMdFileFromServer(selectedFile: MdFile) {    \r\n    var returnFound = this.searchMdFileIntoDataStore(this.dataStore.mdFiles, selectedFile);\r\n    this._serverSelectedMdFile.next(returnFound);\r\n  }\r\n\r\n  setSelectionMdFile(selectedFile: MdFile[]) {\r\n    this._serverSelectedMdFile.next(selectedFile);\r\n  }\r\n\r\n\r\n  getMdFileFromDataStore(selectedFile: MdFile): MdFile {\r\n    var returnFound = this.searchMdFileIntoDataStore(this.dataStore.mdFiles, selectedFile);\r\n    return returnFound[0];\r\n  }\r\n\r\n  searchMdFileIntoDataStore(arrayMd: MdFile[], FileToFind: MdFile): MdFile[] {\r\n    //this.fileFoundMd = false;\r\n    var arrayFound: MdFile[] = [];\r\n    this.recursiveSearch(arrayMd, FileToFind, arrayFound);\r\n    return arrayFound;\r\n  }\r\n\r\n\r\n  recursiveSearch(arrayMd: MdFile[], fileToFind: MdFile, arrayFound: MdFile[]): boolean {\r\n    if (arrayMd.length === 0) {\r\n      return false;\r\n    }    \r\n    const thatFile = arrayMd.find(item => item.fullPath.toLowerCase() === fileToFind.fullPath.toLowerCase());\r\n\r\n    if (!thatFile) {\r\n      return arrayMd.some(item => {\r\n        const found = this.recursiveSearch(item.childrens, fileToFind, arrayFound);\r\n        if (found) {\r\n          arrayFound.push(item);\r\n        }\r\n        return found;\r\n      });\r\n    } else {\r\n      arrayFound.push(thatFile);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // New methods for file explorer functionality\r\n  getSpecialFolders(): Observable<SpecialFolder[]> {\r\n    const url = '../api/mdfiles/GetSpecialFolders';\r\n    return this.http.get<SpecialFolder[]>(url);\r\n  }\r\n\r\n  getDrives(): Observable<Drive[]> {\r\n    const url = '../api/mdfiles/GetDrives';\r\n    return this.http.get<Drive[]>(url);\r\n  }\r\n\r\n  getNetworkShares(): Observable<any[]> {\r\n    const url = '../api/mdfiles/GetNetworkShares';\r\n    return this.http.get<any[]>(url);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport interface INewFileCreated {\r\n  newName: string;\r\n  newPath: string;\r\n  newLevel: number;\r\n  expandable: boolean;\r\n  relativePath: boolean;\r\n}\r\n","import { CollectionViewer, DataSource, SelectionChange } from '@angular/cdk/collections';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, Inject, Injectable, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { BehaviorSubject, merge, Observable, forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NewDirectoryComponent } from '../new-directory/new-directory.component';\r\nimport { IFileInfoNode } from '../../../md-explorer/models/IFileInfoNode';\r\nimport { MdFile } from '../../../md-explorer/models/md-file';\r\nimport { MdFileService } from '../../../md-explorer/services/md-file.service';\r\nimport { ShowFileMetadata } from './show-file-metadata';\r\nimport { SpecialFolder, Drive, FileExplorerState } from './file-explorer.models';\r\n\r\n\r\n\r\n// IFileInfoNode è interfaccia\r\n// MdFile è la classe -> DynamicFlatNode\r\n\r\n\r\n/**\r\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\r\n * the descendants data from the database.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class DynamicDatabase {\r\n\r\n  constructor(private mdFileService: MdFileService,) {\r\n    this.mdFileService.loadDynFolders('root', 1);\r\n\r\n    var md1 = new MdFile('12Folder', 'c:primoFolder', 0, true);\r\n    var md2 = new MdFile('2Folder', 'c:primoFoldersottoFolder', 1, true);\r\n    var md3 = new MdFile('3Folder', 'c:primoFoldersottoFoldersottoFolder', 2, true);\r\n    var md4 = new MdFile('4Folder', 'c:primoFoldersottoFoldersottoFolder', 2, true);\r\n    var md5 = new MdFile('5Folder', 'c:cuccu', 3, false);\r\n    this.dataMap.set(md1, [md2]);\r\n    this.dataMap.set(md2, [md3, md4]);\r\n    //this.dataMap.set(md3, [md4]);\r\n    this.dataMap.set(md4, [md5]);\r\n\r\n\r\n    var test = this.dataMap.get(md1);\r\n    this.rootLevelNodes = [md1];\r\n  }\r\n\r\n  dataMap = new Map<MdFile, MdFile[]>();\r\n  rootLevelNodes: MdFile[];\r\n\r\n  /** Initial data from database */\r\n  initialData(): MdFile[] {\r\n    return this.rootLevelNodes;\r\n  }\r\n\r\n  getChildren(node: MdFile): MdFile[] | undefined {\r\n\r\n    var test = this.dataMap.get(node);\r\n    return test;\r\n  }\r\n\r\n  isExpandable(node: MdFile): boolean {\r\n    return this.dataMap.has(node);\r\n  }\r\n}\r\n\r\nclass DynamicDataSource implements DataSource<MdFile> {\r\n\r\n  dataChange = new BehaviorSubject<MdFile[]>([]);\r\n\r\n  get data(): MdFile[] { return this.dataChange.value; }\r\n  set data(value: MdFile[]) {\r\n    this._treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private _treeControl: FlatTreeControl<MdFile>,\r\n    private _database: DynamicDatabase,\r\n    private _mdFileService: MdFileService,\r\n    private baseStart: string,\r\n    private typeOfSelection: string) {\r\n    this.data = _database.initialData();\r\n    console.log(\"constructor-> this.typeOfSelection \" + this.typeOfSelection);\r\n    this._mdFileService.loadDocumentFolder(baseStart, 0, this.typeOfSelection).subscribe(_ => {// 'root'\r\n      this.data = _;\r\n    });\r\n\r\n\r\n  }\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<MdFile[]> {\r\n    this._treeControl.expansionModel.changed.subscribe(change => {\r\n      if ((change as SelectionChange<MdFile>).added ||\r\n        (change as SelectionChange<MdFile>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<MdFile>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\r\n\r\n  disconnect(collectionViewer: CollectionViewer): void { }\r\n\r\n  /** Handle expand/collapse behaviors */\r\n  handleTreeControl(change: SelectionChange<MdFile>) {\r\n    if (change.added) {\r\n      change.added.forEach(node => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the node, remove from display list\r\n   */\r\n  toggleNode(node: MdFile, expand: boolean) {\r\n    \r\n    this._mdFileService.loadDocumentFolder(node.path, node.level + 1, this.typeOfSelection).subscribe(_ => {\r\n\r\n      const children = _;\r\n      const index = this.data.indexOf(node);\r\n\r\n      if (!children || index < 0) { // If no children, or cannot find the node, no op\r\n        return;\r\n      }\r\n\r\n      node.isLoading = true;\r\n\r\n      setTimeout(() => {\r\n        if (expand) {\r\n          const nodes = children; // punto per fare chiamata remota\r\n          this.data.splice(index + 1, 0, ...nodes);\r\n        } else {\r\n          let count = 0;\r\n          for (let i = index + 1; i < this.data.length\r\n            && this.data[i].level > node.level; i++, count++) { }\r\n          this.data.splice(index + 1, count);\r\n        }\r\n\r\n        // notify the change\r\n        this.dataChange.next(this.data);\r\n        node.isLoading = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  refreshNode(node: MdFile) {\r\n    \r\n    this._mdFileService.loadDocumentFolder(node.path, node.level + 1,this.typeOfSelection).subscribe(children => {\r\n      const index = this.data.indexOf(node);\r\n      let count = 0;\r\n      for (let i = index + 1; i < this.data.length\r\n        && this.data[i].level > node.level; i++, count++) { }\r\n      this.data.splice(index + 1, count); // toglie i nodi figlio\r\n      const nodes = children;\r\n      this.data.splice(index + 1, 0, ...nodes); // mette i nuovi nodi\r\n      this.dataChange.next(this.data);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-show-file-system',\r\n  templateUrl: './show-file-system.component.html',\r\n  styleUrls: ['./show-file-system.component.scss']\r\n})\r\nexport class ShowFileSystemComponent implements OnInit {\r\n\r\n  public title: string = \"Document's Folder\";\r\n\r\n  // Existing properties for context menu\r\n  menuTopLeftPosition = { x: 0, y: 0 }\r\n  @ViewChild(MatMenuTrigger, { static: true }) matMenuTrigger: MatMenuTrigger;\r\n  activeNode: any;\r\n  folder: {\r\n    name: string,\r\n    path: string\r\n  }\r\n\r\n  // New properties for file explorer\r\n  specialFolders: SpecialFolder[] = [];\r\n  drives: Drive[] = [];\r\n  networkShares: any[] = [];\r\n  currentPath: string = '';\r\n  displayPath: string = '';\r\n  currentItems: MdFile[] = [];\r\n  filteredItems: MdFile[] = [];\r\n  searchFilter: string = '';\r\n  navigationHistory: string[] = [];\r\n  isLoading: boolean = false;\r\n\r\n  // Performance optimization: caching\r\n  private folderCache = new Map<string, { data: MdFile[], timestamp: number }>();\r\n  private readonly CACHE_DURATION = 30000; // 30 seconds\r\n\r\n  // Legacy properties (manteniamo per compatibilità)\r\n  getLevel = (node: MdFile) => node.level;\r\n  isExpandable = (node: MdFile) => node.expandable;\r\n  treeControl: FlatTreeControl<MdFile>;\r\n  dataSource: DynamicDataSource;\r\n  hasChild = (_: number, _nodeData: MdFile) => _nodeData.expandable;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public baseStart: ShowFileMetadata,\r\n    private database: DynamicDatabase,\r\n    public dialog: MatDialog,\r\n    private mdFileService: MdFileService,\r\n    private dialogRef: MatDialogRef<ShowFileSystemComponent>) {\r\n    \r\n    // Inizializza legacy tree control per compatibilità\r\n    this.treeControl = new FlatTreeControl<MdFile>(this.getLevel, this.isExpandable);\r\n    let start = this.baseStart.start == null ? 'root' : this.baseStart.start;\r\n    this.title = this.baseStart.title;\r\n    this.dataSource = new DynamicDataSource(this.treeControl, database, mdFileService, start, baseStart.typeOfSelection);\r\n  }\r\n\r\n  createDirectoryOn(node: MdFile) {\r\n    if (node == null) {\r\n      node = new MdFile(\"root\", \"root\", 0, false);\r\n      node.fullPath = \"root\";\r\n    }\r\n    let dialogRef = this.dialog.open(NewDirectoryComponent, {\r\n      width: '300px',\r\n      data: node,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(_ => {\r\n      this.dataSource.refreshNode(node);\r\n    });\r\n\r\n  }\r\n\r\n  onRightClick(event: MouseEvent, item) {\r\n    // preventDefault avoids to show the visualization of the right-click menu of the browser\r\n    event.preventDefault();\r\n    if (item == null) {\r\n      item = new MdFile(\"root\", \"root\", 0, false);\r\n      item.fullPath = \"root\";\r\n    }\r\n    // we record the mouse position in our object\r\n    this.menuTopLeftPosition.x = event.clientX;\r\n    this.menuTopLeftPosition.y = event.clientY;\r\n\r\n    // we open the menu\r\n    // we pass to the menu the information about our object\r\n    this.matMenuTrigger.menuData = { item: item }\r\n\r\n    // we open the menu\r\n    this.matMenuTrigger.openMenu();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.folder = { name: \"<select project>\", path: \"\" };\r\n    this.filteredItems = [];\r\n    this.loadInitialData();\r\n  }\r\n\r\n  private loadInitialData(): void {\r\n    this.isLoading = true;\r\n\r\n    // Carica special folders, drives e network shares\r\n    forkJoin({\r\n      folders: this.mdFileService.getSpecialFolders(),\r\n      drives: this.mdFileService.getDrives(),\r\n      networkShares: this.mdFileService.getNetworkShares()\r\n    }).subscribe({\r\n      next: ({folders, drives, networkShares}) => {\r\n        this.specialFolders = folders;\r\n        this.drives = drives;\r\n        this.networkShares = networkShares;\r\n\r\n        // Naviga alla cartella iniziale\r\n        const initialPath = this.baseStart.start === 'root' ? 'project' : this.baseStart.start;\r\n        const initialFolder = this.specialFolders.find(f => f.name.toLowerCase() === initialPath?.toLowerCase());\r\n        if (initialFolder) {\r\n          this.navigateToFolder(initialFolder.path);\r\n        } else {\r\n          this.navigateToFolder(this.specialFolders[0]?.path || '');\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading initial data:', error);\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public navigateToFolder(path: string): void {\r\n    if (!path || path === this.currentPath) return;\r\n\r\n    // Aggiungi il path corrente alla history\r\n    if (this.currentPath) {\r\n      this.navigationHistory.push(this.currentPath);\r\n    }\r\n\r\n    this.currentPath = path;\r\n    this.displayPath = this.formatDisplayPath(path);\r\n    this.loadFolderContent(path);\r\n  }\r\n\r\n  public navigateUp(): void {\r\n    if (this.navigationHistory.length > 0) {\r\n      const previousPath = this.navigationHistory.pop()!;\r\n      this.currentPath = previousPath;\r\n      this.displayPath = this.formatDisplayPath(previousPath);\r\n      this.loadFolderContent(previousPath);\r\n    }\r\n  }\r\n\r\n  private loadFolderContent(path: string): void {\r\n    // Check cache first\r\n    const cached = this.folderCache.get(path);\r\n    const now = Date.now();\r\n    \r\n    if (cached && (now - cached.timestamp) < this.CACHE_DURATION) {\r\n      this.currentItems = cached.data;\r\n      this.applyFilter(); // Apply current filter to cached data\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.currentItems = [];\r\n\r\n    this.mdFileService.loadDocumentFolder(path, 0, this.baseStart.typeOfSelection)\r\n      .subscribe({\r\n        next: (items) => {\r\n          const data = items || [];\r\n          this.currentItems = data;\r\n          this.applyFilter(); // Apply current filter to new data\r\n          \r\n          // Cache the result\r\n          this.folderCache.set(path, { data, timestamp: now });\r\n          \r\n          // Clean old cache entries (keep cache size manageable)\r\n          this.cleanOldCacheEntries();\r\n          \r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading folder content:', error);\r\n          this.currentItems = [];\r\n          this.filteredItems = [];\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  private cleanOldCacheEntries(): void {\r\n    const now = Date.now();\r\n    for (const [key, value] of this.folderCache.entries()) {\r\n      if ((now - value.timestamp) > this.CACHE_DURATION) {\r\n        this.folderCache.delete(key);\r\n      }\r\n    }\r\n    \r\n    // Limit cache size to prevent memory issues\r\n    if (this.folderCache.size > 50) {\r\n      const entries = Array.from(this.folderCache.entries());\r\n      entries.sort((a, b) => a[1].timestamp - b[1].timestamp);\r\n      \r\n      // Keep only the 30 most recent entries\r\n      for (let i = 0; i < entries.length - 30; i++) {\r\n        this.folderCache.delete(entries[i][0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private formatDisplayPath(path: string): string {\r\n    // Accorcia il path per la visualizzazione\r\n    if (path.length > 50) {\r\n      return '...' + path.substring(path.length - 47);\r\n    }\r\n    return path;\r\n  }\r\n\r\n  public onItemClick(item: MdFile): void {\r\n    if (this.baseStart.typeOfSelection === 'FoldersAndFiles' && item.type === 'folder') {\r\n      // Per selezione file, le cartelle servono solo per navigare\r\n      // Non selezionare la cartella\r\n      return;\r\n    }\r\n    \r\n    this.activeNode = item;\r\n    \r\n    if (item.type === 'folder') {\r\n      // Per le cartelle, seleziona ma non naviga (single click)\r\n      this.getFolder(item);\r\n    } else {\r\n      // Per i file, seleziona direttamente\r\n      this.getFolder(item);\r\n    }\r\n  }\r\n\r\n  public onItemDoubleClick(item: MdFile): void {\r\n    if (item.type === 'folder') {\r\n      // Double click su cartella: naviga\r\n      this.navigateToFolder(item.fullPath || item.path);\r\n    }\r\n  }\r\n\r\n  public getFolder(node: IFileInfoNode) {\r\n    this.folder.name = node.name;\r\n    this.folder.path = node.fullPath || node.path;\r\n  }\r\n\r\n  // Legacy method mantained for compatibility\r\n  public openFolderOn(item: any): void {\r\n    if (item && item.fullPath) {\r\n      this.mdFileService.openFolderOnFileExplorer(item).subscribe({\r\n        next: () => console.log('Folder opened in explorer'),\r\n        error: (error) => console.error('Error opening folder:', error)\r\n      });\r\n    }\r\n  }\r\n\r\n  public closeDialog() {\r\n    // Determina quale path usare in base al tipo di selezione\r\n    let selectedPath: string;\r\n    \r\n    if (this.baseStart.typeOfSelection === 'FoldersAndFiles') {\r\n      // Per file: usa sempre folder.path (che viene aggiornato quando si seleziona un file)\r\n      selectedPath = this.folder.path;\r\n    } else {\r\n      // Per cartelle: priorità a folder.path (cartella selezionata), \r\n      // altrimenti usa currentPath (cartella in cui stiamo navigando)\r\n      selectedPath = this.folder.path || this.currentPath;\r\n    }\r\n    \r\n    this.dialogRef.close({ event: 'open', data: selectedPath });\r\n  }\r\n\r\n  // TrackBy functions for performance optimization\r\n  public trackByPath(index: number, item: SpecialFolder | Drive): string {\r\n    return item.path;\r\n  }\r\n\r\n  public trackByItem(index: number, item: MdFile): string {\r\n    return item.fullPath || item.path || item.name;\r\n  }\r\n\r\n  // Filter functionality\r\n  public onFilterChange(event: any): void {\r\n    this.searchFilter = event.target.value;\r\n    this.applyFilter();\r\n  }\r\n\r\n  private applyFilter(): void {\r\n    let filtered = [...this.currentItems];\r\n    \r\n    // Filtro per nome\r\n    if (this.searchFilter && this.searchFilter.trim() !== '') {\r\n      const filter = this.searchFilter.toLowerCase().trim();\r\n      filtered = filtered.filter(item => \r\n        item.name.toLowerCase().includes(filter)\r\n      );\r\n    }\r\n    \r\n    // Filtro per estensioni (solo se specificato e per selezione file)\r\n    if (this.baseStart.typeOfSelection === 'FoldersAndFiles' \r\n        && this.baseStart.fileExtensions \r\n        && this.baseStart.fileExtensions.length > 0) {\r\n      filtered = filtered.filter(item => {\r\n        if (item.type === 'folder') return true; // Sempre mostra cartelle per navigazione\r\n        \r\n        const extension = this.getFileExtension(item.name);\r\n        return this.baseStart.fileExtensions.includes(extension);\r\n      });\r\n    }\r\n    \r\n    this.filteredItems = filtered;\r\n  }\r\n  \r\n  private getFileExtension(filename: string): string {\r\n    const lastDot = filename.lastIndexOf('.');\r\n    return lastDot > 0 ? filename.substring(lastDot) : '';\r\n  }\r\n\r\n  // Selection button text\r\n  public getSelectionButtonText(): string {\r\n    // Prima controlla se c'è un testo personalizzato\r\n    if (this.baseStart.buttonText) {\r\n      return this.baseStart.buttonText;\r\n    }\r\n    \r\n    // Altrimenti usa il default basato sul tipo\r\n    return this.baseStart.typeOfSelection === 'FoldersAndFiles' \r\n      ? 'Select file' \r\n      : 'Select folder';\r\n  }\r\n\r\n  // Validation for selection\r\n  public canSelectItem(): boolean {\r\n    if (this.baseStart.typeOfSelection === 'FoldersAndFiles') {\r\n      // Solo file possono essere selezionati\r\n      return this.activeNode && this.activeNode.type !== 'folder' && !!this.folder.path;\r\n    }\r\n    \r\n    // Per selezione cartelle: può selezionare la cartella corrente o una cartella selezionata\r\n    // Se c'è una cartella selezionata (activeNode), usa quella\r\n    // Altrimenti usa la cartella corrente in cui si sta navigando\r\n    if (this.activeNode && this.activeNode.type === 'folder') {\r\n      return true;\r\n    }\r\n    \r\n    // Se non c'è activeNode ma stiamo navigando in una cartella, possiamo selezionare la cartella corrente\r\n    return !!(this.currentPath && this.currentPath.length > 0);\r\n  }\r\n\r\n  // Check if item is selectable\r\n  public isItemSelectable(item: MdFile): boolean {\r\n    if (this.baseStart.typeOfSelection === 'FoldersAndFiles') {\r\n      return item.type !== 'folder';\r\n    }\r\n    return item.type === 'folder';\r\n  }\r\n\r\n  // Accessibility helper\r\n  public getItemAriaLabel(item: MdFile): string {\r\n    const type = item.type === 'folder' ? 'folder' : 'file';\r\n    return `${type} ${item.name}. ${item.type === 'folder' ? 'Double click to open' : 'Click to select'}`;\r\n  }\r\n\r\n}\r\n","<!-- Context menu (manteniamo quello esistente) -->\r\n<div style=\"visibility: hidden; position: fixed;\"\r\n     [style.left.px]=\"menuTopLeftPosition.x\"\r\n     [style.top.px]=\"menuTopLeftPosition.y\"\r\n     [matMenuTriggerFor]=\"rightMenu\"></div>\r\n\r\n<mat-menu #rightMenu=\"matMenu\">\r\n  <ng-template matMenuContent let-item=\"item\">\r\n    <div>\r\n      <button mat-icon-button matTooltip=\"create new folder\" color=\"primary\" (click)=\"createDirectoryOn(item)\">\r\n        <mat-icon>create_new_folder</mat-icon>\r\n      </button>\r\n    </div>\r\n    <button mat-menu-item (click)=\"openFolderOn(item)\">\r\n      <mat-icon>folder_open</mat-icon>\r\n      <span><b style=\"color:violet\">Open</b> directory on <b style=\"color:blue\">File Explorer</b></span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n\r\n<!-- Main container a due colonne -->\r\n<div class=\"file-explorer-container\">\r\n  <div class=\"explorer-header\">\r\n    <h1 class=\"explorer-title\">{{title}}</h1>\r\n    <div class=\"filter-section\">\r\n      <mat-form-field appearance=\"outline\" class=\"filter-input\">\r\n        <mat-label>Filter files</mat-label>\r\n        <input matInput \r\n               placeholder=\"Type to filter...\" \r\n               [(ngModel)]=\"searchFilter\" \r\n               (input)=\"onFilterChange($event)\">\r\n        <mat-icon matSuffix>search</mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"explorer-content\">\r\n    <!-- Colonna sinistra: Navigazione rapida -->\r\n    <div class=\"left-panel\">\r\n      <!-- Quick access section -->\r\n      <div class=\"quick-access-section\">\r\n        <h3 class=\"section-title\">Quick Access</h3>\r\n        <div class=\"nav-items\" role=\"navigation\" aria-label=\"Quick access folders\">\r\n          <div class=\"nav-item\" \r\n               *ngFor=\"let folder of specialFolders; trackBy: trackByPath\" \r\n               (click)=\"navigateToFolder(folder.path)\"\r\n               (keydown.enter)=\"navigateToFolder(folder.path)\"\r\n               (keydown.space)=\"navigateToFolder(folder.path)\"\r\n               [class.active]=\"currentPath === folder.path\"\r\n               tabindex=\"0\"\r\n               role=\"button\"\r\n               [attr.aria-label]=\"'Navigate to ' + folder.name\">\r\n            <mat-icon class=\"nav-icon\" aria-hidden=\"true\">{{folder.icon}}</mat-icon>\r\n            <span class=\"nav-label\">{{folder.name}}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Drives section -->\r\n      <div class=\"drives-section\">\r\n        <h3 class=\"section-title\">This PC</h3>\r\n        <div class=\"nav-items\" role=\"navigation\" aria-label=\"Available drives\">\r\n          <div class=\"nav-item\" \r\n               *ngFor=\"let drive of drives; trackBy: trackByPath\"\r\n               (click)=\"navigateToFolder(drive.path)\"\r\n               (keydown.enter)=\"navigateToFolder(drive.path)\"\r\n               (keydown.space)=\"navigateToFolder(drive.path)\"\r\n               [class.active]=\"currentPath === drive.path\"\r\n               tabindex=\"0\"\r\n               role=\"button\"\r\n               [attr.aria-label]=\"'Navigate to drive ' + drive.label\">\r\n            <mat-icon class=\"nav-icon\" aria-hidden=\"true\">{{drive.icon}}</mat-icon>\r\n            <span class=\"nav-label\">{{drive.label}} ({{drive.name}})</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Network shares section -->\r\n      <div class=\"network-section\" *ngIf=\"networkShares && networkShares.length > 0\">\r\n        <h3 class=\"section-title\">Network</h3>\r\n        <div class=\"nav-items\" role=\"navigation\" aria-label=\"Network shares\">\r\n          <div class=\"nav-item\" \r\n               *ngFor=\"let share of networkShares; trackBy: trackByPath\"\r\n               (click)=\"navigateToFolder(share.path)\"\r\n               (keydown.enter)=\"navigateToFolder(share.path)\"\r\n               (keydown.space)=\"navigateToFolder(share.path)\"\r\n               [class.active]=\"currentPath === share.path\"\r\n               tabindex=\"0\"\r\n               role=\"button\"\r\n               [attr.aria-label]=\"'Navigate to network share ' + share.name\">\r\n            <mat-icon class=\"nav-icon\" aria-hidden=\"true\">{{share.icon}}</mat-icon>\r\n            <span class=\"nav-label\">{{share.name}}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Colonna destra: Contenuto -->\r\n    <div class=\"right-panel\">\r\n      <!-- Breadcrumb -->\r\n      <div class=\"breadcrumb\">\r\n        <button mat-icon-button \r\n                (click)=\"navigateUp()\" \r\n                [disabled]=\"navigationHistory.length === 0\"\r\n                matTooltip=\"Go back\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <span class=\"current-path\">{{displayPath}}</span>\r\n      </div>\r\n      \r\n      <!-- Loading indicator -->\r\n      <div class=\"loading-indicator\" *ngIf=\"isLoading\">\r\n        <mat-spinner diameter=\"30\"></mat-spinner>\r\n        <span>Loading...</span>\r\n      </div>\r\n      \r\n      <!-- File/Folder list -->\r\n      <div class=\"content-list\" \r\n           *ngIf=\"!isLoading\" \r\n           (contextmenu)=\"onRightClick($event, null)\"\r\n           role=\"grid\"\r\n           aria-label=\"Folder contents\">\r\n        <div class=\"content-item\" \r\n             *ngFor=\"let item of filteredItems; trackBy: trackByItem\"\r\n             (click)=\"onItemClick(item)\"\r\n             (dblclick)=\"onItemDoubleClick(item)\"\r\n             (keydown.enter)=\"onItemDoubleClick(item)\"\r\n             (keydown.space)=\"onItemClick(item)\"\r\n             (contextmenu)=\"onRightClick($event, item)\"\r\n             [class.selected]=\"activeNode === item\"\r\n             [class.not-selectable]=\"!isItemSelectable(item)\"\r\n             tabindex=\"0\"\r\n             role=\"gridcell\"\r\n             [attr.aria-label]=\"getItemAriaLabel(item)\">\r\n          <mat-icon class=\"item-icon\" aria-hidden=\"true\">\r\n            {{item.type === 'folder' ? 'folder' : (item.type === 'file' ? 'insert_drive_file' : 'text_snippet')}}\r\n          </mat-icon>\r\n          <span class=\"item-name\">{{item.name}}</span>\r\n        </div>\r\n        \r\n        <!-- Empty state -->\r\n        <div class=\"empty-state\" *ngIf=\"filteredItems.length === 0 && !isLoading\">\r\n          <mat-icon>{{searchFilter ? 'search_off' : 'folder_open'}}</mat-icon>\r\n          <p>{{searchFilter ? 'No files match your filter' : 'This folder is empty'}}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Bottom section: Selected folder info and action button -->\r\n  <div class=\"bottom-panel\">\r\n    <div class=\"selected-folder-info\">\r\n      <mat-card-title *ngIf=\"baseStart.typeOfSelection === 'Folders'\">\r\n        {{folder.name || (currentPath ? 'Current folder' : 'No folder selected')}}\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"baseStart.typeOfSelection !== 'Folders'\">\r\n        {{folder.name || 'No file selected'}}\r\n      </mat-card-title>\r\n      <mat-card-subtitle>{{folder.path || currentPath}}</mat-card-subtitle>\r\n    </div>\r\n    <div class=\"action-buttons\">\r\n      <button mat-stroked-button color=\"primary\" \r\n              (click)=\"closeDialog()\" \r\n              [disabled]=\"!canSelectItem()\">\r\n        {{getSelectionButtonText()}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}