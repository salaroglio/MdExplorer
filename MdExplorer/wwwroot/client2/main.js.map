{"version":3,"sources":["./src/app/shared/material.module.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/app-current-folder.service.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core'\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\n\n\n@NgModule({\n    declarations: [],\n    exports: [\n        MatAutocompleteModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatListModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatTreeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatBadgeModule,\n        MatChipsModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatBottomSheetModule,\n        MatDialogModule,\n        MatSnackBarModule,\n        MatTooltipModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatTableModule\n    ]\n})\nexport class MaterialModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { AppCurrentFolderService } from './services/app-current-folder.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'client2';\r\n  constructor(private titleService: Title, private currentFolder: AppCurrentFolderService) {\r\n    currentFolder.folderName.subscribe((data:any) => {\r\n      debugger;\r\n      this.titleService.setTitle(data.currentFolder);\r\n    });\r\n    currentFolder.loadFolderName();\r\n    \r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppCurrentFolderService {\r\n\r\n  private _folderName: BehaviorSubject<string>;\r\n\r\n  private dataStore: {\r\n    folderName: string\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.dataStore = { folderName: 'cucu' }\r\n    this._folderName = new BehaviorSubject<string>('test');\r\n  }\r\n\r\n  get folderName(): Observable<string> {\r\n    return this._folderName.asObservable();\r\n  }\r\n\r\n  loadFolderName() {\r\n    const url = '../api/AppCurrentFolder';\r\n    return this.http.get<string>(url)\r\n      .subscribe(data => {\r\n        this.dataStore.folderName = data;\r\n        this._folderName.next(Object.assign({},this.dataStore).folderName);\r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch working folder name\");\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n//import { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from \"./shared/material.module\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst routes: Routes = [\n  { path: 'main', loadChildren: () => import('./md-explorer/md-explorer.module').then(m => m.MdExplorerModule) },\n  { path: '**', redirectTo: 'main' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes ), //\n    FlexLayoutModule,\n    MaterialModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}