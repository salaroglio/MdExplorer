{"version":3,"sources":["./src/app/md-explorer/services/projects.service.ts","./src/app/md-explorer/services/md-file.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MdProject } from '../models/md-project';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _mdProjects: BehaviorSubject<MdProject[]>;\r\n  get mdProjects() {\r\n    return this._mdProjects.asObservable();\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.dataStore = { mdProjects: [] };\r\n    this._mdProjects = new BehaviorSubject<MdProject[]>([]);\r\n  }\r\n\r\n  private dataStore: {\r\n\r\n    mdProjects: MdProject[]\r\n  }\r\n\r\n  fetchProjects() {\r\n    const url = '../api/MdProjects/GetProjects';\r\n    this.http.get<MdProject[]>(url)\r\n      .subscribe(data => {\r\n        this.dataStore.mdProjects = data;\r\n        this._mdProjects.next(Object.assign({}, this.dataStore).mdProjects);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  setNewFolderProjectQuickNotes(path: string, callback: (data: any, objectThis: any) => any, objectThis: any) {\r\n    const url = '../api/MdProjects/SetFolderProjectQuickNotes';\r\n    this.http.post<any>(url, { path: path }).subscribe(data => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  setNewFolderProject(path: string, callback: (data: any, objectThis: any) => any, objectThis: any) {\r\n    const url = '../api/MdProjects/SetFolderProject';\r\n    this.http.post<any>(url, { path: path }).subscribe(data => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n  deleteProject(project: any, callback: (data: any, objectThis: any) => any, objectThis: any) {\r\n    const url = '../api/MdProjects/DeleteProject';\r\n    this.http.post<any>(url, project).subscribe(data => {\r\n      callback(data, objectThis);\r\n    });\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { promise } from 'protractor';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MdFile } from '../models/md-file';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MdFileService {\r\n\r\n  private _mdFiles: BehaviorSubject<MdFile[]>;\r\n  private _mdFoldersDocument: BehaviorSubject<MdFile[]>;\r\n  public _mdDynFolderDocument: BehaviorSubject<MdFile[]>;\r\n\r\n  private dataStore: {\r\n    mdFiles: MdFile[]\r\n    mdFoldersDocument: MdFile[]\r\n    mdDynFolderDocument:MdFile[]\r\n  }\r\n  constructor(private http: HttpClient) {\r\n    this.dataStore = { mdFiles: [], mdFoldersDocument: [], mdDynFolderDocument:[] };\r\n    this._mdFiles = new BehaviorSubject<MdFile[]>([]);\r\n    this._mdFoldersDocument = new BehaviorSubject<MdFile[]>([]);\r\n    this._mdDynFolderDocument = new BehaviorSubject<MdFile[]>([]);\r\n\r\n  }\r\n\r\n  get mdFiles(): Observable<MdFile[]> {\r\n    return this._mdFiles.asObservable();\r\n  }\r\n  get mdFoldersDocument(): Observable<MdFile[]> {\r\n    return this._mdFoldersDocument.asObservable();\r\n  }\r\n\r\n  get mdDynFolderDocument(): Observable<MdFile[]> {\r\n    return this._mdDynFolderDocument.asObservable();\r\n  }\r\n\r\n  loadAll(callback: (data: any, objectThis: any) => any, objectThis: any) {\r\n    const url = '../api/mdfiles/GetAllMdFiles';\r\n    return this.http.get<MdFile[]>(url)\r\n      .subscribe(data => {\r\n        this.dataStore.mdFiles = data;\r\n        this._mdFiles.next(Object.assign({}, this.dataStore).mdFiles);\r\n        if (callback != null) {\r\n          callback(data, objectThis);\r\n        }        \r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch mdfile list\");\r\n        });\r\n  }\r\n\r\n  loadFolders() {\r\n    const url = '../api/mdfiles/GetFoldersDocument';\r\n    return this.http.get<MdFile[]>(url)\r\n      .subscribe(data => {\r\n        this.dataStore.mdFoldersDocument = data;\r\n        this._mdFoldersDocument.next(Object.assign({}, this.dataStore).mdFoldersDocument);\r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch mdfile list\");\r\n        });\r\n  }\r\n\r\n  loadDynFolders(path:string, level:number) {\r\n    const url = '../api/mdfiles/GetDynFoldersDocument';    \r\n    var params = new HttpParams().set('path', path).set('level', String(level));\r\n    \r\n    return this.http.get<MdFile[]>(url, {params})\r\n      .subscribe(data => {\r\n        if (this.dataStore.mdDynFolderDocument.length > 0) {\r\n          var test = this.dataStore.mdDynFolderDocument.find(_ => _.path == path);\r\n          test.children = data;          \r\n        } else {\r\n          this.dataStore.mdDynFolderDocument = data;\r\n        }\r\n        this._mdDynFolderDocument.next(Object.assign({}, this.dataStore).mdDynFolderDocument);\r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch mdfile list\");\r\n        });\r\n  }\r\n\r\n  loadDocumentFolder(path: string, level: number): Observable<MdFile[]> {\r\n    const url = '../api/mdfiles/GetDynFoldersDocument';\r\n    var params = new HttpParams().set('path', path).set('level', String(level));\r\n\r\n    return this.http.get<MdFile[]>(url, { params });\r\n  }\r\n\r\n\r\n  GetHtml(path: string) { //, currentFile: MdFile\r\n    const url = '../api/mdexplorer/' + path;\r\n    return this.http.get(url, { responseType: 'text' })//, currentFile\r\n      \r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}