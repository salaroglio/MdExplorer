{"version":3,"sources":["./src/app/md-explorer/models/md-file.ts","./src/app/md-explorer/services/md-file.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { IFileInfoNode } from \"./IFileInfoNode\";\r\n\r\n\r\nexport class MdFile implements IFileInfoNode {\r\n  \r\n\r\n  constructor(public name:string,public path:string, public level: number, public expandable:boolean) {\r\n\r\n  }\r\n  \r\n  type: string;\r\n  children: MdFile[];\r\n  isLoading: boolean;\r\n  childrens: MdFile[];\r\n  fullPath: string;\r\n  relativePath: string;\r\n  fullDirectoryPath: string;\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { promise } from 'protractor';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MdFile } from '../models/md-file';\r\nimport { IChangeFileData } from './md-refactoring.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MdFileService {\r\n  \r\n  private _whatDisplayForToolbar: BehaviorSubject<string>;\r\n  private _mdFiles: BehaviorSubject<MdFile[]>;\r\n  private _mdFoldersDocument: BehaviorSubject<MdFile[]>;\r\n  public _mdDynFolderDocument: BehaviorSubject<MdFile[]>;\r\n  public _serverSelectedMdFile: BehaviorSubject<MdFile[]>;\r\n  private _navigationArray: MdFile[] = [];// deve morire\r\n  private _selectedMdFileFromToolbar: BehaviorSubject<MdFile[]>;\r\n  private _selectedMdFileFromSideNav: BehaviorSubject<MdFile>;\r\n\r\n  private dataStore: {\r\n    mdFiles: MdFile[]\r\n    mdFoldersDocument: MdFile[]\r\n    mdDynFolderDocument: MdFile[]\r\n    serverSelectedMdFile: MdFile[]\r\n  }\r\n  constructor(private http: HttpClient) {\r\n\r\n    var defaultSelectedMdFile = [];\r\n    this.dataStore = {\r\n      mdFiles: [],\r\n      mdFoldersDocument: [],\r\n      mdDynFolderDocument: [],\r\n      serverSelectedMdFile: defaultSelectedMdFile\r\n    };\r\n\r\n    this._mdFiles = new BehaviorSubject<MdFile[]>([]);\r\n    this._mdFoldersDocument = new BehaviorSubject<MdFile[]>([]);\r\n    this._mdDynFolderDocument = new BehaviorSubject<MdFile[]>([]);\r\n    this._serverSelectedMdFile = new BehaviorSubject<MdFile[]>([]);\r\n    this._selectedMdFileFromToolbar = new BehaviorSubject<MdFile[]>([]);\r\n    this._selectedMdFileFromSideNav = new BehaviorSubject<MdFile>(null);\r\n    this._whatDisplayForToolbar = new BehaviorSubject<string>('block');\r\n  }\r\n\r\n  get whatDisplayForToolbar(): Observable<string> {\r\n    return this._whatDisplayForToolbar.asObservable();\r\n  }\r\n\r\n  setWhatDisplayForToolbar(value: string) {\r\n    this._whatDisplayForToolbar.next(value);\r\n  }\r\n\r\n  get mdFiles(): Observable<MdFile[]> {\r\n    return this._mdFiles.asObservable();\r\n  }\r\n  get mdFoldersDocument(): Observable<MdFile[]> {\r\n    return this._mdFoldersDocument.asObservable();\r\n  }\r\n\r\n  get mdDynFolderDocument(): Observable<MdFile[]> {\r\n    return this._mdDynFolderDocument.asObservable();\r\n  }\r\n\r\n  get serverSelectedMdFile(): Observable<MdFile[]> {\r\n    return this._serverSelectedMdFile.asObservable();\r\n  }\r\n\r\n  get selectedMdFileFromToolbar(): Observable<MdFile[]> {\r\n    return this._selectedMdFileFromToolbar.asObservable();\r\n  }\r\n\r\n  get selectedMdFileFromSideNav(): Observable<MdFile> {\r\n    return this._selectedMdFileFromSideNav.asObservable();\r\n  }\r\n\r\n  \r\n\r\n  // breadcrumb\r\n  get navigationArray(): MdFile[] {\r\n    return this._navigationArray;\r\n  }\r\n\r\n  set navigationArray(mdFile: MdFile[]) {\r\n    this._navigationArray = mdFile;\r\n  }\r\n\r\n  addNewFile(data: MdFile[]) {\r\n    // searching directories\r\n    debugger;\r\n      var currentItem = data[0];\r\n      let currentFolder = this.dataStore.mdFiles.find(_ => _.fullPath == currentItem.fullPath);\r\n    if (currentFolder != undefined) {\r\n      this.recursiveSearchFolder(data, 0, currentFolder);\r\n    } else {\r\n      if (currentFolder == undefined) { // the file is in the root\r\n        this.dataStore.mdFiles.push(data[0]);\r\n      } else {\r\n        currentFolder.childrens.push(data[0]); // insert new file in folder\r\n      }\r\n      \r\n      this._mdFiles.next(Object.assign({}, this.dataStore).mdFiles);\r\n    }\r\n        \r\n  }\r\n\r\n  recursiveSearchFolder(data: MdFile[], i: number, parentFolder:MdFile) {\r\n    var currentI = i + 1;\r\n    var currentItem = data[currentI];\r\n    let currentFolder = parentFolder.childrens.find(_ => _.fullPath == currentItem.fullPath);\r\n    if (currentFolder != undefined) {\r\n      this.recursiveSearchFolder(data, currentI,currentFolder);\r\n    } else {\r\n      parentFolder.childrens.push(data[currentI]); // insert new file\r\n      this._mdFiles.next(Object.assign({}, this.dataStore).mdFiles);\r\n    }\r\n  }\r\n\r\n\r\n  loadAll(callback: (data: any, objectThis: any) => any, objectThis: any) {    \r\n    const url = '../api/mdfiles/GetAllMdFiles';\r\n    return this.http.get<MdFile[]>(url)\r\n      .subscribe(data => {   \r\n        this.dataStore.mdFiles = data;\r\n        this._mdFiles.next(Object.assign({}, this.dataStore).mdFiles);\r\n        if (callback != null) {\r\n          callback(data, objectThis);\r\n        }        \r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch mdfile list\");\r\n        });\r\n  }\r\n\r\n  loadFolders() {\r\n    const url = '../api/mdfiles/GetFoldersDocument';\r\n    return this.http.get<MdFile[]>(url)\r\n      .subscribe(data => {        \r\n        this.dataStore.mdFoldersDocument = data;\r\n        this._mdFoldersDocument.next(Object.assign({}, this.dataStore).mdFoldersDocument);\r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch mdfile list\");\r\n        });\r\n  }\r\n\r\n  loadDynFolders(path:string, level:number) {\r\n    const url = '../api/mdfiles/GetDynFoldersDocument';    \r\n    var params = new HttpParams().set('path', path).set('level', String(level));\r\n    \r\n    return this.http.get<MdFile[]>(url, {params})\r\n      .subscribe(data => {\r\n        if (this.dataStore.mdDynFolderDocument.length > 0) {\r\n          var test = this.dataStore.mdDynFolderDocument.find(_ => _.path == path);\r\n          test.children = data;          \r\n        } else {\r\n          this.dataStore.mdDynFolderDocument = data;\r\n        }\r\n        this._mdDynFolderDocument.next(Object.assign({}, this.dataStore).mdDynFolderDocument);\r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch mdfile list\");\r\n        });\r\n  }\r\n\r\n  loadDocumentFolder(path: string, level: number): Observable<MdFile[]> {\r\n    const url = '../api/mdfiles/GetDynFoldersDocument';\r\n    var params = new HttpParams().set('path', path).set('level', String(level));\r\n    return this.http.get<MdFile[]>(url, { params });\r\n  }\r\n\r\n\r\n  GetHtml(path: string) { //, currentFile: MdFile\r\n    const url = '../api/mdexplorer/' + path;\r\n    return this.http.get(url, { responseType: 'text' })//, currentFile      \r\n  }\r\n\r\n  CreateNewMd(path: string, title: string, directoryLevel:number) {\r\n    const url = '../api/mdfiles/CreateNewMd';\r\n    var newData = {\r\n      directoryPath: path,\r\n      title: title,\r\n      directoryLevel: directoryLevel,\r\n    }\r\n    return this.http.post<MdFile[]>(url, newData);\r\n  }\r\n\r\n\r\n  fileFoundMd: boolean = false;\r\n \r\n\r\n  /**\r\n   * Funzione di sostituzione di un nodo, con un altro\r\n   * @param oldFile\r\n   * @param newFile\r\n   */\r\n  changeDataStoreMdFiles(oldFile: MdFile, newFile: MdFile) {\r\n    \r\n    var returnFound = this.searchMdFileIntoDataStore(this.dataStore.mdFiles, oldFile);\r\n    var leaf = returnFound[0];\r\n    leaf.name = newFile.name;\r\n    leaf.fullPath = newFile.fullPath;\r\n    leaf.path = newFile.path;\r\n    leaf.relativePath = newFile.relativePath;\r\n    this._mdFiles.next(Object.assign({}, this.dataStore).mdFiles);\r\n    this._serverSelectedMdFile.next(returnFound);\r\n  }\r\n\r\n  setSelectedMdFileFromSideNav(selectedFile: MdFile) {\r\n    this._selectedMdFileFromSideNav.next(selectedFile);\r\n  }\r\n\r\n  setSelectedMdFileFromToolbar(selectedFile: MdFile) {\r\n    let returnFound = this.searchMdFileIntoDataStore(this.dataStore.mdFiles, selectedFile);\r\n    this._selectedMdFileFromToolbar.next(returnFound);\r\n  }\r\n\r\n  setSelectedMdFileFromServer(selectedFile: MdFile) {\r\n    var returnFound = this.searchMdFileIntoDataStore(this.dataStore.mdFiles, selectedFile); \r\n    this._serverSelectedMdFile.next(returnFound);\r\n  }\r\n\r\n\r\n  getMdFileFromDataStore(selectedFile: MdFile):MdFile {\r\n    var returnFound = this.searchMdFileIntoDataStore(this.dataStore.mdFiles, selectedFile);\r\n    return returnFound[0];\r\n  }\r\n\r\n  searchMdFileIntoDataStore(arrayMd: MdFile[], FileToFind: MdFile): MdFile[] {\r\n    this.fileFoundMd = false;    \r\n    var arrayFound: MdFile[]  = [];\r\n    this.recursiveSearch(arrayMd, FileToFind, arrayFound);\r\n    return arrayFound;\r\n  }\r\n\r\n\r\n/**\r\n * Funzione di esplorazione dell'albero per trovare il nodo\r\n * @param arrayMd\r\n * @param oldFile\r\n * @param newFile\r\n */\r\n  recursiveSearch(arrayMd: MdFile[], fileTofind: MdFile, arrayFound: MdFile[]\r\n    //, newFile: MdFile\r\n  ) {\r\n    if (arrayMd.length == 0) {\r\n      return;\r\n    }\r\n    var thatFile = arrayMd.find(_ => _.fullPath.toLowerCase() == fileTofind.fullPath.toLowerCase());\r\n   \r\n    if (thatFile == undefined) {\r\n      for (var i = 0; i < arrayMd.length; i++) {\r\n        var _ = arrayMd[i];\r\n        if (!this.fileFoundMd) {\r\n          this.recursiveSearch(_.childrens, fileTofind, arrayFound);//, newFile\r\n        } \r\n        if (this.fileFoundMd) {\r\n          arrayFound.push(_);\r\n          break;\r\n        }\r\n        \r\n      }\r\n\r\n    } else {      \r\n      this.fileFoundMd = true;\r\n      arrayFound.push(thatFile);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport interface INewFileCreated {  \r\n  newName: string;  \r\n  newPath: string;  \r\n  newLevel: number;\r\n  expandable: boolean;\r\n  relativePath: boolean;\r\n}\r\n"],"sourceRoot":"webpack:///"}