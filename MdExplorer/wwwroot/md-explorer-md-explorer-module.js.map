{"version":3,"sources":["./src/app/md-explorer/md-explorer.module.ts","./src/app/md-explorer/components/toolbar/toolbar.component.ts","./src/app/md-explorer/components/toolbar/toolbar.component.html","./src/app/md-explorer/md-explorer.component.ts","./src/app/md-explorer/components/sidenav/sidenav.component.html","./src/app/md-explorer/components/sidenav/sidenav.component.ts","./src/app/md-explorer/components/main-content/main-content.component.ts","./src/app/md-explorer/components/main-content/main-content.component.html","./src/app/md-explorer/services/md-file.service.ts"],"names":[],"mappings":"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","file":"md-explorer-md-explorer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\nimport { MainContentComponent } from './components/main-content/main-content.component';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MdExplorerComponent } from './md-explorer.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MdFileService } from './services/md-file.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '', component: MdExplorerComponent,\r\n  children: [\r\n    { path: ':path', component: MainContentComponent },\r\n    { path: '', component: MainContentComponent }\r\n  ]\r\n}];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SidenavComponent,\r\n    ToolbarComponent,\r\n    \r\n    MainContentComponent,\r\n    MdExplorerComponent    \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    MdFileService\r\n  ]\r\n})\r\nexport class MdExplorerModule { }\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n  @Output() toggleSidenav = new EventEmitter<void>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\r\n  <button mat-button class=\"sidenav-toggle\" (click)=\"toggleSidenav.emit()\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n\r\n  <span>MdExplorer</span>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-md-explorer',\n  template: `\n   <app-sidenav></app-sidenav>\n  `,\n  styles: [\n  ]\n})\nexport class MdExplorerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container class=\"app-sidenav-container\">\n  <mat-sidenav #sidenav class=\"app-sidenav mat-elevation-z10\"\n               [opened]=\"!isScreenSmall\"\n               [mode]=\"!isScreenSmall ? 'side':'over'\">\n    <mat-toolbar color=\"primary\">Markdown files</mat-toolbar>\n    <mat-nav-list>\n      <mat-list-item *ngFor=\"let mdFile of mdFiles | async\">\n        <a matLine [routerLink]=\"['/main',mdFile.path]\">{{mdFile.name}}</a>\n      </mat-list-item>\n    </mat-nav-list>\n    \n  </mat-sidenav>\n\n\n  <div class=\"app-sidenav-content\">\n    <app-toolbar (toggleSidenav)=\"sidenav.toggle()\"></app-toolbar>\n    <router-outlet></router-outlet>\n\n  </div>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { MdFileService } from '../../services/md-file.service';\r\nimport { Observable } from 'rxjs';\r\nimport { MdFile } from '../../models/md-file';\r\n\r\nconst SMALL_WIDTH_BREAKPOINT = 720;\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n  mdFiles: Observable<MdFile[]>;\r\n\r\n  public isScreenSmall: boolean;\r\n  constructor(private breakpointObserver: BreakpointObserver\r\n    , private mdFileService: MdFileService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.breakpointObserver.observe([`(max-width:${SMALL_WIDTH_BREAKPOINT}px)`])\r\n      .subscribe((state: BreakpointState) => {\r\n        this.isScreenSmall = state.matches\r\n      });\r\n\r\n    this.mdFiles = this.mdFileService.mdFiles;\r\n    this.mdFileService.loadAll();\r\n\r\n    this.mdFiles.subscribe(data => {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MdFile } from '../../models/md-file';\r\nimport { MdFileService } from '../../services/md-file.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-main-content',\r\n  templateUrl: './main-content.component.html',\r\n  styleUrls: ['./main-content.component.scss']\r\n})\r\nexport class MainContentComponent implements OnInit {\r\n\r\n  mdFile: MdFile;\r\n  html: string;\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private service: MdFileService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      const path = params['path'];\r\n      if (path != undefined) {\r\n        this.service.GetHtml(path).subscribe(data => {\r\n          debugger;\r\n          this.html = data;\r\n        });\r\n      }      \r\n    });\r\n  }\r\n\r\n}\r\n","<div [innerHtml]=\"html\"></div>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MdFile } from '../models/md-file';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MdFileService {\r\n\r\n  private _mdFiles: BehaviorSubject<MdFile[]>;\r\n\r\n  private dataStore: {\r\n    mdFiles: MdFile[]\r\n  }\r\n  constructor(private http: HttpClient) {\r\n    this.dataStore = { mdFiles: [] };\r\n    this._mdFiles = new BehaviorSubject<MdFile[]>([]);\r\n\r\n  }\r\n\r\n  get mdFiles(): Observable<MdFile[]> {\r\n    return this._mdFiles.asObservable();\r\n  }\r\n\r\n\r\n\r\n  loadAll() {\r\n    const url = '/api/mdfiles';\r\n    return this.http.get<MdFile[]>(url)\r\n      .subscribe(data => {\r\n        this.dataStore.mdFiles = data;\r\n        this._mdFiles.next(Object.assign({}, this.dataStore).mdFiles);\r\n      },\r\n        error => {\r\n          console.log(\"failed to fetch mdfile list\");\r\n        });\r\n  }\r\n\r\n  GetHtml(path: string) { //, currentFile: MdFile\r\n    const url = 'api/mdexplorer/' + path;\r\n    return this.http.get(url, { responseType: 'text' })//, currentFile\r\n      \r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}